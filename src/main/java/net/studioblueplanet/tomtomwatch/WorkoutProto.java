// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: workout.proto

package net.studioblueplanet.tomtomwatch;

public final class WorkoutProto {
  private WorkoutProto() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistryLite registry) {
  }

  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
    registerAllExtensions(
        (com.google.protobuf.ExtensionRegistryLite) registry);
  }
  public interface RootOrBuilder extends
      // @@protoc_insertion_point(interface_extends:tutorial.Root)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>repeated .tutorial.RootContainer rootContainer = 1;</code>
     */
    java.util.List<net.studioblueplanet.tomtomwatch.WorkoutProto.RootContainer> 
        getRootContainerList();
    /**
     * <code>repeated .tutorial.RootContainer rootContainer = 1;</code>
     */
    net.studioblueplanet.tomtomwatch.WorkoutProto.RootContainer getRootContainer(int index);
    /**
     * <code>repeated .tutorial.RootContainer rootContainer = 1;</code>
     */
    int getRootContainerCount();
    /**
     * <code>repeated .tutorial.RootContainer rootContainer = 1;</code>
     */
    java.util.List<? extends net.studioblueplanet.tomtomwatch.WorkoutProto.RootContainerOrBuilder> 
        getRootContainerOrBuilderList();
    /**
     * <code>repeated .tutorial.RootContainer rootContainer = 1;</code>
     */
    net.studioblueplanet.tomtomwatch.WorkoutProto.RootContainerOrBuilder getRootContainerOrBuilder(
        int index);
  }
  /**
   * <pre>
   *#################################################################################################
   * ROOT level
   *#################################################################################################
   * </pre>
   *
   * Protobuf type {@code tutorial.Root}
   */
  public  static final class Root extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:tutorial.Root)
      RootOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use Root.newBuilder() to construct.
    private Root(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private Root() {
      rootContainer_ = java.util.Collections.emptyList();
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new Root();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private Root(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 10: {
              if (!((mutable_bitField0_ & 0x00000001) != 0)) {
                rootContainer_ = new java.util.ArrayList<net.studioblueplanet.tomtomwatch.WorkoutProto.RootContainer>();
                mutable_bitField0_ |= 0x00000001;
              }
              rootContainer_.add(
                  input.readMessage(net.studioblueplanet.tomtomwatch.WorkoutProto.RootContainer.PARSER, extensionRegistry));
              break;
            }
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000001) != 0)) {
          rootContainer_ = java.util.Collections.unmodifiableList(rootContainer_);
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return net.studioblueplanet.tomtomwatch.WorkoutProto.internal_static_tutorial_Root_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return net.studioblueplanet.tomtomwatch.WorkoutProto.internal_static_tutorial_Root_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              net.studioblueplanet.tomtomwatch.WorkoutProto.Root.class, net.studioblueplanet.tomtomwatch.WorkoutProto.Root.Builder.class);
    }

    public static final int ROOTCONTAINER_FIELD_NUMBER = 1;
    private java.util.List<net.studioblueplanet.tomtomwatch.WorkoutProto.RootContainer> rootContainer_;
    /**
     * <code>repeated .tutorial.RootContainer rootContainer = 1;</code>
     */
    public java.util.List<net.studioblueplanet.tomtomwatch.WorkoutProto.RootContainer> getRootContainerList() {
      return rootContainer_;
    }
    /**
     * <code>repeated .tutorial.RootContainer rootContainer = 1;</code>
     */
    public java.util.List<? extends net.studioblueplanet.tomtomwatch.WorkoutProto.RootContainerOrBuilder> 
        getRootContainerOrBuilderList() {
      return rootContainer_;
    }
    /**
     * <code>repeated .tutorial.RootContainer rootContainer = 1;</code>
     */
    public int getRootContainerCount() {
      return rootContainer_.size();
    }
    /**
     * <code>repeated .tutorial.RootContainer rootContainer = 1;</code>
     */
    public net.studioblueplanet.tomtomwatch.WorkoutProto.RootContainer getRootContainer(int index) {
      return rootContainer_.get(index);
    }
    /**
     * <code>repeated .tutorial.RootContainer rootContainer = 1;</code>
     */
    public net.studioblueplanet.tomtomwatch.WorkoutProto.RootContainerOrBuilder getRootContainerOrBuilder(
        int index) {
      return rootContainer_.get(index);
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      for (int i = 0; i < getRootContainerCount(); i++) {
        if (!getRootContainer(i).isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      for (int i = 0; i < rootContainer_.size(); i++) {
        output.writeMessage(1, rootContainer_.get(i));
      }
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      for (int i = 0; i < rootContainer_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, rootContainer_.get(i));
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof net.studioblueplanet.tomtomwatch.WorkoutProto.Root)) {
        return super.equals(obj);
      }
      net.studioblueplanet.tomtomwatch.WorkoutProto.Root other = (net.studioblueplanet.tomtomwatch.WorkoutProto.Root) obj;

      if (!getRootContainerList()
          .equals(other.getRootContainerList())) return false;
      if (!unknownFields.equals(other.unknownFields)) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (getRootContainerCount() > 0) {
        hash = (37 * hash) + ROOTCONTAINER_FIELD_NUMBER;
        hash = (53 * hash) + getRootContainerList().hashCode();
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static net.studioblueplanet.tomtomwatch.WorkoutProto.Root parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static net.studioblueplanet.tomtomwatch.WorkoutProto.Root parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static net.studioblueplanet.tomtomwatch.WorkoutProto.Root parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static net.studioblueplanet.tomtomwatch.WorkoutProto.Root parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static net.studioblueplanet.tomtomwatch.WorkoutProto.Root parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static net.studioblueplanet.tomtomwatch.WorkoutProto.Root parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static net.studioblueplanet.tomtomwatch.WorkoutProto.Root parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static net.studioblueplanet.tomtomwatch.WorkoutProto.Root parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static net.studioblueplanet.tomtomwatch.WorkoutProto.Root parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static net.studioblueplanet.tomtomwatch.WorkoutProto.Root parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static net.studioblueplanet.tomtomwatch.WorkoutProto.Root parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static net.studioblueplanet.tomtomwatch.WorkoutProto.Root parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(net.studioblueplanet.tomtomwatch.WorkoutProto.Root prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     *#################################################################################################
     * ROOT level
     *#################################################################################################
     * </pre>
     *
     * Protobuf type {@code tutorial.Root}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:tutorial.Root)
        net.studioblueplanet.tomtomwatch.WorkoutProto.RootOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return net.studioblueplanet.tomtomwatch.WorkoutProto.internal_static_tutorial_Root_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return net.studioblueplanet.tomtomwatch.WorkoutProto.internal_static_tutorial_Root_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                net.studioblueplanet.tomtomwatch.WorkoutProto.Root.class, net.studioblueplanet.tomtomwatch.WorkoutProto.Root.Builder.class);
      }

      // Construct using net.studioblueplanet.tomtomwatch.WorkoutProto.Root.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
          getRootContainerFieldBuilder();
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        if (rootContainerBuilder_ == null) {
          rootContainer_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000001);
        } else {
          rootContainerBuilder_.clear();
        }
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return net.studioblueplanet.tomtomwatch.WorkoutProto.internal_static_tutorial_Root_descriptor;
      }

      @java.lang.Override
      public net.studioblueplanet.tomtomwatch.WorkoutProto.Root getDefaultInstanceForType() {
        return net.studioblueplanet.tomtomwatch.WorkoutProto.Root.getDefaultInstance();
      }

      @java.lang.Override
      public net.studioblueplanet.tomtomwatch.WorkoutProto.Root build() {
        net.studioblueplanet.tomtomwatch.WorkoutProto.Root result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public net.studioblueplanet.tomtomwatch.WorkoutProto.Root buildPartial() {
        net.studioblueplanet.tomtomwatch.WorkoutProto.Root result = new net.studioblueplanet.tomtomwatch.WorkoutProto.Root(this);
        int from_bitField0_ = bitField0_;
        if (rootContainerBuilder_ == null) {
          if (((bitField0_ & 0x00000001) != 0)) {
            rootContainer_ = java.util.Collections.unmodifiableList(rootContainer_);
            bitField0_ = (bitField0_ & ~0x00000001);
          }
          result.rootContainer_ = rootContainer_;
        } else {
          result.rootContainer_ = rootContainerBuilder_.build();
        }
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof net.studioblueplanet.tomtomwatch.WorkoutProto.Root) {
          return mergeFrom((net.studioblueplanet.tomtomwatch.WorkoutProto.Root)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(net.studioblueplanet.tomtomwatch.WorkoutProto.Root other) {
        if (other == net.studioblueplanet.tomtomwatch.WorkoutProto.Root.getDefaultInstance()) return this;
        if (rootContainerBuilder_ == null) {
          if (!other.rootContainer_.isEmpty()) {
            if (rootContainer_.isEmpty()) {
              rootContainer_ = other.rootContainer_;
              bitField0_ = (bitField0_ & ~0x00000001);
            } else {
              ensureRootContainerIsMutable();
              rootContainer_.addAll(other.rootContainer_);
            }
            onChanged();
          }
        } else {
          if (!other.rootContainer_.isEmpty()) {
            if (rootContainerBuilder_.isEmpty()) {
              rootContainerBuilder_.dispose();
              rootContainerBuilder_ = null;
              rootContainer_ = other.rootContainer_;
              bitField0_ = (bitField0_ & ~0x00000001);
              rootContainerBuilder_ = 
                com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                   getRootContainerFieldBuilder() : null;
            } else {
              rootContainerBuilder_.addAllMessages(other.rootContainer_);
            }
          }
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        for (int i = 0; i < getRootContainerCount(); i++) {
          if (!getRootContainer(i).isInitialized()) {
            return false;
          }
        }
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        net.studioblueplanet.tomtomwatch.WorkoutProto.Root parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (net.studioblueplanet.tomtomwatch.WorkoutProto.Root) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private java.util.List<net.studioblueplanet.tomtomwatch.WorkoutProto.RootContainer> rootContainer_ =
        java.util.Collections.emptyList();
      private void ensureRootContainerIsMutable() {
        if (!((bitField0_ & 0x00000001) != 0)) {
          rootContainer_ = new java.util.ArrayList<net.studioblueplanet.tomtomwatch.WorkoutProto.RootContainer>(rootContainer_);
          bitField0_ |= 0x00000001;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilderV3<
          net.studioblueplanet.tomtomwatch.WorkoutProto.RootContainer, net.studioblueplanet.tomtomwatch.WorkoutProto.RootContainer.Builder, net.studioblueplanet.tomtomwatch.WorkoutProto.RootContainerOrBuilder> rootContainerBuilder_;

      /**
       * <code>repeated .tutorial.RootContainer rootContainer = 1;</code>
       */
      public java.util.List<net.studioblueplanet.tomtomwatch.WorkoutProto.RootContainer> getRootContainerList() {
        if (rootContainerBuilder_ == null) {
          return java.util.Collections.unmodifiableList(rootContainer_);
        } else {
          return rootContainerBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .tutorial.RootContainer rootContainer = 1;</code>
       */
      public int getRootContainerCount() {
        if (rootContainerBuilder_ == null) {
          return rootContainer_.size();
        } else {
          return rootContainerBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .tutorial.RootContainer rootContainer = 1;</code>
       */
      public net.studioblueplanet.tomtomwatch.WorkoutProto.RootContainer getRootContainer(int index) {
        if (rootContainerBuilder_ == null) {
          return rootContainer_.get(index);
        } else {
          return rootContainerBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .tutorial.RootContainer rootContainer = 1;</code>
       */
      public Builder setRootContainer(
          int index, net.studioblueplanet.tomtomwatch.WorkoutProto.RootContainer value) {
        if (rootContainerBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureRootContainerIsMutable();
          rootContainer_.set(index, value);
          onChanged();
        } else {
          rootContainerBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .tutorial.RootContainer rootContainer = 1;</code>
       */
      public Builder setRootContainer(
          int index, net.studioblueplanet.tomtomwatch.WorkoutProto.RootContainer.Builder builderForValue) {
        if (rootContainerBuilder_ == null) {
          ensureRootContainerIsMutable();
          rootContainer_.set(index, builderForValue.build());
          onChanged();
        } else {
          rootContainerBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .tutorial.RootContainer rootContainer = 1;</code>
       */
      public Builder addRootContainer(net.studioblueplanet.tomtomwatch.WorkoutProto.RootContainer value) {
        if (rootContainerBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureRootContainerIsMutable();
          rootContainer_.add(value);
          onChanged();
        } else {
          rootContainerBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .tutorial.RootContainer rootContainer = 1;</code>
       */
      public Builder addRootContainer(
          int index, net.studioblueplanet.tomtomwatch.WorkoutProto.RootContainer value) {
        if (rootContainerBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureRootContainerIsMutable();
          rootContainer_.add(index, value);
          onChanged();
        } else {
          rootContainerBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .tutorial.RootContainer rootContainer = 1;</code>
       */
      public Builder addRootContainer(
          net.studioblueplanet.tomtomwatch.WorkoutProto.RootContainer.Builder builderForValue) {
        if (rootContainerBuilder_ == null) {
          ensureRootContainerIsMutable();
          rootContainer_.add(builderForValue.build());
          onChanged();
        } else {
          rootContainerBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .tutorial.RootContainer rootContainer = 1;</code>
       */
      public Builder addRootContainer(
          int index, net.studioblueplanet.tomtomwatch.WorkoutProto.RootContainer.Builder builderForValue) {
        if (rootContainerBuilder_ == null) {
          ensureRootContainerIsMutable();
          rootContainer_.add(index, builderForValue.build());
          onChanged();
        } else {
          rootContainerBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .tutorial.RootContainer rootContainer = 1;</code>
       */
      public Builder addAllRootContainer(
          java.lang.Iterable<? extends net.studioblueplanet.tomtomwatch.WorkoutProto.RootContainer> values) {
        if (rootContainerBuilder_ == null) {
          ensureRootContainerIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, rootContainer_);
          onChanged();
        } else {
          rootContainerBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .tutorial.RootContainer rootContainer = 1;</code>
       */
      public Builder clearRootContainer() {
        if (rootContainerBuilder_ == null) {
          rootContainer_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000001);
          onChanged();
        } else {
          rootContainerBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .tutorial.RootContainer rootContainer = 1;</code>
       */
      public Builder removeRootContainer(int index) {
        if (rootContainerBuilder_ == null) {
          ensureRootContainerIsMutable();
          rootContainer_.remove(index);
          onChanged();
        } else {
          rootContainerBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .tutorial.RootContainer rootContainer = 1;</code>
       */
      public net.studioblueplanet.tomtomwatch.WorkoutProto.RootContainer.Builder getRootContainerBuilder(
          int index) {
        return getRootContainerFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .tutorial.RootContainer rootContainer = 1;</code>
       */
      public net.studioblueplanet.tomtomwatch.WorkoutProto.RootContainerOrBuilder getRootContainerOrBuilder(
          int index) {
        if (rootContainerBuilder_ == null) {
          return rootContainer_.get(index);  } else {
          return rootContainerBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .tutorial.RootContainer rootContainer = 1;</code>
       */
      public java.util.List<? extends net.studioblueplanet.tomtomwatch.WorkoutProto.RootContainerOrBuilder> 
           getRootContainerOrBuilderList() {
        if (rootContainerBuilder_ != null) {
          return rootContainerBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(rootContainer_);
        }
      }
      /**
       * <code>repeated .tutorial.RootContainer rootContainer = 1;</code>
       */
      public net.studioblueplanet.tomtomwatch.WorkoutProto.RootContainer.Builder addRootContainerBuilder() {
        return getRootContainerFieldBuilder().addBuilder(
            net.studioblueplanet.tomtomwatch.WorkoutProto.RootContainer.getDefaultInstance());
      }
      /**
       * <code>repeated .tutorial.RootContainer rootContainer = 1;</code>
       */
      public net.studioblueplanet.tomtomwatch.WorkoutProto.RootContainer.Builder addRootContainerBuilder(
          int index) {
        return getRootContainerFieldBuilder().addBuilder(
            index, net.studioblueplanet.tomtomwatch.WorkoutProto.RootContainer.getDefaultInstance());
      }
      /**
       * <code>repeated .tutorial.RootContainer rootContainer = 1;</code>
       */
      public java.util.List<net.studioblueplanet.tomtomwatch.WorkoutProto.RootContainer.Builder> 
           getRootContainerBuilderList() {
        return getRootContainerFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilderV3<
          net.studioblueplanet.tomtomwatch.WorkoutProto.RootContainer, net.studioblueplanet.tomtomwatch.WorkoutProto.RootContainer.Builder, net.studioblueplanet.tomtomwatch.WorkoutProto.RootContainerOrBuilder> 
          getRootContainerFieldBuilder() {
        if (rootContainerBuilder_ == null) {
          rootContainerBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
              net.studioblueplanet.tomtomwatch.WorkoutProto.RootContainer, net.studioblueplanet.tomtomwatch.WorkoutProto.RootContainer.Builder, net.studioblueplanet.tomtomwatch.WorkoutProto.RootContainerOrBuilder>(
                  rootContainer_,
                  ((bitField0_ & 0x00000001) != 0),
                  getParentForChildren(),
                  isClean());
          rootContainer_ = null;
        }
        return rootContainerBuilder_;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:tutorial.Root)
    }

    // @@protoc_insertion_point(class_scope:tutorial.Root)
    private static final net.studioblueplanet.tomtomwatch.WorkoutProto.Root DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new net.studioblueplanet.tomtomwatch.WorkoutProto.Root();
    }

    public static net.studioblueplanet.tomtomwatch.WorkoutProto.Root getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    @java.lang.Deprecated public static final com.google.protobuf.Parser<Root>
        PARSER = new com.google.protobuf.AbstractParser<Root>() {
      @java.lang.Override
      public Root parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new Root(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<Root> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<Root> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public net.studioblueplanet.tomtomwatch.WorkoutProto.Root getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface RootContainerOrBuilder extends
      // @@protoc_insertion_point(interface_extends:tutorial.RootContainer)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>optional .tutorial.Metadata metadata = 7;</code>
     */
    boolean hasMetadata();
    /**
     * <code>optional .tutorial.Metadata metadata = 7;</code>
     */
    net.studioblueplanet.tomtomwatch.WorkoutProto.Metadata getMetadata();
    /**
     * <code>optional .tutorial.Metadata metadata = 7;</code>
     */
    net.studioblueplanet.tomtomwatch.WorkoutProto.MetadataOrBuilder getMetadataOrBuilder();

    /**
     * <code>optional .tutorial.DataContainer dataContainer = 8;</code>
     */
    boolean hasDataContainer();
    /**
     * <code>optional .tutorial.DataContainer dataContainer = 8;</code>
     */
    net.studioblueplanet.tomtomwatch.WorkoutProto.DataContainer getDataContainer();
    /**
     * <code>optional .tutorial.DataContainer dataContainer = 8;</code>
     */
    net.studioblueplanet.tomtomwatch.WorkoutProto.DataContainerOrBuilder getDataContainerOrBuilder();
  }
  /**
   * Protobuf type {@code tutorial.RootContainer}
   */
  public  static final class RootContainer extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:tutorial.RootContainer)
      RootContainerOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use RootContainer.newBuilder() to construct.
    private RootContainer(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private RootContainer() {
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new RootContainer();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private RootContainer(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 58: {
              net.studioblueplanet.tomtomwatch.WorkoutProto.Metadata.Builder subBuilder = null;
              if (((bitField0_ & 0x00000001) != 0)) {
                subBuilder = metadata_.toBuilder();
              }
              metadata_ = input.readMessage(net.studioblueplanet.tomtomwatch.WorkoutProto.Metadata.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(metadata_);
                metadata_ = subBuilder.buildPartial();
              }
              bitField0_ |= 0x00000001;
              break;
            }
            case 66: {
              net.studioblueplanet.tomtomwatch.WorkoutProto.DataContainer.Builder subBuilder = null;
              if (((bitField0_ & 0x00000002) != 0)) {
                subBuilder = dataContainer_.toBuilder();
              }
              dataContainer_ = input.readMessage(net.studioblueplanet.tomtomwatch.WorkoutProto.DataContainer.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(dataContainer_);
                dataContainer_ = subBuilder.buildPartial();
              }
              bitField0_ |= 0x00000002;
              break;
            }
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return net.studioblueplanet.tomtomwatch.WorkoutProto.internal_static_tutorial_RootContainer_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return net.studioblueplanet.tomtomwatch.WorkoutProto.internal_static_tutorial_RootContainer_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              net.studioblueplanet.tomtomwatch.WorkoutProto.RootContainer.class, net.studioblueplanet.tomtomwatch.WorkoutProto.RootContainer.Builder.class);
    }

    private int bitField0_;
    public static final int METADATA_FIELD_NUMBER = 7;
    private net.studioblueplanet.tomtomwatch.WorkoutProto.Metadata metadata_;
    /**
     * <code>optional .tutorial.Metadata metadata = 7;</code>
     */
    public boolean hasMetadata() {
      return ((bitField0_ & 0x00000001) != 0);
    }
    /**
     * <code>optional .tutorial.Metadata metadata = 7;</code>
     */
    public net.studioblueplanet.tomtomwatch.WorkoutProto.Metadata getMetadata() {
      return metadata_ == null ? net.studioblueplanet.tomtomwatch.WorkoutProto.Metadata.getDefaultInstance() : metadata_;
    }
    /**
     * <code>optional .tutorial.Metadata metadata = 7;</code>
     */
    public net.studioblueplanet.tomtomwatch.WorkoutProto.MetadataOrBuilder getMetadataOrBuilder() {
      return metadata_ == null ? net.studioblueplanet.tomtomwatch.WorkoutProto.Metadata.getDefaultInstance() : metadata_;
    }

    public static final int DATACONTAINER_FIELD_NUMBER = 8;
    private net.studioblueplanet.tomtomwatch.WorkoutProto.DataContainer dataContainer_;
    /**
     * <code>optional .tutorial.DataContainer dataContainer = 8;</code>
     */
    public boolean hasDataContainer() {
      return ((bitField0_ & 0x00000002) != 0);
    }
    /**
     * <code>optional .tutorial.DataContainer dataContainer = 8;</code>
     */
    public net.studioblueplanet.tomtomwatch.WorkoutProto.DataContainer getDataContainer() {
      return dataContainer_ == null ? net.studioblueplanet.tomtomwatch.WorkoutProto.DataContainer.getDefaultInstance() : dataContainer_;
    }
    /**
     * <code>optional .tutorial.DataContainer dataContainer = 8;</code>
     */
    public net.studioblueplanet.tomtomwatch.WorkoutProto.DataContainerOrBuilder getDataContainerOrBuilder() {
      return dataContainer_ == null ? net.studioblueplanet.tomtomwatch.WorkoutProto.DataContainer.getDefaultInstance() : dataContainer_;
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      if (hasMetadata()) {
        if (!getMetadata().isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      if (hasDataContainer()) {
        if (!getDataContainer().isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (((bitField0_ & 0x00000001) != 0)) {
        output.writeMessage(7, getMetadata());
      }
      if (((bitField0_ & 0x00000002) != 0)) {
        output.writeMessage(8, getDataContainer());
      }
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(7, getMetadata());
      }
      if (((bitField0_ & 0x00000002) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(8, getDataContainer());
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof net.studioblueplanet.tomtomwatch.WorkoutProto.RootContainer)) {
        return super.equals(obj);
      }
      net.studioblueplanet.tomtomwatch.WorkoutProto.RootContainer other = (net.studioblueplanet.tomtomwatch.WorkoutProto.RootContainer) obj;

      if (hasMetadata() != other.hasMetadata()) return false;
      if (hasMetadata()) {
        if (!getMetadata()
            .equals(other.getMetadata())) return false;
      }
      if (hasDataContainer() != other.hasDataContainer()) return false;
      if (hasDataContainer()) {
        if (!getDataContainer()
            .equals(other.getDataContainer())) return false;
      }
      if (!unknownFields.equals(other.unknownFields)) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (hasMetadata()) {
        hash = (37 * hash) + METADATA_FIELD_NUMBER;
        hash = (53 * hash) + getMetadata().hashCode();
      }
      if (hasDataContainer()) {
        hash = (37 * hash) + DATACONTAINER_FIELD_NUMBER;
        hash = (53 * hash) + getDataContainer().hashCode();
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static net.studioblueplanet.tomtomwatch.WorkoutProto.RootContainer parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static net.studioblueplanet.tomtomwatch.WorkoutProto.RootContainer parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static net.studioblueplanet.tomtomwatch.WorkoutProto.RootContainer parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static net.studioblueplanet.tomtomwatch.WorkoutProto.RootContainer parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static net.studioblueplanet.tomtomwatch.WorkoutProto.RootContainer parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static net.studioblueplanet.tomtomwatch.WorkoutProto.RootContainer parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static net.studioblueplanet.tomtomwatch.WorkoutProto.RootContainer parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static net.studioblueplanet.tomtomwatch.WorkoutProto.RootContainer parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static net.studioblueplanet.tomtomwatch.WorkoutProto.RootContainer parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static net.studioblueplanet.tomtomwatch.WorkoutProto.RootContainer parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static net.studioblueplanet.tomtomwatch.WorkoutProto.RootContainer parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static net.studioblueplanet.tomtomwatch.WorkoutProto.RootContainer parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(net.studioblueplanet.tomtomwatch.WorkoutProto.RootContainer prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code tutorial.RootContainer}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:tutorial.RootContainer)
        net.studioblueplanet.tomtomwatch.WorkoutProto.RootContainerOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return net.studioblueplanet.tomtomwatch.WorkoutProto.internal_static_tutorial_RootContainer_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return net.studioblueplanet.tomtomwatch.WorkoutProto.internal_static_tutorial_RootContainer_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                net.studioblueplanet.tomtomwatch.WorkoutProto.RootContainer.class, net.studioblueplanet.tomtomwatch.WorkoutProto.RootContainer.Builder.class);
      }

      // Construct using net.studioblueplanet.tomtomwatch.WorkoutProto.RootContainer.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
          getMetadataFieldBuilder();
          getDataContainerFieldBuilder();
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        if (metadataBuilder_ == null) {
          metadata_ = null;
        } else {
          metadataBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000001);
        if (dataContainerBuilder_ == null) {
          dataContainer_ = null;
        } else {
          dataContainerBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000002);
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return net.studioblueplanet.tomtomwatch.WorkoutProto.internal_static_tutorial_RootContainer_descriptor;
      }

      @java.lang.Override
      public net.studioblueplanet.tomtomwatch.WorkoutProto.RootContainer getDefaultInstanceForType() {
        return net.studioblueplanet.tomtomwatch.WorkoutProto.RootContainer.getDefaultInstance();
      }

      @java.lang.Override
      public net.studioblueplanet.tomtomwatch.WorkoutProto.RootContainer build() {
        net.studioblueplanet.tomtomwatch.WorkoutProto.RootContainer result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public net.studioblueplanet.tomtomwatch.WorkoutProto.RootContainer buildPartial() {
        net.studioblueplanet.tomtomwatch.WorkoutProto.RootContainer result = new net.studioblueplanet.tomtomwatch.WorkoutProto.RootContainer(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) != 0)) {
          if (metadataBuilder_ == null) {
            result.metadata_ = metadata_;
          } else {
            result.metadata_ = metadataBuilder_.build();
          }
          to_bitField0_ |= 0x00000001;
        }
        if (((from_bitField0_ & 0x00000002) != 0)) {
          if (dataContainerBuilder_ == null) {
            result.dataContainer_ = dataContainer_;
          } else {
            result.dataContainer_ = dataContainerBuilder_.build();
          }
          to_bitField0_ |= 0x00000002;
        }
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof net.studioblueplanet.tomtomwatch.WorkoutProto.RootContainer) {
          return mergeFrom((net.studioblueplanet.tomtomwatch.WorkoutProto.RootContainer)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(net.studioblueplanet.tomtomwatch.WorkoutProto.RootContainer other) {
        if (other == net.studioblueplanet.tomtomwatch.WorkoutProto.RootContainer.getDefaultInstance()) return this;
        if (other.hasMetadata()) {
          mergeMetadata(other.getMetadata());
        }
        if (other.hasDataContainer()) {
          mergeDataContainer(other.getDataContainer());
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        if (hasMetadata()) {
          if (!getMetadata().isInitialized()) {
            return false;
          }
        }
        if (hasDataContainer()) {
          if (!getDataContainer().isInitialized()) {
            return false;
          }
        }
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        net.studioblueplanet.tomtomwatch.WorkoutProto.RootContainer parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (net.studioblueplanet.tomtomwatch.WorkoutProto.RootContainer) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private net.studioblueplanet.tomtomwatch.WorkoutProto.Metadata metadata_;
      private com.google.protobuf.SingleFieldBuilderV3<
          net.studioblueplanet.tomtomwatch.WorkoutProto.Metadata, net.studioblueplanet.tomtomwatch.WorkoutProto.Metadata.Builder, net.studioblueplanet.tomtomwatch.WorkoutProto.MetadataOrBuilder> metadataBuilder_;
      /**
       * <code>optional .tutorial.Metadata metadata = 7;</code>
       */
      public boolean hasMetadata() {
        return ((bitField0_ & 0x00000001) != 0);
      }
      /**
       * <code>optional .tutorial.Metadata metadata = 7;</code>
       */
      public net.studioblueplanet.tomtomwatch.WorkoutProto.Metadata getMetadata() {
        if (metadataBuilder_ == null) {
          return metadata_ == null ? net.studioblueplanet.tomtomwatch.WorkoutProto.Metadata.getDefaultInstance() : metadata_;
        } else {
          return metadataBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .tutorial.Metadata metadata = 7;</code>
       */
      public Builder setMetadata(net.studioblueplanet.tomtomwatch.WorkoutProto.Metadata value) {
        if (metadataBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          metadata_ = value;
          onChanged();
        } else {
          metadataBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000001;
        return this;
      }
      /**
       * <code>optional .tutorial.Metadata metadata = 7;</code>
       */
      public Builder setMetadata(
          net.studioblueplanet.tomtomwatch.WorkoutProto.Metadata.Builder builderForValue) {
        if (metadataBuilder_ == null) {
          metadata_ = builderForValue.build();
          onChanged();
        } else {
          metadataBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000001;
        return this;
      }
      /**
       * <code>optional .tutorial.Metadata metadata = 7;</code>
       */
      public Builder mergeMetadata(net.studioblueplanet.tomtomwatch.WorkoutProto.Metadata value) {
        if (metadataBuilder_ == null) {
          if (((bitField0_ & 0x00000001) != 0) &&
              metadata_ != null &&
              metadata_ != net.studioblueplanet.tomtomwatch.WorkoutProto.Metadata.getDefaultInstance()) {
            metadata_ =
              net.studioblueplanet.tomtomwatch.WorkoutProto.Metadata.newBuilder(metadata_).mergeFrom(value).buildPartial();
          } else {
            metadata_ = value;
          }
          onChanged();
        } else {
          metadataBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000001;
        return this;
      }
      /**
       * <code>optional .tutorial.Metadata metadata = 7;</code>
       */
      public Builder clearMetadata() {
        if (metadataBuilder_ == null) {
          metadata_ = null;
          onChanged();
        } else {
          metadataBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000001);
        return this;
      }
      /**
       * <code>optional .tutorial.Metadata metadata = 7;</code>
       */
      public net.studioblueplanet.tomtomwatch.WorkoutProto.Metadata.Builder getMetadataBuilder() {
        bitField0_ |= 0x00000001;
        onChanged();
        return getMetadataFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .tutorial.Metadata metadata = 7;</code>
       */
      public net.studioblueplanet.tomtomwatch.WorkoutProto.MetadataOrBuilder getMetadataOrBuilder() {
        if (metadataBuilder_ != null) {
          return metadataBuilder_.getMessageOrBuilder();
        } else {
          return metadata_ == null ?
              net.studioblueplanet.tomtomwatch.WorkoutProto.Metadata.getDefaultInstance() : metadata_;
        }
      }
      /**
       * <code>optional .tutorial.Metadata metadata = 7;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          net.studioblueplanet.tomtomwatch.WorkoutProto.Metadata, net.studioblueplanet.tomtomwatch.WorkoutProto.Metadata.Builder, net.studioblueplanet.tomtomwatch.WorkoutProto.MetadataOrBuilder> 
          getMetadataFieldBuilder() {
        if (metadataBuilder_ == null) {
          metadataBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              net.studioblueplanet.tomtomwatch.WorkoutProto.Metadata, net.studioblueplanet.tomtomwatch.WorkoutProto.Metadata.Builder, net.studioblueplanet.tomtomwatch.WorkoutProto.MetadataOrBuilder>(
                  getMetadata(),
                  getParentForChildren(),
                  isClean());
          metadata_ = null;
        }
        return metadataBuilder_;
      }

      private net.studioblueplanet.tomtomwatch.WorkoutProto.DataContainer dataContainer_;
      private com.google.protobuf.SingleFieldBuilderV3<
          net.studioblueplanet.tomtomwatch.WorkoutProto.DataContainer, net.studioblueplanet.tomtomwatch.WorkoutProto.DataContainer.Builder, net.studioblueplanet.tomtomwatch.WorkoutProto.DataContainerOrBuilder> dataContainerBuilder_;
      /**
       * <code>optional .tutorial.DataContainer dataContainer = 8;</code>
       */
      public boolean hasDataContainer() {
        return ((bitField0_ & 0x00000002) != 0);
      }
      /**
       * <code>optional .tutorial.DataContainer dataContainer = 8;</code>
       */
      public net.studioblueplanet.tomtomwatch.WorkoutProto.DataContainer getDataContainer() {
        if (dataContainerBuilder_ == null) {
          return dataContainer_ == null ? net.studioblueplanet.tomtomwatch.WorkoutProto.DataContainer.getDefaultInstance() : dataContainer_;
        } else {
          return dataContainerBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .tutorial.DataContainer dataContainer = 8;</code>
       */
      public Builder setDataContainer(net.studioblueplanet.tomtomwatch.WorkoutProto.DataContainer value) {
        if (dataContainerBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          dataContainer_ = value;
          onChanged();
        } else {
          dataContainerBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000002;
        return this;
      }
      /**
       * <code>optional .tutorial.DataContainer dataContainer = 8;</code>
       */
      public Builder setDataContainer(
          net.studioblueplanet.tomtomwatch.WorkoutProto.DataContainer.Builder builderForValue) {
        if (dataContainerBuilder_ == null) {
          dataContainer_ = builderForValue.build();
          onChanged();
        } else {
          dataContainerBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000002;
        return this;
      }
      /**
       * <code>optional .tutorial.DataContainer dataContainer = 8;</code>
       */
      public Builder mergeDataContainer(net.studioblueplanet.tomtomwatch.WorkoutProto.DataContainer value) {
        if (dataContainerBuilder_ == null) {
          if (((bitField0_ & 0x00000002) != 0) &&
              dataContainer_ != null &&
              dataContainer_ != net.studioblueplanet.tomtomwatch.WorkoutProto.DataContainer.getDefaultInstance()) {
            dataContainer_ =
              net.studioblueplanet.tomtomwatch.WorkoutProto.DataContainer.newBuilder(dataContainer_).mergeFrom(value).buildPartial();
          } else {
            dataContainer_ = value;
          }
          onChanged();
        } else {
          dataContainerBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000002;
        return this;
      }
      /**
       * <code>optional .tutorial.DataContainer dataContainer = 8;</code>
       */
      public Builder clearDataContainer() {
        if (dataContainerBuilder_ == null) {
          dataContainer_ = null;
          onChanged();
        } else {
          dataContainerBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000002);
        return this;
      }
      /**
       * <code>optional .tutorial.DataContainer dataContainer = 8;</code>
       */
      public net.studioblueplanet.tomtomwatch.WorkoutProto.DataContainer.Builder getDataContainerBuilder() {
        bitField0_ |= 0x00000002;
        onChanged();
        return getDataContainerFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .tutorial.DataContainer dataContainer = 8;</code>
       */
      public net.studioblueplanet.tomtomwatch.WorkoutProto.DataContainerOrBuilder getDataContainerOrBuilder() {
        if (dataContainerBuilder_ != null) {
          return dataContainerBuilder_.getMessageOrBuilder();
        } else {
          return dataContainer_ == null ?
              net.studioblueplanet.tomtomwatch.WorkoutProto.DataContainer.getDefaultInstance() : dataContainer_;
        }
      }
      /**
       * <code>optional .tutorial.DataContainer dataContainer = 8;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          net.studioblueplanet.tomtomwatch.WorkoutProto.DataContainer, net.studioblueplanet.tomtomwatch.WorkoutProto.DataContainer.Builder, net.studioblueplanet.tomtomwatch.WorkoutProto.DataContainerOrBuilder> 
          getDataContainerFieldBuilder() {
        if (dataContainerBuilder_ == null) {
          dataContainerBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              net.studioblueplanet.tomtomwatch.WorkoutProto.DataContainer, net.studioblueplanet.tomtomwatch.WorkoutProto.DataContainer.Builder, net.studioblueplanet.tomtomwatch.WorkoutProto.DataContainerOrBuilder>(
                  getDataContainer(),
                  getParentForChildren(),
                  isClean());
          dataContainer_ = null;
        }
        return dataContainerBuilder_;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:tutorial.RootContainer)
    }

    // @@protoc_insertion_point(class_scope:tutorial.RootContainer)
    private static final net.studioblueplanet.tomtomwatch.WorkoutProto.RootContainer DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new net.studioblueplanet.tomtomwatch.WorkoutProto.RootContainer();
    }

    public static net.studioblueplanet.tomtomwatch.WorkoutProto.RootContainer getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    @java.lang.Deprecated public static final com.google.protobuf.Parser<RootContainer>
        PARSER = new com.google.protobuf.AbstractParser<RootContainer>() {
      @java.lang.Override
      public RootContainer parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new RootContainer(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<RootContainer> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<RootContainer> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public net.studioblueplanet.tomtomwatch.WorkoutProto.RootContainer getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface MetadataOrBuilder extends
      // @@protoc_insertion_point(interface_extends:tutorial.Metadata)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     * always 0x1234DAEB
     * </pre>
     *
     * <code>required fixed32 manufacturer = 1;</code>
     */
    boolean hasManufacturer();
    /**
     * <pre>
     * always 0x1234DAEB
     * </pre>
     *
     * <code>required fixed32 manufacturer = 1;</code>
     */
    int getManufacturer();

    /**
     * <pre>
     * 0x00080100 for 0x00BE0000, 0x00090100 for 0x00BEnnnn where nnnn&gt;0
     * </pre>
     *
     * <code>required fixed32 fileType = 2;</code>
     */
    boolean hasFileType();
    /**
     * <pre>
     * 0x00080100 for 0x00BE0000, 0x00090100 for 0x00BEnnnn where nnnn&gt;0
     * </pre>
     *
     * <code>required fixed32 fileType = 2;</code>
     */
    int getFileType();
  }
  /**
   * Protobuf type {@code tutorial.Metadata}
   */
  public  static final class Metadata extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:tutorial.Metadata)
      MetadataOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use Metadata.newBuilder() to construct.
    private Metadata(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private Metadata() {
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new Metadata();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private Metadata(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 13: {
              bitField0_ |= 0x00000001;
              manufacturer_ = input.readFixed32();
              break;
            }
            case 21: {
              bitField0_ |= 0x00000002;
              fileType_ = input.readFixed32();
              break;
            }
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return net.studioblueplanet.tomtomwatch.WorkoutProto.internal_static_tutorial_Metadata_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return net.studioblueplanet.tomtomwatch.WorkoutProto.internal_static_tutorial_Metadata_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              net.studioblueplanet.tomtomwatch.WorkoutProto.Metadata.class, net.studioblueplanet.tomtomwatch.WorkoutProto.Metadata.Builder.class);
    }

    private int bitField0_;
    public static final int MANUFACTURER_FIELD_NUMBER = 1;
    private int manufacturer_;
    /**
     * <pre>
     * always 0x1234DAEB
     * </pre>
     *
     * <code>required fixed32 manufacturer = 1;</code>
     */
    public boolean hasManufacturer() {
      return ((bitField0_ & 0x00000001) != 0);
    }
    /**
     * <pre>
     * always 0x1234DAEB
     * </pre>
     *
     * <code>required fixed32 manufacturer = 1;</code>
     */
    public int getManufacturer() {
      return manufacturer_;
    }

    public static final int FILETYPE_FIELD_NUMBER = 2;
    private int fileType_;
    /**
     * <pre>
     * 0x00080100 for 0x00BE0000, 0x00090100 for 0x00BEnnnn where nnnn&gt;0
     * </pre>
     *
     * <code>required fixed32 fileType = 2;</code>
     */
    public boolean hasFileType() {
      return ((bitField0_ & 0x00000002) != 0);
    }
    /**
     * <pre>
     * 0x00080100 for 0x00BE0000, 0x00090100 for 0x00BEnnnn where nnnn&gt;0
     * </pre>
     *
     * <code>required fixed32 fileType = 2;</code>
     */
    public int getFileType() {
      return fileType_;
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      if (!hasManufacturer()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasFileType()) {
        memoizedIsInitialized = 0;
        return false;
      }
      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (((bitField0_ & 0x00000001) != 0)) {
        output.writeFixed32(1, manufacturer_);
      }
      if (((bitField0_ & 0x00000002) != 0)) {
        output.writeFixed32(2, fileType_);
      }
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeFixed32Size(1, manufacturer_);
      }
      if (((bitField0_ & 0x00000002) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeFixed32Size(2, fileType_);
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof net.studioblueplanet.tomtomwatch.WorkoutProto.Metadata)) {
        return super.equals(obj);
      }
      net.studioblueplanet.tomtomwatch.WorkoutProto.Metadata other = (net.studioblueplanet.tomtomwatch.WorkoutProto.Metadata) obj;

      if (hasManufacturer() != other.hasManufacturer()) return false;
      if (hasManufacturer()) {
        if (getManufacturer()
            != other.getManufacturer()) return false;
      }
      if (hasFileType() != other.hasFileType()) return false;
      if (hasFileType()) {
        if (getFileType()
            != other.getFileType()) return false;
      }
      if (!unknownFields.equals(other.unknownFields)) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (hasManufacturer()) {
        hash = (37 * hash) + MANUFACTURER_FIELD_NUMBER;
        hash = (53 * hash) + getManufacturer();
      }
      if (hasFileType()) {
        hash = (37 * hash) + FILETYPE_FIELD_NUMBER;
        hash = (53 * hash) + getFileType();
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static net.studioblueplanet.tomtomwatch.WorkoutProto.Metadata parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static net.studioblueplanet.tomtomwatch.WorkoutProto.Metadata parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static net.studioblueplanet.tomtomwatch.WorkoutProto.Metadata parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static net.studioblueplanet.tomtomwatch.WorkoutProto.Metadata parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static net.studioblueplanet.tomtomwatch.WorkoutProto.Metadata parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static net.studioblueplanet.tomtomwatch.WorkoutProto.Metadata parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static net.studioblueplanet.tomtomwatch.WorkoutProto.Metadata parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static net.studioblueplanet.tomtomwatch.WorkoutProto.Metadata parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static net.studioblueplanet.tomtomwatch.WorkoutProto.Metadata parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static net.studioblueplanet.tomtomwatch.WorkoutProto.Metadata parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static net.studioblueplanet.tomtomwatch.WorkoutProto.Metadata parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static net.studioblueplanet.tomtomwatch.WorkoutProto.Metadata parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(net.studioblueplanet.tomtomwatch.WorkoutProto.Metadata prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code tutorial.Metadata}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:tutorial.Metadata)
        net.studioblueplanet.tomtomwatch.WorkoutProto.MetadataOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return net.studioblueplanet.tomtomwatch.WorkoutProto.internal_static_tutorial_Metadata_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return net.studioblueplanet.tomtomwatch.WorkoutProto.internal_static_tutorial_Metadata_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                net.studioblueplanet.tomtomwatch.WorkoutProto.Metadata.class, net.studioblueplanet.tomtomwatch.WorkoutProto.Metadata.Builder.class);
      }

      // Construct using net.studioblueplanet.tomtomwatch.WorkoutProto.Metadata.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        manufacturer_ = 0;
        bitField0_ = (bitField0_ & ~0x00000001);
        fileType_ = 0;
        bitField0_ = (bitField0_ & ~0x00000002);
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return net.studioblueplanet.tomtomwatch.WorkoutProto.internal_static_tutorial_Metadata_descriptor;
      }

      @java.lang.Override
      public net.studioblueplanet.tomtomwatch.WorkoutProto.Metadata getDefaultInstanceForType() {
        return net.studioblueplanet.tomtomwatch.WorkoutProto.Metadata.getDefaultInstance();
      }

      @java.lang.Override
      public net.studioblueplanet.tomtomwatch.WorkoutProto.Metadata build() {
        net.studioblueplanet.tomtomwatch.WorkoutProto.Metadata result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public net.studioblueplanet.tomtomwatch.WorkoutProto.Metadata buildPartial() {
        net.studioblueplanet.tomtomwatch.WorkoutProto.Metadata result = new net.studioblueplanet.tomtomwatch.WorkoutProto.Metadata(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) != 0)) {
          result.manufacturer_ = manufacturer_;
          to_bitField0_ |= 0x00000001;
        }
        if (((from_bitField0_ & 0x00000002) != 0)) {
          result.fileType_ = fileType_;
          to_bitField0_ |= 0x00000002;
        }
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof net.studioblueplanet.tomtomwatch.WorkoutProto.Metadata) {
          return mergeFrom((net.studioblueplanet.tomtomwatch.WorkoutProto.Metadata)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(net.studioblueplanet.tomtomwatch.WorkoutProto.Metadata other) {
        if (other == net.studioblueplanet.tomtomwatch.WorkoutProto.Metadata.getDefaultInstance()) return this;
        if (other.hasManufacturer()) {
          setManufacturer(other.getManufacturer());
        }
        if (other.hasFileType()) {
          setFileType(other.getFileType());
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        if (!hasManufacturer()) {
          return false;
        }
        if (!hasFileType()) {
          return false;
        }
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        net.studioblueplanet.tomtomwatch.WorkoutProto.Metadata parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (net.studioblueplanet.tomtomwatch.WorkoutProto.Metadata) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private int manufacturer_ ;
      /**
       * <pre>
       * always 0x1234DAEB
       * </pre>
       *
       * <code>required fixed32 manufacturer = 1;</code>
       */
      public boolean hasManufacturer() {
        return ((bitField0_ & 0x00000001) != 0);
      }
      /**
       * <pre>
       * always 0x1234DAEB
       * </pre>
       *
       * <code>required fixed32 manufacturer = 1;</code>
       */
      public int getManufacturer() {
        return manufacturer_;
      }
      /**
       * <pre>
       * always 0x1234DAEB
       * </pre>
       *
       * <code>required fixed32 manufacturer = 1;</code>
       */
      public Builder setManufacturer(int value) {
        bitField0_ |= 0x00000001;
        manufacturer_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * always 0x1234DAEB
       * </pre>
       *
       * <code>required fixed32 manufacturer = 1;</code>
       */
      public Builder clearManufacturer() {
        bitField0_ = (bitField0_ & ~0x00000001);
        manufacturer_ = 0;
        onChanged();
        return this;
      }

      private int fileType_ ;
      /**
       * <pre>
       * 0x00080100 for 0x00BE0000, 0x00090100 for 0x00BEnnnn where nnnn&gt;0
       * </pre>
       *
       * <code>required fixed32 fileType = 2;</code>
       */
      public boolean hasFileType() {
        return ((bitField0_ & 0x00000002) != 0);
      }
      /**
       * <pre>
       * 0x00080100 for 0x00BE0000, 0x00090100 for 0x00BEnnnn where nnnn&gt;0
       * </pre>
       *
       * <code>required fixed32 fileType = 2;</code>
       */
      public int getFileType() {
        return fileType_;
      }
      /**
       * <pre>
       * 0x00080100 for 0x00BE0000, 0x00090100 for 0x00BEnnnn where nnnn&gt;0
       * </pre>
       *
       * <code>required fixed32 fileType = 2;</code>
       */
      public Builder setFileType(int value) {
        bitField0_ |= 0x00000002;
        fileType_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * 0x00080100 for 0x00BE0000, 0x00090100 for 0x00BEnnnn where nnnn&gt;0
       * </pre>
       *
       * <code>required fixed32 fileType = 2;</code>
       */
      public Builder clearFileType() {
        bitField0_ = (bitField0_ & ~0x00000002);
        fileType_ = 0;
        onChanged();
        return this;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:tutorial.Metadata)
    }

    // @@protoc_insertion_point(class_scope:tutorial.Metadata)
    private static final net.studioblueplanet.tomtomwatch.WorkoutProto.Metadata DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new net.studioblueplanet.tomtomwatch.WorkoutProto.Metadata();
    }

    public static net.studioblueplanet.tomtomwatch.WorkoutProto.Metadata getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    @java.lang.Deprecated public static final com.google.protobuf.Parser<Metadata>
        PARSER = new com.google.protobuf.AbstractParser<Metadata>() {
      @java.lang.Override
      public Metadata parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new Metadata(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<Metadata> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<Metadata> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public net.studioblueplanet.tomtomwatch.WorkoutProto.Metadata getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface DataContainerOrBuilder extends
      // @@protoc_insertion_point(interface_extends:tutorial.DataContainer)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>required .tutorial.SubDataContainer subDataContainer = 1;</code>
     */
    boolean hasSubDataContainer();
    /**
     * <code>required .tutorial.SubDataContainer subDataContainer = 1;</code>
     */
    net.studioblueplanet.tomtomwatch.WorkoutProto.SubDataContainer getSubDataContainer();
    /**
     * <code>required .tutorial.SubDataContainer subDataContainer = 1;</code>
     */
    net.studioblueplanet.tomtomwatch.WorkoutProto.SubDataContainerOrBuilder getSubDataContainerOrBuilder();
  }
  /**
   * Protobuf type {@code tutorial.DataContainer}
   */
  public  static final class DataContainer extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:tutorial.DataContainer)
      DataContainerOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use DataContainer.newBuilder() to construct.
    private DataContainer(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private DataContainer() {
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new DataContainer();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private DataContainer(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 10: {
              net.studioblueplanet.tomtomwatch.WorkoutProto.SubDataContainer.Builder subBuilder = null;
              if (((bitField0_ & 0x00000001) != 0)) {
                subBuilder = subDataContainer_.toBuilder();
              }
              subDataContainer_ = input.readMessage(net.studioblueplanet.tomtomwatch.WorkoutProto.SubDataContainer.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(subDataContainer_);
                subDataContainer_ = subBuilder.buildPartial();
              }
              bitField0_ |= 0x00000001;
              break;
            }
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return net.studioblueplanet.tomtomwatch.WorkoutProto.internal_static_tutorial_DataContainer_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return net.studioblueplanet.tomtomwatch.WorkoutProto.internal_static_tutorial_DataContainer_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              net.studioblueplanet.tomtomwatch.WorkoutProto.DataContainer.class, net.studioblueplanet.tomtomwatch.WorkoutProto.DataContainer.Builder.class);
    }

    private int bitField0_;
    public static final int SUBDATACONTAINER_FIELD_NUMBER = 1;
    private net.studioblueplanet.tomtomwatch.WorkoutProto.SubDataContainer subDataContainer_;
    /**
     * <code>required .tutorial.SubDataContainer subDataContainer = 1;</code>
     */
    public boolean hasSubDataContainer() {
      return ((bitField0_ & 0x00000001) != 0);
    }
    /**
     * <code>required .tutorial.SubDataContainer subDataContainer = 1;</code>
     */
    public net.studioblueplanet.tomtomwatch.WorkoutProto.SubDataContainer getSubDataContainer() {
      return subDataContainer_ == null ? net.studioblueplanet.tomtomwatch.WorkoutProto.SubDataContainer.getDefaultInstance() : subDataContainer_;
    }
    /**
     * <code>required .tutorial.SubDataContainer subDataContainer = 1;</code>
     */
    public net.studioblueplanet.tomtomwatch.WorkoutProto.SubDataContainerOrBuilder getSubDataContainerOrBuilder() {
      return subDataContainer_ == null ? net.studioblueplanet.tomtomwatch.WorkoutProto.SubDataContainer.getDefaultInstance() : subDataContainer_;
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      if (!hasSubDataContainer()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!getSubDataContainer().isInitialized()) {
        memoizedIsInitialized = 0;
        return false;
      }
      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (((bitField0_ & 0x00000001) != 0)) {
        output.writeMessage(1, getSubDataContainer());
      }
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, getSubDataContainer());
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof net.studioblueplanet.tomtomwatch.WorkoutProto.DataContainer)) {
        return super.equals(obj);
      }
      net.studioblueplanet.tomtomwatch.WorkoutProto.DataContainer other = (net.studioblueplanet.tomtomwatch.WorkoutProto.DataContainer) obj;

      if (hasSubDataContainer() != other.hasSubDataContainer()) return false;
      if (hasSubDataContainer()) {
        if (!getSubDataContainer()
            .equals(other.getSubDataContainer())) return false;
      }
      if (!unknownFields.equals(other.unknownFields)) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (hasSubDataContainer()) {
        hash = (37 * hash) + SUBDATACONTAINER_FIELD_NUMBER;
        hash = (53 * hash) + getSubDataContainer().hashCode();
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static net.studioblueplanet.tomtomwatch.WorkoutProto.DataContainer parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static net.studioblueplanet.tomtomwatch.WorkoutProto.DataContainer parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static net.studioblueplanet.tomtomwatch.WorkoutProto.DataContainer parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static net.studioblueplanet.tomtomwatch.WorkoutProto.DataContainer parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static net.studioblueplanet.tomtomwatch.WorkoutProto.DataContainer parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static net.studioblueplanet.tomtomwatch.WorkoutProto.DataContainer parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static net.studioblueplanet.tomtomwatch.WorkoutProto.DataContainer parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static net.studioblueplanet.tomtomwatch.WorkoutProto.DataContainer parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static net.studioblueplanet.tomtomwatch.WorkoutProto.DataContainer parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static net.studioblueplanet.tomtomwatch.WorkoutProto.DataContainer parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static net.studioblueplanet.tomtomwatch.WorkoutProto.DataContainer parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static net.studioblueplanet.tomtomwatch.WorkoutProto.DataContainer parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(net.studioblueplanet.tomtomwatch.WorkoutProto.DataContainer prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code tutorial.DataContainer}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:tutorial.DataContainer)
        net.studioblueplanet.tomtomwatch.WorkoutProto.DataContainerOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return net.studioblueplanet.tomtomwatch.WorkoutProto.internal_static_tutorial_DataContainer_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return net.studioblueplanet.tomtomwatch.WorkoutProto.internal_static_tutorial_DataContainer_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                net.studioblueplanet.tomtomwatch.WorkoutProto.DataContainer.class, net.studioblueplanet.tomtomwatch.WorkoutProto.DataContainer.Builder.class);
      }

      // Construct using net.studioblueplanet.tomtomwatch.WorkoutProto.DataContainer.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
          getSubDataContainerFieldBuilder();
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        if (subDataContainerBuilder_ == null) {
          subDataContainer_ = null;
        } else {
          subDataContainerBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000001);
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return net.studioblueplanet.tomtomwatch.WorkoutProto.internal_static_tutorial_DataContainer_descriptor;
      }

      @java.lang.Override
      public net.studioblueplanet.tomtomwatch.WorkoutProto.DataContainer getDefaultInstanceForType() {
        return net.studioblueplanet.tomtomwatch.WorkoutProto.DataContainer.getDefaultInstance();
      }

      @java.lang.Override
      public net.studioblueplanet.tomtomwatch.WorkoutProto.DataContainer build() {
        net.studioblueplanet.tomtomwatch.WorkoutProto.DataContainer result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public net.studioblueplanet.tomtomwatch.WorkoutProto.DataContainer buildPartial() {
        net.studioblueplanet.tomtomwatch.WorkoutProto.DataContainer result = new net.studioblueplanet.tomtomwatch.WorkoutProto.DataContainer(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) != 0)) {
          if (subDataContainerBuilder_ == null) {
            result.subDataContainer_ = subDataContainer_;
          } else {
            result.subDataContainer_ = subDataContainerBuilder_.build();
          }
          to_bitField0_ |= 0x00000001;
        }
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof net.studioblueplanet.tomtomwatch.WorkoutProto.DataContainer) {
          return mergeFrom((net.studioblueplanet.tomtomwatch.WorkoutProto.DataContainer)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(net.studioblueplanet.tomtomwatch.WorkoutProto.DataContainer other) {
        if (other == net.studioblueplanet.tomtomwatch.WorkoutProto.DataContainer.getDefaultInstance()) return this;
        if (other.hasSubDataContainer()) {
          mergeSubDataContainer(other.getSubDataContainer());
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        if (!hasSubDataContainer()) {
          return false;
        }
        if (!getSubDataContainer().isInitialized()) {
          return false;
        }
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        net.studioblueplanet.tomtomwatch.WorkoutProto.DataContainer parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (net.studioblueplanet.tomtomwatch.WorkoutProto.DataContainer) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private net.studioblueplanet.tomtomwatch.WorkoutProto.SubDataContainer subDataContainer_;
      private com.google.protobuf.SingleFieldBuilderV3<
          net.studioblueplanet.tomtomwatch.WorkoutProto.SubDataContainer, net.studioblueplanet.tomtomwatch.WorkoutProto.SubDataContainer.Builder, net.studioblueplanet.tomtomwatch.WorkoutProto.SubDataContainerOrBuilder> subDataContainerBuilder_;
      /**
       * <code>required .tutorial.SubDataContainer subDataContainer = 1;</code>
       */
      public boolean hasSubDataContainer() {
        return ((bitField0_ & 0x00000001) != 0);
      }
      /**
       * <code>required .tutorial.SubDataContainer subDataContainer = 1;</code>
       */
      public net.studioblueplanet.tomtomwatch.WorkoutProto.SubDataContainer getSubDataContainer() {
        if (subDataContainerBuilder_ == null) {
          return subDataContainer_ == null ? net.studioblueplanet.tomtomwatch.WorkoutProto.SubDataContainer.getDefaultInstance() : subDataContainer_;
        } else {
          return subDataContainerBuilder_.getMessage();
        }
      }
      /**
       * <code>required .tutorial.SubDataContainer subDataContainer = 1;</code>
       */
      public Builder setSubDataContainer(net.studioblueplanet.tomtomwatch.WorkoutProto.SubDataContainer value) {
        if (subDataContainerBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          subDataContainer_ = value;
          onChanged();
        } else {
          subDataContainerBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000001;
        return this;
      }
      /**
       * <code>required .tutorial.SubDataContainer subDataContainer = 1;</code>
       */
      public Builder setSubDataContainer(
          net.studioblueplanet.tomtomwatch.WorkoutProto.SubDataContainer.Builder builderForValue) {
        if (subDataContainerBuilder_ == null) {
          subDataContainer_ = builderForValue.build();
          onChanged();
        } else {
          subDataContainerBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000001;
        return this;
      }
      /**
       * <code>required .tutorial.SubDataContainer subDataContainer = 1;</code>
       */
      public Builder mergeSubDataContainer(net.studioblueplanet.tomtomwatch.WorkoutProto.SubDataContainer value) {
        if (subDataContainerBuilder_ == null) {
          if (((bitField0_ & 0x00000001) != 0) &&
              subDataContainer_ != null &&
              subDataContainer_ != net.studioblueplanet.tomtomwatch.WorkoutProto.SubDataContainer.getDefaultInstance()) {
            subDataContainer_ =
              net.studioblueplanet.tomtomwatch.WorkoutProto.SubDataContainer.newBuilder(subDataContainer_).mergeFrom(value).buildPartial();
          } else {
            subDataContainer_ = value;
          }
          onChanged();
        } else {
          subDataContainerBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000001;
        return this;
      }
      /**
       * <code>required .tutorial.SubDataContainer subDataContainer = 1;</code>
       */
      public Builder clearSubDataContainer() {
        if (subDataContainerBuilder_ == null) {
          subDataContainer_ = null;
          onChanged();
        } else {
          subDataContainerBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000001);
        return this;
      }
      /**
       * <code>required .tutorial.SubDataContainer subDataContainer = 1;</code>
       */
      public net.studioblueplanet.tomtomwatch.WorkoutProto.SubDataContainer.Builder getSubDataContainerBuilder() {
        bitField0_ |= 0x00000001;
        onChanged();
        return getSubDataContainerFieldBuilder().getBuilder();
      }
      /**
       * <code>required .tutorial.SubDataContainer subDataContainer = 1;</code>
       */
      public net.studioblueplanet.tomtomwatch.WorkoutProto.SubDataContainerOrBuilder getSubDataContainerOrBuilder() {
        if (subDataContainerBuilder_ != null) {
          return subDataContainerBuilder_.getMessageOrBuilder();
        } else {
          return subDataContainer_ == null ?
              net.studioblueplanet.tomtomwatch.WorkoutProto.SubDataContainer.getDefaultInstance() : subDataContainer_;
        }
      }
      /**
       * <code>required .tutorial.SubDataContainer subDataContainer = 1;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          net.studioblueplanet.tomtomwatch.WorkoutProto.SubDataContainer, net.studioblueplanet.tomtomwatch.WorkoutProto.SubDataContainer.Builder, net.studioblueplanet.tomtomwatch.WorkoutProto.SubDataContainerOrBuilder> 
          getSubDataContainerFieldBuilder() {
        if (subDataContainerBuilder_ == null) {
          subDataContainerBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              net.studioblueplanet.tomtomwatch.WorkoutProto.SubDataContainer, net.studioblueplanet.tomtomwatch.WorkoutProto.SubDataContainer.Builder, net.studioblueplanet.tomtomwatch.WorkoutProto.SubDataContainerOrBuilder>(
                  getSubDataContainer(),
                  getParentForChildren(),
                  isClean());
          subDataContainer_ = null;
        }
        return subDataContainerBuilder_;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:tutorial.DataContainer)
    }

    // @@protoc_insertion_point(class_scope:tutorial.DataContainer)
    private static final net.studioblueplanet.tomtomwatch.WorkoutProto.DataContainer DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new net.studioblueplanet.tomtomwatch.WorkoutProto.DataContainer();
    }

    public static net.studioblueplanet.tomtomwatch.WorkoutProto.DataContainer getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    @java.lang.Deprecated public static final com.google.protobuf.Parser<DataContainer>
        PARSER = new com.google.protobuf.AbstractParser<DataContainer>() {
      @java.lang.Override
      public DataContainer parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new DataContainer(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<DataContainer> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<DataContainer> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public net.studioblueplanet.tomtomwatch.WorkoutProto.DataContainer getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface SubDataContainerOrBuilder extends
      // @@protoc_insertion_point(interface_extends:tutorial.SubDataContainer)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     * 0x00BE0000
     * </pre>
     *
     * <code>repeated .tutorial.Description itemDescription = 6;</code>
     */
    java.util.List<net.studioblueplanet.tomtomwatch.WorkoutProto.Description> 
        getItemDescriptionList();
    /**
     * <pre>
     * 0x00BE0000
     * </pre>
     *
     * <code>repeated .tutorial.Description itemDescription = 6;</code>
     */
    net.studioblueplanet.tomtomwatch.WorkoutProto.Description getItemDescription(int index);
    /**
     * <pre>
     * 0x00BE0000
     * </pre>
     *
     * <code>repeated .tutorial.Description itemDescription = 6;</code>
     */
    int getItemDescriptionCount();
    /**
     * <pre>
     * 0x00BE0000
     * </pre>
     *
     * <code>repeated .tutorial.Description itemDescription = 6;</code>
     */
    java.util.List<? extends net.studioblueplanet.tomtomwatch.WorkoutProto.DescriptionOrBuilder> 
        getItemDescriptionOrBuilderList();
    /**
     * <pre>
     * 0x00BE0000
     * </pre>
     *
     * <code>repeated .tutorial.Description itemDescription = 6;</code>
     */
    net.studioblueplanet.tomtomwatch.WorkoutProto.DescriptionOrBuilder getItemDescriptionOrBuilder(
        int index);

    /**
     * <pre>
     * 0x00BE0000
     * </pre>
     *
     * <code>repeated .tutorial.WorkoutListItem workoutListItem = 5;</code>
     */
    java.util.List<net.studioblueplanet.tomtomwatch.WorkoutProto.WorkoutListItem> 
        getWorkoutListItemList();
    /**
     * <pre>
     * 0x00BE0000
     * </pre>
     *
     * <code>repeated .tutorial.WorkoutListItem workoutListItem = 5;</code>
     */
    net.studioblueplanet.tomtomwatch.WorkoutProto.WorkoutListItem getWorkoutListItem(int index);
    /**
     * <pre>
     * 0x00BE0000
     * </pre>
     *
     * <code>repeated .tutorial.WorkoutListItem workoutListItem = 5;</code>
     */
    int getWorkoutListItemCount();
    /**
     * <pre>
     * 0x00BE0000
     * </pre>
     *
     * <code>repeated .tutorial.WorkoutListItem workoutListItem = 5;</code>
     */
    java.util.List<? extends net.studioblueplanet.tomtomwatch.WorkoutProto.WorkoutListItemOrBuilder> 
        getWorkoutListItemOrBuilderList();
    /**
     * <pre>
     * 0x00BE0000
     * </pre>
     *
     * <code>repeated .tutorial.WorkoutListItem workoutListItem = 5;</code>
     */
    net.studioblueplanet.tomtomwatch.WorkoutProto.WorkoutListItemOrBuilder getWorkoutListItemOrBuilder(
        int index);

    /**
     * <pre>
     * 0x00BEnnnn
     * </pre>
     *
     * <code>repeated .tutorial.Description workoutDescription = 4;</code>
     */
    java.util.List<net.studioblueplanet.tomtomwatch.WorkoutProto.Description> 
        getWorkoutDescriptionList();
    /**
     * <pre>
     * 0x00BEnnnn
     * </pre>
     *
     * <code>repeated .tutorial.Description workoutDescription = 4;</code>
     */
    net.studioblueplanet.tomtomwatch.WorkoutProto.Description getWorkoutDescription(int index);
    /**
     * <pre>
     * 0x00BEnnnn
     * </pre>
     *
     * <code>repeated .tutorial.Description workoutDescription = 4;</code>
     */
    int getWorkoutDescriptionCount();
    /**
     * <pre>
     * 0x00BEnnnn
     * </pre>
     *
     * <code>repeated .tutorial.Description workoutDescription = 4;</code>
     */
    java.util.List<? extends net.studioblueplanet.tomtomwatch.WorkoutProto.DescriptionOrBuilder> 
        getWorkoutDescriptionOrBuilderList();
    /**
     * <pre>
     * 0x00BEnnnn
     * </pre>
     *
     * <code>repeated .tutorial.Description workoutDescription = 4;</code>
     */
    net.studioblueplanet.tomtomwatch.WorkoutProto.DescriptionOrBuilder getWorkoutDescriptionOrBuilder(
        int index);

    /**
     * <pre>
     * 0x00BEnnnn
     * </pre>
     *
     * <code>optional .tutorial.Workout workout = 7;</code>
     */
    boolean hasWorkout();
    /**
     * <pre>
     * 0x00BEnnnn
     * </pre>
     *
     * <code>optional .tutorial.Workout workout = 7;</code>
     */
    net.studioblueplanet.tomtomwatch.WorkoutProto.Workout getWorkout();
    /**
     * <pre>
     * 0x00BEnnnn
     * </pre>
     *
     * <code>optional .tutorial.Workout workout = 7;</code>
     */
    net.studioblueplanet.tomtomwatch.WorkoutProto.WorkoutOrBuilder getWorkoutOrBuilder();
  }
  /**
   * Protobuf type {@code tutorial.SubDataContainer}
   */
  public  static final class SubDataContainer extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:tutorial.SubDataContainer)
      SubDataContainerOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use SubDataContainer.newBuilder() to construct.
    private SubDataContainer(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private SubDataContainer() {
      itemDescription_ = java.util.Collections.emptyList();
      workoutListItem_ = java.util.Collections.emptyList();
      workoutDescription_ = java.util.Collections.emptyList();
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new SubDataContainer();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private SubDataContainer(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 34: {
              if (!((mutable_bitField0_ & 0x00000004) != 0)) {
                workoutDescription_ = new java.util.ArrayList<net.studioblueplanet.tomtomwatch.WorkoutProto.Description>();
                mutable_bitField0_ |= 0x00000004;
              }
              workoutDescription_.add(
                  input.readMessage(net.studioblueplanet.tomtomwatch.WorkoutProto.Description.PARSER, extensionRegistry));
              break;
            }
            case 42: {
              if (!((mutable_bitField0_ & 0x00000002) != 0)) {
                workoutListItem_ = new java.util.ArrayList<net.studioblueplanet.tomtomwatch.WorkoutProto.WorkoutListItem>();
                mutable_bitField0_ |= 0x00000002;
              }
              workoutListItem_.add(
                  input.readMessage(net.studioblueplanet.tomtomwatch.WorkoutProto.WorkoutListItem.PARSER, extensionRegistry));
              break;
            }
            case 50: {
              if (!((mutable_bitField0_ & 0x00000001) != 0)) {
                itemDescription_ = new java.util.ArrayList<net.studioblueplanet.tomtomwatch.WorkoutProto.Description>();
                mutable_bitField0_ |= 0x00000001;
              }
              itemDescription_.add(
                  input.readMessage(net.studioblueplanet.tomtomwatch.WorkoutProto.Description.PARSER, extensionRegistry));
              break;
            }
            case 58: {
              net.studioblueplanet.tomtomwatch.WorkoutProto.Workout.Builder subBuilder = null;
              if (((bitField0_ & 0x00000001) != 0)) {
                subBuilder = workout_.toBuilder();
              }
              workout_ = input.readMessage(net.studioblueplanet.tomtomwatch.WorkoutProto.Workout.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(workout_);
                workout_ = subBuilder.buildPartial();
              }
              bitField0_ |= 0x00000001;
              break;
            }
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000004) != 0)) {
          workoutDescription_ = java.util.Collections.unmodifiableList(workoutDescription_);
        }
        if (((mutable_bitField0_ & 0x00000002) != 0)) {
          workoutListItem_ = java.util.Collections.unmodifiableList(workoutListItem_);
        }
        if (((mutable_bitField0_ & 0x00000001) != 0)) {
          itemDescription_ = java.util.Collections.unmodifiableList(itemDescription_);
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return net.studioblueplanet.tomtomwatch.WorkoutProto.internal_static_tutorial_SubDataContainer_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return net.studioblueplanet.tomtomwatch.WorkoutProto.internal_static_tutorial_SubDataContainer_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              net.studioblueplanet.tomtomwatch.WorkoutProto.SubDataContainer.class, net.studioblueplanet.tomtomwatch.WorkoutProto.SubDataContainer.Builder.class);
    }

    private int bitField0_;
    public static final int ITEMDESCRIPTION_FIELD_NUMBER = 6;
    private java.util.List<net.studioblueplanet.tomtomwatch.WorkoutProto.Description> itemDescription_;
    /**
     * <pre>
     * 0x00BE0000
     * </pre>
     *
     * <code>repeated .tutorial.Description itemDescription = 6;</code>
     */
    public java.util.List<net.studioblueplanet.tomtomwatch.WorkoutProto.Description> getItemDescriptionList() {
      return itemDescription_;
    }
    /**
     * <pre>
     * 0x00BE0000
     * </pre>
     *
     * <code>repeated .tutorial.Description itemDescription = 6;</code>
     */
    public java.util.List<? extends net.studioblueplanet.tomtomwatch.WorkoutProto.DescriptionOrBuilder> 
        getItemDescriptionOrBuilderList() {
      return itemDescription_;
    }
    /**
     * <pre>
     * 0x00BE0000
     * </pre>
     *
     * <code>repeated .tutorial.Description itemDescription = 6;</code>
     */
    public int getItemDescriptionCount() {
      return itemDescription_.size();
    }
    /**
     * <pre>
     * 0x00BE0000
     * </pre>
     *
     * <code>repeated .tutorial.Description itemDescription = 6;</code>
     */
    public net.studioblueplanet.tomtomwatch.WorkoutProto.Description getItemDescription(int index) {
      return itemDescription_.get(index);
    }
    /**
     * <pre>
     * 0x00BE0000
     * </pre>
     *
     * <code>repeated .tutorial.Description itemDescription = 6;</code>
     */
    public net.studioblueplanet.tomtomwatch.WorkoutProto.DescriptionOrBuilder getItemDescriptionOrBuilder(
        int index) {
      return itemDescription_.get(index);
    }

    public static final int WORKOUTLISTITEM_FIELD_NUMBER = 5;
    private java.util.List<net.studioblueplanet.tomtomwatch.WorkoutProto.WorkoutListItem> workoutListItem_;
    /**
     * <pre>
     * 0x00BE0000
     * </pre>
     *
     * <code>repeated .tutorial.WorkoutListItem workoutListItem = 5;</code>
     */
    public java.util.List<net.studioblueplanet.tomtomwatch.WorkoutProto.WorkoutListItem> getWorkoutListItemList() {
      return workoutListItem_;
    }
    /**
     * <pre>
     * 0x00BE0000
     * </pre>
     *
     * <code>repeated .tutorial.WorkoutListItem workoutListItem = 5;</code>
     */
    public java.util.List<? extends net.studioblueplanet.tomtomwatch.WorkoutProto.WorkoutListItemOrBuilder> 
        getWorkoutListItemOrBuilderList() {
      return workoutListItem_;
    }
    /**
     * <pre>
     * 0x00BE0000
     * </pre>
     *
     * <code>repeated .tutorial.WorkoutListItem workoutListItem = 5;</code>
     */
    public int getWorkoutListItemCount() {
      return workoutListItem_.size();
    }
    /**
     * <pre>
     * 0x00BE0000
     * </pre>
     *
     * <code>repeated .tutorial.WorkoutListItem workoutListItem = 5;</code>
     */
    public net.studioblueplanet.tomtomwatch.WorkoutProto.WorkoutListItem getWorkoutListItem(int index) {
      return workoutListItem_.get(index);
    }
    /**
     * <pre>
     * 0x00BE0000
     * </pre>
     *
     * <code>repeated .tutorial.WorkoutListItem workoutListItem = 5;</code>
     */
    public net.studioblueplanet.tomtomwatch.WorkoutProto.WorkoutListItemOrBuilder getWorkoutListItemOrBuilder(
        int index) {
      return workoutListItem_.get(index);
    }

    public static final int WORKOUTDESCRIPTION_FIELD_NUMBER = 4;
    private java.util.List<net.studioblueplanet.tomtomwatch.WorkoutProto.Description> workoutDescription_;
    /**
     * <pre>
     * 0x00BEnnnn
     * </pre>
     *
     * <code>repeated .tutorial.Description workoutDescription = 4;</code>
     */
    public java.util.List<net.studioblueplanet.tomtomwatch.WorkoutProto.Description> getWorkoutDescriptionList() {
      return workoutDescription_;
    }
    /**
     * <pre>
     * 0x00BEnnnn
     * </pre>
     *
     * <code>repeated .tutorial.Description workoutDescription = 4;</code>
     */
    public java.util.List<? extends net.studioblueplanet.tomtomwatch.WorkoutProto.DescriptionOrBuilder> 
        getWorkoutDescriptionOrBuilderList() {
      return workoutDescription_;
    }
    /**
     * <pre>
     * 0x00BEnnnn
     * </pre>
     *
     * <code>repeated .tutorial.Description workoutDescription = 4;</code>
     */
    public int getWorkoutDescriptionCount() {
      return workoutDescription_.size();
    }
    /**
     * <pre>
     * 0x00BEnnnn
     * </pre>
     *
     * <code>repeated .tutorial.Description workoutDescription = 4;</code>
     */
    public net.studioblueplanet.tomtomwatch.WorkoutProto.Description getWorkoutDescription(int index) {
      return workoutDescription_.get(index);
    }
    /**
     * <pre>
     * 0x00BEnnnn
     * </pre>
     *
     * <code>repeated .tutorial.Description workoutDescription = 4;</code>
     */
    public net.studioblueplanet.tomtomwatch.WorkoutProto.DescriptionOrBuilder getWorkoutDescriptionOrBuilder(
        int index) {
      return workoutDescription_.get(index);
    }

    public static final int WORKOUT_FIELD_NUMBER = 7;
    private net.studioblueplanet.tomtomwatch.WorkoutProto.Workout workout_;
    /**
     * <pre>
     * 0x00BEnnnn
     * </pre>
     *
     * <code>optional .tutorial.Workout workout = 7;</code>
     */
    public boolean hasWorkout() {
      return ((bitField0_ & 0x00000001) != 0);
    }
    /**
     * <pre>
     * 0x00BEnnnn
     * </pre>
     *
     * <code>optional .tutorial.Workout workout = 7;</code>
     */
    public net.studioblueplanet.tomtomwatch.WorkoutProto.Workout getWorkout() {
      return workout_ == null ? net.studioblueplanet.tomtomwatch.WorkoutProto.Workout.getDefaultInstance() : workout_;
    }
    /**
     * <pre>
     * 0x00BEnnnn
     * </pre>
     *
     * <code>optional .tutorial.Workout workout = 7;</code>
     */
    public net.studioblueplanet.tomtomwatch.WorkoutProto.WorkoutOrBuilder getWorkoutOrBuilder() {
      return workout_ == null ? net.studioblueplanet.tomtomwatch.WorkoutProto.Workout.getDefaultInstance() : workout_;
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      for (int i = 0; i < getItemDescriptionCount(); i++) {
        if (!getItemDescription(i).isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      for (int i = 0; i < getWorkoutListItemCount(); i++) {
        if (!getWorkoutListItem(i).isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      for (int i = 0; i < getWorkoutDescriptionCount(); i++) {
        if (!getWorkoutDescription(i).isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      if (hasWorkout()) {
        if (!getWorkout().isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      for (int i = 0; i < workoutDescription_.size(); i++) {
        output.writeMessage(4, workoutDescription_.get(i));
      }
      for (int i = 0; i < workoutListItem_.size(); i++) {
        output.writeMessage(5, workoutListItem_.get(i));
      }
      for (int i = 0; i < itemDescription_.size(); i++) {
        output.writeMessage(6, itemDescription_.get(i));
      }
      if (((bitField0_ & 0x00000001) != 0)) {
        output.writeMessage(7, getWorkout());
      }
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      for (int i = 0; i < workoutDescription_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(4, workoutDescription_.get(i));
      }
      for (int i = 0; i < workoutListItem_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(5, workoutListItem_.get(i));
      }
      for (int i = 0; i < itemDescription_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(6, itemDescription_.get(i));
      }
      if (((bitField0_ & 0x00000001) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(7, getWorkout());
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof net.studioblueplanet.tomtomwatch.WorkoutProto.SubDataContainer)) {
        return super.equals(obj);
      }
      net.studioblueplanet.tomtomwatch.WorkoutProto.SubDataContainer other = (net.studioblueplanet.tomtomwatch.WorkoutProto.SubDataContainer) obj;

      if (!getItemDescriptionList()
          .equals(other.getItemDescriptionList())) return false;
      if (!getWorkoutListItemList()
          .equals(other.getWorkoutListItemList())) return false;
      if (!getWorkoutDescriptionList()
          .equals(other.getWorkoutDescriptionList())) return false;
      if (hasWorkout() != other.hasWorkout()) return false;
      if (hasWorkout()) {
        if (!getWorkout()
            .equals(other.getWorkout())) return false;
      }
      if (!unknownFields.equals(other.unknownFields)) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (getItemDescriptionCount() > 0) {
        hash = (37 * hash) + ITEMDESCRIPTION_FIELD_NUMBER;
        hash = (53 * hash) + getItemDescriptionList().hashCode();
      }
      if (getWorkoutListItemCount() > 0) {
        hash = (37 * hash) + WORKOUTLISTITEM_FIELD_NUMBER;
        hash = (53 * hash) + getWorkoutListItemList().hashCode();
      }
      if (getWorkoutDescriptionCount() > 0) {
        hash = (37 * hash) + WORKOUTDESCRIPTION_FIELD_NUMBER;
        hash = (53 * hash) + getWorkoutDescriptionList().hashCode();
      }
      if (hasWorkout()) {
        hash = (37 * hash) + WORKOUT_FIELD_NUMBER;
        hash = (53 * hash) + getWorkout().hashCode();
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static net.studioblueplanet.tomtomwatch.WorkoutProto.SubDataContainer parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static net.studioblueplanet.tomtomwatch.WorkoutProto.SubDataContainer parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static net.studioblueplanet.tomtomwatch.WorkoutProto.SubDataContainer parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static net.studioblueplanet.tomtomwatch.WorkoutProto.SubDataContainer parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static net.studioblueplanet.tomtomwatch.WorkoutProto.SubDataContainer parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static net.studioblueplanet.tomtomwatch.WorkoutProto.SubDataContainer parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static net.studioblueplanet.tomtomwatch.WorkoutProto.SubDataContainer parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static net.studioblueplanet.tomtomwatch.WorkoutProto.SubDataContainer parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static net.studioblueplanet.tomtomwatch.WorkoutProto.SubDataContainer parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static net.studioblueplanet.tomtomwatch.WorkoutProto.SubDataContainer parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static net.studioblueplanet.tomtomwatch.WorkoutProto.SubDataContainer parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static net.studioblueplanet.tomtomwatch.WorkoutProto.SubDataContainer parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(net.studioblueplanet.tomtomwatch.WorkoutProto.SubDataContainer prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code tutorial.SubDataContainer}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:tutorial.SubDataContainer)
        net.studioblueplanet.tomtomwatch.WorkoutProto.SubDataContainerOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return net.studioblueplanet.tomtomwatch.WorkoutProto.internal_static_tutorial_SubDataContainer_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return net.studioblueplanet.tomtomwatch.WorkoutProto.internal_static_tutorial_SubDataContainer_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                net.studioblueplanet.tomtomwatch.WorkoutProto.SubDataContainer.class, net.studioblueplanet.tomtomwatch.WorkoutProto.SubDataContainer.Builder.class);
      }

      // Construct using net.studioblueplanet.tomtomwatch.WorkoutProto.SubDataContainer.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
          getItemDescriptionFieldBuilder();
          getWorkoutListItemFieldBuilder();
          getWorkoutDescriptionFieldBuilder();
          getWorkoutFieldBuilder();
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        if (itemDescriptionBuilder_ == null) {
          itemDescription_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000001);
        } else {
          itemDescriptionBuilder_.clear();
        }
        if (workoutListItemBuilder_ == null) {
          workoutListItem_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000002);
        } else {
          workoutListItemBuilder_.clear();
        }
        if (workoutDescriptionBuilder_ == null) {
          workoutDescription_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000004);
        } else {
          workoutDescriptionBuilder_.clear();
        }
        if (workoutBuilder_ == null) {
          workout_ = null;
        } else {
          workoutBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000008);
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return net.studioblueplanet.tomtomwatch.WorkoutProto.internal_static_tutorial_SubDataContainer_descriptor;
      }

      @java.lang.Override
      public net.studioblueplanet.tomtomwatch.WorkoutProto.SubDataContainer getDefaultInstanceForType() {
        return net.studioblueplanet.tomtomwatch.WorkoutProto.SubDataContainer.getDefaultInstance();
      }

      @java.lang.Override
      public net.studioblueplanet.tomtomwatch.WorkoutProto.SubDataContainer build() {
        net.studioblueplanet.tomtomwatch.WorkoutProto.SubDataContainer result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public net.studioblueplanet.tomtomwatch.WorkoutProto.SubDataContainer buildPartial() {
        net.studioblueplanet.tomtomwatch.WorkoutProto.SubDataContainer result = new net.studioblueplanet.tomtomwatch.WorkoutProto.SubDataContainer(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (itemDescriptionBuilder_ == null) {
          if (((bitField0_ & 0x00000001) != 0)) {
            itemDescription_ = java.util.Collections.unmodifiableList(itemDescription_);
            bitField0_ = (bitField0_ & ~0x00000001);
          }
          result.itemDescription_ = itemDescription_;
        } else {
          result.itemDescription_ = itemDescriptionBuilder_.build();
        }
        if (workoutListItemBuilder_ == null) {
          if (((bitField0_ & 0x00000002) != 0)) {
            workoutListItem_ = java.util.Collections.unmodifiableList(workoutListItem_);
            bitField0_ = (bitField0_ & ~0x00000002);
          }
          result.workoutListItem_ = workoutListItem_;
        } else {
          result.workoutListItem_ = workoutListItemBuilder_.build();
        }
        if (workoutDescriptionBuilder_ == null) {
          if (((bitField0_ & 0x00000004) != 0)) {
            workoutDescription_ = java.util.Collections.unmodifiableList(workoutDescription_);
            bitField0_ = (bitField0_ & ~0x00000004);
          }
          result.workoutDescription_ = workoutDescription_;
        } else {
          result.workoutDescription_ = workoutDescriptionBuilder_.build();
        }
        if (((from_bitField0_ & 0x00000008) != 0)) {
          if (workoutBuilder_ == null) {
            result.workout_ = workout_;
          } else {
            result.workout_ = workoutBuilder_.build();
          }
          to_bitField0_ |= 0x00000001;
        }
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof net.studioblueplanet.tomtomwatch.WorkoutProto.SubDataContainer) {
          return mergeFrom((net.studioblueplanet.tomtomwatch.WorkoutProto.SubDataContainer)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(net.studioblueplanet.tomtomwatch.WorkoutProto.SubDataContainer other) {
        if (other == net.studioblueplanet.tomtomwatch.WorkoutProto.SubDataContainer.getDefaultInstance()) return this;
        if (itemDescriptionBuilder_ == null) {
          if (!other.itemDescription_.isEmpty()) {
            if (itemDescription_.isEmpty()) {
              itemDescription_ = other.itemDescription_;
              bitField0_ = (bitField0_ & ~0x00000001);
            } else {
              ensureItemDescriptionIsMutable();
              itemDescription_.addAll(other.itemDescription_);
            }
            onChanged();
          }
        } else {
          if (!other.itemDescription_.isEmpty()) {
            if (itemDescriptionBuilder_.isEmpty()) {
              itemDescriptionBuilder_.dispose();
              itemDescriptionBuilder_ = null;
              itemDescription_ = other.itemDescription_;
              bitField0_ = (bitField0_ & ~0x00000001);
              itemDescriptionBuilder_ = 
                com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                   getItemDescriptionFieldBuilder() : null;
            } else {
              itemDescriptionBuilder_.addAllMessages(other.itemDescription_);
            }
          }
        }
        if (workoutListItemBuilder_ == null) {
          if (!other.workoutListItem_.isEmpty()) {
            if (workoutListItem_.isEmpty()) {
              workoutListItem_ = other.workoutListItem_;
              bitField0_ = (bitField0_ & ~0x00000002);
            } else {
              ensureWorkoutListItemIsMutable();
              workoutListItem_.addAll(other.workoutListItem_);
            }
            onChanged();
          }
        } else {
          if (!other.workoutListItem_.isEmpty()) {
            if (workoutListItemBuilder_.isEmpty()) {
              workoutListItemBuilder_.dispose();
              workoutListItemBuilder_ = null;
              workoutListItem_ = other.workoutListItem_;
              bitField0_ = (bitField0_ & ~0x00000002);
              workoutListItemBuilder_ = 
                com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                   getWorkoutListItemFieldBuilder() : null;
            } else {
              workoutListItemBuilder_.addAllMessages(other.workoutListItem_);
            }
          }
        }
        if (workoutDescriptionBuilder_ == null) {
          if (!other.workoutDescription_.isEmpty()) {
            if (workoutDescription_.isEmpty()) {
              workoutDescription_ = other.workoutDescription_;
              bitField0_ = (bitField0_ & ~0x00000004);
            } else {
              ensureWorkoutDescriptionIsMutable();
              workoutDescription_.addAll(other.workoutDescription_);
            }
            onChanged();
          }
        } else {
          if (!other.workoutDescription_.isEmpty()) {
            if (workoutDescriptionBuilder_.isEmpty()) {
              workoutDescriptionBuilder_.dispose();
              workoutDescriptionBuilder_ = null;
              workoutDescription_ = other.workoutDescription_;
              bitField0_ = (bitField0_ & ~0x00000004);
              workoutDescriptionBuilder_ = 
                com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                   getWorkoutDescriptionFieldBuilder() : null;
            } else {
              workoutDescriptionBuilder_.addAllMessages(other.workoutDescription_);
            }
          }
        }
        if (other.hasWorkout()) {
          mergeWorkout(other.getWorkout());
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        for (int i = 0; i < getItemDescriptionCount(); i++) {
          if (!getItemDescription(i).isInitialized()) {
            return false;
          }
        }
        for (int i = 0; i < getWorkoutListItemCount(); i++) {
          if (!getWorkoutListItem(i).isInitialized()) {
            return false;
          }
        }
        for (int i = 0; i < getWorkoutDescriptionCount(); i++) {
          if (!getWorkoutDescription(i).isInitialized()) {
            return false;
          }
        }
        if (hasWorkout()) {
          if (!getWorkout().isInitialized()) {
            return false;
          }
        }
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        net.studioblueplanet.tomtomwatch.WorkoutProto.SubDataContainer parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (net.studioblueplanet.tomtomwatch.WorkoutProto.SubDataContainer) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private java.util.List<net.studioblueplanet.tomtomwatch.WorkoutProto.Description> itemDescription_ =
        java.util.Collections.emptyList();
      private void ensureItemDescriptionIsMutable() {
        if (!((bitField0_ & 0x00000001) != 0)) {
          itemDescription_ = new java.util.ArrayList<net.studioblueplanet.tomtomwatch.WorkoutProto.Description>(itemDescription_);
          bitField0_ |= 0x00000001;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilderV3<
          net.studioblueplanet.tomtomwatch.WorkoutProto.Description, net.studioblueplanet.tomtomwatch.WorkoutProto.Description.Builder, net.studioblueplanet.tomtomwatch.WorkoutProto.DescriptionOrBuilder> itemDescriptionBuilder_;

      /**
       * <pre>
       * 0x00BE0000
       * </pre>
       *
       * <code>repeated .tutorial.Description itemDescription = 6;</code>
       */
      public java.util.List<net.studioblueplanet.tomtomwatch.WorkoutProto.Description> getItemDescriptionList() {
        if (itemDescriptionBuilder_ == null) {
          return java.util.Collections.unmodifiableList(itemDescription_);
        } else {
          return itemDescriptionBuilder_.getMessageList();
        }
      }
      /**
       * <pre>
       * 0x00BE0000
       * </pre>
       *
       * <code>repeated .tutorial.Description itemDescription = 6;</code>
       */
      public int getItemDescriptionCount() {
        if (itemDescriptionBuilder_ == null) {
          return itemDescription_.size();
        } else {
          return itemDescriptionBuilder_.getCount();
        }
      }
      /**
       * <pre>
       * 0x00BE0000
       * </pre>
       *
       * <code>repeated .tutorial.Description itemDescription = 6;</code>
       */
      public net.studioblueplanet.tomtomwatch.WorkoutProto.Description getItemDescription(int index) {
        if (itemDescriptionBuilder_ == null) {
          return itemDescription_.get(index);
        } else {
          return itemDescriptionBuilder_.getMessage(index);
        }
      }
      /**
       * <pre>
       * 0x00BE0000
       * </pre>
       *
       * <code>repeated .tutorial.Description itemDescription = 6;</code>
       */
      public Builder setItemDescription(
          int index, net.studioblueplanet.tomtomwatch.WorkoutProto.Description value) {
        if (itemDescriptionBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureItemDescriptionIsMutable();
          itemDescription_.set(index, value);
          onChanged();
        } else {
          itemDescriptionBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <pre>
       * 0x00BE0000
       * </pre>
       *
       * <code>repeated .tutorial.Description itemDescription = 6;</code>
       */
      public Builder setItemDescription(
          int index, net.studioblueplanet.tomtomwatch.WorkoutProto.Description.Builder builderForValue) {
        if (itemDescriptionBuilder_ == null) {
          ensureItemDescriptionIsMutable();
          itemDescription_.set(index, builderForValue.build());
          onChanged();
        } else {
          itemDescriptionBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * 0x00BE0000
       * </pre>
       *
       * <code>repeated .tutorial.Description itemDescription = 6;</code>
       */
      public Builder addItemDescription(net.studioblueplanet.tomtomwatch.WorkoutProto.Description value) {
        if (itemDescriptionBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureItemDescriptionIsMutable();
          itemDescription_.add(value);
          onChanged();
        } else {
          itemDescriptionBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <pre>
       * 0x00BE0000
       * </pre>
       *
       * <code>repeated .tutorial.Description itemDescription = 6;</code>
       */
      public Builder addItemDescription(
          int index, net.studioblueplanet.tomtomwatch.WorkoutProto.Description value) {
        if (itemDescriptionBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureItemDescriptionIsMutable();
          itemDescription_.add(index, value);
          onChanged();
        } else {
          itemDescriptionBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <pre>
       * 0x00BE0000
       * </pre>
       *
       * <code>repeated .tutorial.Description itemDescription = 6;</code>
       */
      public Builder addItemDescription(
          net.studioblueplanet.tomtomwatch.WorkoutProto.Description.Builder builderForValue) {
        if (itemDescriptionBuilder_ == null) {
          ensureItemDescriptionIsMutable();
          itemDescription_.add(builderForValue.build());
          onChanged();
        } else {
          itemDescriptionBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * 0x00BE0000
       * </pre>
       *
       * <code>repeated .tutorial.Description itemDescription = 6;</code>
       */
      public Builder addItemDescription(
          int index, net.studioblueplanet.tomtomwatch.WorkoutProto.Description.Builder builderForValue) {
        if (itemDescriptionBuilder_ == null) {
          ensureItemDescriptionIsMutable();
          itemDescription_.add(index, builderForValue.build());
          onChanged();
        } else {
          itemDescriptionBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * 0x00BE0000
       * </pre>
       *
       * <code>repeated .tutorial.Description itemDescription = 6;</code>
       */
      public Builder addAllItemDescription(
          java.lang.Iterable<? extends net.studioblueplanet.tomtomwatch.WorkoutProto.Description> values) {
        if (itemDescriptionBuilder_ == null) {
          ensureItemDescriptionIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, itemDescription_);
          onChanged();
        } else {
          itemDescriptionBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <pre>
       * 0x00BE0000
       * </pre>
       *
       * <code>repeated .tutorial.Description itemDescription = 6;</code>
       */
      public Builder clearItemDescription() {
        if (itemDescriptionBuilder_ == null) {
          itemDescription_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000001);
          onChanged();
        } else {
          itemDescriptionBuilder_.clear();
        }
        return this;
      }
      /**
       * <pre>
       * 0x00BE0000
       * </pre>
       *
       * <code>repeated .tutorial.Description itemDescription = 6;</code>
       */
      public Builder removeItemDescription(int index) {
        if (itemDescriptionBuilder_ == null) {
          ensureItemDescriptionIsMutable();
          itemDescription_.remove(index);
          onChanged();
        } else {
          itemDescriptionBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <pre>
       * 0x00BE0000
       * </pre>
       *
       * <code>repeated .tutorial.Description itemDescription = 6;</code>
       */
      public net.studioblueplanet.tomtomwatch.WorkoutProto.Description.Builder getItemDescriptionBuilder(
          int index) {
        return getItemDescriptionFieldBuilder().getBuilder(index);
      }
      /**
       * <pre>
       * 0x00BE0000
       * </pre>
       *
       * <code>repeated .tutorial.Description itemDescription = 6;</code>
       */
      public net.studioblueplanet.tomtomwatch.WorkoutProto.DescriptionOrBuilder getItemDescriptionOrBuilder(
          int index) {
        if (itemDescriptionBuilder_ == null) {
          return itemDescription_.get(index);  } else {
          return itemDescriptionBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <pre>
       * 0x00BE0000
       * </pre>
       *
       * <code>repeated .tutorial.Description itemDescription = 6;</code>
       */
      public java.util.List<? extends net.studioblueplanet.tomtomwatch.WorkoutProto.DescriptionOrBuilder> 
           getItemDescriptionOrBuilderList() {
        if (itemDescriptionBuilder_ != null) {
          return itemDescriptionBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(itemDescription_);
        }
      }
      /**
       * <pre>
       * 0x00BE0000
       * </pre>
       *
       * <code>repeated .tutorial.Description itemDescription = 6;</code>
       */
      public net.studioblueplanet.tomtomwatch.WorkoutProto.Description.Builder addItemDescriptionBuilder() {
        return getItemDescriptionFieldBuilder().addBuilder(
            net.studioblueplanet.tomtomwatch.WorkoutProto.Description.getDefaultInstance());
      }
      /**
       * <pre>
       * 0x00BE0000
       * </pre>
       *
       * <code>repeated .tutorial.Description itemDescription = 6;</code>
       */
      public net.studioblueplanet.tomtomwatch.WorkoutProto.Description.Builder addItemDescriptionBuilder(
          int index) {
        return getItemDescriptionFieldBuilder().addBuilder(
            index, net.studioblueplanet.tomtomwatch.WorkoutProto.Description.getDefaultInstance());
      }
      /**
       * <pre>
       * 0x00BE0000
       * </pre>
       *
       * <code>repeated .tutorial.Description itemDescription = 6;</code>
       */
      public java.util.List<net.studioblueplanet.tomtomwatch.WorkoutProto.Description.Builder> 
           getItemDescriptionBuilderList() {
        return getItemDescriptionFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilderV3<
          net.studioblueplanet.tomtomwatch.WorkoutProto.Description, net.studioblueplanet.tomtomwatch.WorkoutProto.Description.Builder, net.studioblueplanet.tomtomwatch.WorkoutProto.DescriptionOrBuilder> 
          getItemDescriptionFieldBuilder() {
        if (itemDescriptionBuilder_ == null) {
          itemDescriptionBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
              net.studioblueplanet.tomtomwatch.WorkoutProto.Description, net.studioblueplanet.tomtomwatch.WorkoutProto.Description.Builder, net.studioblueplanet.tomtomwatch.WorkoutProto.DescriptionOrBuilder>(
                  itemDescription_,
                  ((bitField0_ & 0x00000001) != 0),
                  getParentForChildren(),
                  isClean());
          itemDescription_ = null;
        }
        return itemDescriptionBuilder_;
      }

      private java.util.List<net.studioblueplanet.tomtomwatch.WorkoutProto.WorkoutListItem> workoutListItem_ =
        java.util.Collections.emptyList();
      private void ensureWorkoutListItemIsMutable() {
        if (!((bitField0_ & 0x00000002) != 0)) {
          workoutListItem_ = new java.util.ArrayList<net.studioblueplanet.tomtomwatch.WorkoutProto.WorkoutListItem>(workoutListItem_);
          bitField0_ |= 0x00000002;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilderV3<
          net.studioblueplanet.tomtomwatch.WorkoutProto.WorkoutListItem, net.studioblueplanet.tomtomwatch.WorkoutProto.WorkoutListItem.Builder, net.studioblueplanet.tomtomwatch.WorkoutProto.WorkoutListItemOrBuilder> workoutListItemBuilder_;

      /**
       * <pre>
       * 0x00BE0000
       * </pre>
       *
       * <code>repeated .tutorial.WorkoutListItem workoutListItem = 5;</code>
       */
      public java.util.List<net.studioblueplanet.tomtomwatch.WorkoutProto.WorkoutListItem> getWorkoutListItemList() {
        if (workoutListItemBuilder_ == null) {
          return java.util.Collections.unmodifiableList(workoutListItem_);
        } else {
          return workoutListItemBuilder_.getMessageList();
        }
      }
      /**
       * <pre>
       * 0x00BE0000
       * </pre>
       *
       * <code>repeated .tutorial.WorkoutListItem workoutListItem = 5;</code>
       */
      public int getWorkoutListItemCount() {
        if (workoutListItemBuilder_ == null) {
          return workoutListItem_.size();
        } else {
          return workoutListItemBuilder_.getCount();
        }
      }
      /**
       * <pre>
       * 0x00BE0000
       * </pre>
       *
       * <code>repeated .tutorial.WorkoutListItem workoutListItem = 5;</code>
       */
      public net.studioblueplanet.tomtomwatch.WorkoutProto.WorkoutListItem getWorkoutListItem(int index) {
        if (workoutListItemBuilder_ == null) {
          return workoutListItem_.get(index);
        } else {
          return workoutListItemBuilder_.getMessage(index);
        }
      }
      /**
       * <pre>
       * 0x00BE0000
       * </pre>
       *
       * <code>repeated .tutorial.WorkoutListItem workoutListItem = 5;</code>
       */
      public Builder setWorkoutListItem(
          int index, net.studioblueplanet.tomtomwatch.WorkoutProto.WorkoutListItem value) {
        if (workoutListItemBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureWorkoutListItemIsMutable();
          workoutListItem_.set(index, value);
          onChanged();
        } else {
          workoutListItemBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <pre>
       * 0x00BE0000
       * </pre>
       *
       * <code>repeated .tutorial.WorkoutListItem workoutListItem = 5;</code>
       */
      public Builder setWorkoutListItem(
          int index, net.studioblueplanet.tomtomwatch.WorkoutProto.WorkoutListItem.Builder builderForValue) {
        if (workoutListItemBuilder_ == null) {
          ensureWorkoutListItemIsMutable();
          workoutListItem_.set(index, builderForValue.build());
          onChanged();
        } else {
          workoutListItemBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * 0x00BE0000
       * </pre>
       *
       * <code>repeated .tutorial.WorkoutListItem workoutListItem = 5;</code>
       */
      public Builder addWorkoutListItem(net.studioblueplanet.tomtomwatch.WorkoutProto.WorkoutListItem value) {
        if (workoutListItemBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureWorkoutListItemIsMutable();
          workoutListItem_.add(value);
          onChanged();
        } else {
          workoutListItemBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <pre>
       * 0x00BE0000
       * </pre>
       *
       * <code>repeated .tutorial.WorkoutListItem workoutListItem = 5;</code>
       */
      public Builder addWorkoutListItem(
          int index, net.studioblueplanet.tomtomwatch.WorkoutProto.WorkoutListItem value) {
        if (workoutListItemBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureWorkoutListItemIsMutable();
          workoutListItem_.add(index, value);
          onChanged();
        } else {
          workoutListItemBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <pre>
       * 0x00BE0000
       * </pre>
       *
       * <code>repeated .tutorial.WorkoutListItem workoutListItem = 5;</code>
       */
      public Builder addWorkoutListItem(
          net.studioblueplanet.tomtomwatch.WorkoutProto.WorkoutListItem.Builder builderForValue) {
        if (workoutListItemBuilder_ == null) {
          ensureWorkoutListItemIsMutable();
          workoutListItem_.add(builderForValue.build());
          onChanged();
        } else {
          workoutListItemBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * 0x00BE0000
       * </pre>
       *
       * <code>repeated .tutorial.WorkoutListItem workoutListItem = 5;</code>
       */
      public Builder addWorkoutListItem(
          int index, net.studioblueplanet.tomtomwatch.WorkoutProto.WorkoutListItem.Builder builderForValue) {
        if (workoutListItemBuilder_ == null) {
          ensureWorkoutListItemIsMutable();
          workoutListItem_.add(index, builderForValue.build());
          onChanged();
        } else {
          workoutListItemBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * 0x00BE0000
       * </pre>
       *
       * <code>repeated .tutorial.WorkoutListItem workoutListItem = 5;</code>
       */
      public Builder addAllWorkoutListItem(
          java.lang.Iterable<? extends net.studioblueplanet.tomtomwatch.WorkoutProto.WorkoutListItem> values) {
        if (workoutListItemBuilder_ == null) {
          ensureWorkoutListItemIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, workoutListItem_);
          onChanged();
        } else {
          workoutListItemBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <pre>
       * 0x00BE0000
       * </pre>
       *
       * <code>repeated .tutorial.WorkoutListItem workoutListItem = 5;</code>
       */
      public Builder clearWorkoutListItem() {
        if (workoutListItemBuilder_ == null) {
          workoutListItem_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000002);
          onChanged();
        } else {
          workoutListItemBuilder_.clear();
        }
        return this;
      }
      /**
       * <pre>
       * 0x00BE0000
       * </pre>
       *
       * <code>repeated .tutorial.WorkoutListItem workoutListItem = 5;</code>
       */
      public Builder removeWorkoutListItem(int index) {
        if (workoutListItemBuilder_ == null) {
          ensureWorkoutListItemIsMutable();
          workoutListItem_.remove(index);
          onChanged();
        } else {
          workoutListItemBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <pre>
       * 0x00BE0000
       * </pre>
       *
       * <code>repeated .tutorial.WorkoutListItem workoutListItem = 5;</code>
       */
      public net.studioblueplanet.tomtomwatch.WorkoutProto.WorkoutListItem.Builder getWorkoutListItemBuilder(
          int index) {
        return getWorkoutListItemFieldBuilder().getBuilder(index);
      }
      /**
       * <pre>
       * 0x00BE0000
       * </pre>
       *
       * <code>repeated .tutorial.WorkoutListItem workoutListItem = 5;</code>
       */
      public net.studioblueplanet.tomtomwatch.WorkoutProto.WorkoutListItemOrBuilder getWorkoutListItemOrBuilder(
          int index) {
        if (workoutListItemBuilder_ == null) {
          return workoutListItem_.get(index);  } else {
          return workoutListItemBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <pre>
       * 0x00BE0000
       * </pre>
       *
       * <code>repeated .tutorial.WorkoutListItem workoutListItem = 5;</code>
       */
      public java.util.List<? extends net.studioblueplanet.tomtomwatch.WorkoutProto.WorkoutListItemOrBuilder> 
           getWorkoutListItemOrBuilderList() {
        if (workoutListItemBuilder_ != null) {
          return workoutListItemBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(workoutListItem_);
        }
      }
      /**
       * <pre>
       * 0x00BE0000
       * </pre>
       *
       * <code>repeated .tutorial.WorkoutListItem workoutListItem = 5;</code>
       */
      public net.studioblueplanet.tomtomwatch.WorkoutProto.WorkoutListItem.Builder addWorkoutListItemBuilder() {
        return getWorkoutListItemFieldBuilder().addBuilder(
            net.studioblueplanet.tomtomwatch.WorkoutProto.WorkoutListItem.getDefaultInstance());
      }
      /**
       * <pre>
       * 0x00BE0000
       * </pre>
       *
       * <code>repeated .tutorial.WorkoutListItem workoutListItem = 5;</code>
       */
      public net.studioblueplanet.tomtomwatch.WorkoutProto.WorkoutListItem.Builder addWorkoutListItemBuilder(
          int index) {
        return getWorkoutListItemFieldBuilder().addBuilder(
            index, net.studioblueplanet.tomtomwatch.WorkoutProto.WorkoutListItem.getDefaultInstance());
      }
      /**
       * <pre>
       * 0x00BE0000
       * </pre>
       *
       * <code>repeated .tutorial.WorkoutListItem workoutListItem = 5;</code>
       */
      public java.util.List<net.studioblueplanet.tomtomwatch.WorkoutProto.WorkoutListItem.Builder> 
           getWorkoutListItemBuilderList() {
        return getWorkoutListItemFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilderV3<
          net.studioblueplanet.tomtomwatch.WorkoutProto.WorkoutListItem, net.studioblueplanet.tomtomwatch.WorkoutProto.WorkoutListItem.Builder, net.studioblueplanet.tomtomwatch.WorkoutProto.WorkoutListItemOrBuilder> 
          getWorkoutListItemFieldBuilder() {
        if (workoutListItemBuilder_ == null) {
          workoutListItemBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
              net.studioblueplanet.tomtomwatch.WorkoutProto.WorkoutListItem, net.studioblueplanet.tomtomwatch.WorkoutProto.WorkoutListItem.Builder, net.studioblueplanet.tomtomwatch.WorkoutProto.WorkoutListItemOrBuilder>(
                  workoutListItem_,
                  ((bitField0_ & 0x00000002) != 0),
                  getParentForChildren(),
                  isClean());
          workoutListItem_ = null;
        }
        return workoutListItemBuilder_;
      }

      private java.util.List<net.studioblueplanet.tomtomwatch.WorkoutProto.Description> workoutDescription_ =
        java.util.Collections.emptyList();
      private void ensureWorkoutDescriptionIsMutable() {
        if (!((bitField0_ & 0x00000004) != 0)) {
          workoutDescription_ = new java.util.ArrayList<net.studioblueplanet.tomtomwatch.WorkoutProto.Description>(workoutDescription_);
          bitField0_ |= 0x00000004;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilderV3<
          net.studioblueplanet.tomtomwatch.WorkoutProto.Description, net.studioblueplanet.tomtomwatch.WorkoutProto.Description.Builder, net.studioblueplanet.tomtomwatch.WorkoutProto.DescriptionOrBuilder> workoutDescriptionBuilder_;

      /**
       * <pre>
       * 0x00BEnnnn
       * </pre>
       *
       * <code>repeated .tutorial.Description workoutDescription = 4;</code>
       */
      public java.util.List<net.studioblueplanet.tomtomwatch.WorkoutProto.Description> getWorkoutDescriptionList() {
        if (workoutDescriptionBuilder_ == null) {
          return java.util.Collections.unmodifiableList(workoutDescription_);
        } else {
          return workoutDescriptionBuilder_.getMessageList();
        }
      }
      /**
       * <pre>
       * 0x00BEnnnn
       * </pre>
       *
       * <code>repeated .tutorial.Description workoutDescription = 4;</code>
       */
      public int getWorkoutDescriptionCount() {
        if (workoutDescriptionBuilder_ == null) {
          return workoutDescription_.size();
        } else {
          return workoutDescriptionBuilder_.getCount();
        }
      }
      /**
       * <pre>
       * 0x00BEnnnn
       * </pre>
       *
       * <code>repeated .tutorial.Description workoutDescription = 4;</code>
       */
      public net.studioblueplanet.tomtomwatch.WorkoutProto.Description getWorkoutDescription(int index) {
        if (workoutDescriptionBuilder_ == null) {
          return workoutDescription_.get(index);
        } else {
          return workoutDescriptionBuilder_.getMessage(index);
        }
      }
      /**
       * <pre>
       * 0x00BEnnnn
       * </pre>
       *
       * <code>repeated .tutorial.Description workoutDescription = 4;</code>
       */
      public Builder setWorkoutDescription(
          int index, net.studioblueplanet.tomtomwatch.WorkoutProto.Description value) {
        if (workoutDescriptionBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureWorkoutDescriptionIsMutable();
          workoutDescription_.set(index, value);
          onChanged();
        } else {
          workoutDescriptionBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <pre>
       * 0x00BEnnnn
       * </pre>
       *
       * <code>repeated .tutorial.Description workoutDescription = 4;</code>
       */
      public Builder setWorkoutDescription(
          int index, net.studioblueplanet.tomtomwatch.WorkoutProto.Description.Builder builderForValue) {
        if (workoutDescriptionBuilder_ == null) {
          ensureWorkoutDescriptionIsMutable();
          workoutDescription_.set(index, builderForValue.build());
          onChanged();
        } else {
          workoutDescriptionBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * 0x00BEnnnn
       * </pre>
       *
       * <code>repeated .tutorial.Description workoutDescription = 4;</code>
       */
      public Builder addWorkoutDescription(net.studioblueplanet.tomtomwatch.WorkoutProto.Description value) {
        if (workoutDescriptionBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureWorkoutDescriptionIsMutable();
          workoutDescription_.add(value);
          onChanged();
        } else {
          workoutDescriptionBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <pre>
       * 0x00BEnnnn
       * </pre>
       *
       * <code>repeated .tutorial.Description workoutDescription = 4;</code>
       */
      public Builder addWorkoutDescription(
          int index, net.studioblueplanet.tomtomwatch.WorkoutProto.Description value) {
        if (workoutDescriptionBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureWorkoutDescriptionIsMutable();
          workoutDescription_.add(index, value);
          onChanged();
        } else {
          workoutDescriptionBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <pre>
       * 0x00BEnnnn
       * </pre>
       *
       * <code>repeated .tutorial.Description workoutDescription = 4;</code>
       */
      public Builder addWorkoutDescription(
          net.studioblueplanet.tomtomwatch.WorkoutProto.Description.Builder builderForValue) {
        if (workoutDescriptionBuilder_ == null) {
          ensureWorkoutDescriptionIsMutable();
          workoutDescription_.add(builderForValue.build());
          onChanged();
        } else {
          workoutDescriptionBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * 0x00BEnnnn
       * </pre>
       *
       * <code>repeated .tutorial.Description workoutDescription = 4;</code>
       */
      public Builder addWorkoutDescription(
          int index, net.studioblueplanet.tomtomwatch.WorkoutProto.Description.Builder builderForValue) {
        if (workoutDescriptionBuilder_ == null) {
          ensureWorkoutDescriptionIsMutable();
          workoutDescription_.add(index, builderForValue.build());
          onChanged();
        } else {
          workoutDescriptionBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * 0x00BEnnnn
       * </pre>
       *
       * <code>repeated .tutorial.Description workoutDescription = 4;</code>
       */
      public Builder addAllWorkoutDescription(
          java.lang.Iterable<? extends net.studioblueplanet.tomtomwatch.WorkoutProto.Description> values) {
        if (workoutDescriptionBuilder_ == null) {
          ensureWorkoutDescriptionIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, workoutDescription_);
          onChanged();
        } else {
          workoutDescriptionBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <pre>
       * 0x00BEnnnn
       * </pre>
       *
       * <code>repeated .tutorial.Description workoutDescription = 4;</code>
       */
      public Builder clearWorkoutDescription() {
        if (workoutDescriptionBuilder_ == null) {
          workoutDescription_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000004);
          onChanged();
        } else {
          workoutDescriptionBuilder_.clear();
        }
        return this;
      }
      /**
       * <pre>
       * 0x00BEnnnn
       * </pre>
       *
       * <code>repeated .tutorial.Description workoutDescription = 4;</code>
       */
      public Builder removeWorkoutDescription(int index) {
        if (workoutDescriptionBuilder_ == null) {
          ensureWorkoutDescriptionIsMutable();
          workoutDescription_.remove(index);
          onChanged();
        } else {
          workoutDescriptionBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <pre>
       * 0x00BEnnnn
       * </pre>
       *
       * <code>repeated .tutorial.Description workoutDescription = 4;</code>
       */
      public net.studioblueplanet.tomtomwatch.WorkoutProto.Description.Builder getWorkoutDescriptionBuilder(
          int index) {
        return getWorkoutDescriptionFieldBuilder().getBuilder(index);
      }
      /**
       * <pre>
       * 0x00BEnnnn
       * </pre>
       *
       * <code>repeated .tutorial.Description workoutDescription = 4;</code>
       */
      public net.studioblueplanet.tomtomwatch.WorkoutProto.DescriptionOrBuilder getWorkoutDescriptionOrBuilder(
          int index) {
        if (workoutDescriptionBuilder_ == null) {
          return workoutDescription_.get(index);  } else {
          return workoutDescriptionBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <pre>
       * 0x00BEnnnn
       * </pre>
       *
       * <code>repeated .tutorial.Description workoutDescription = 4;</code>
       */
      public java.util.List<? extends net.studioblueplanet.tomtomwatch.WorkoutProto.DescriptionOrBuilder> 
           getWorkoutDescriptionOrBuilderList() {
        if (workoutDescriptionBuilder_ != null) {
          return workoutDescriptionBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(workoutDescription_);
        }
      }
      /**
       * <pre>
       * 0x00BEnnnn
       * </pre>
       *
       * <code>repeated .tutorial.Description workoutDescription = 4;</code>
       */
      public net.studioblueplanet.tomtomwatch.WorkoutProto.Description.Builder addWorkoutDescriptionBuilder() {
        return getWorkoutDescriptionFieldBuilder().addBuilder(
            net.studioblueplanet.tomtomwatch.WorkoutProto.Description.getDefaultInstance());
      }
      /**
       * <pre>
       * 0x00BEnnnn
       * </pre>
       *
       * <code>repeated .tutorial.Description workoutDescription = 4;</code>
       */
      public net.studioblueplanet.tomtomwatch.WorkoutProto.Description.Builder addWorkoutDescriptionBuilder(
          int index) {
        return getWorkoutDescriptionFieldBuilder().addBuilder(
            index, net.studioblueplanet.tomtomwatch.WorkoutProto.Description.getDefaultInstance());
      }
      /**
       * <pre>
       * 0x00BEnnnn
       * </pre>
       *
       * <code>repeated .tutorial.Description workoutDescription = 4;</code>
       */
      public java.util.List<net.studioblueplanet.tomtomwatch.WorkoutProto.Description.Builder> 
           getWorkoutDescriptionBuilderList() {
        return getWorkoutDescriptionFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilderV3<
          net.studioblueplanet.tomtomwatch.WorkoutProto.Description, net.studioblueplanet.tomtomwatch.WorkoutProto.Description.Builder, net.studioblueplanet.tomtomwatch.WorkoutProto.DescriptionOrBuilder> 
          getWorkoutDescriptionFieldBuilder() {
        if (workoutDescriptionBuilder_ == null) {
          workoutDescriptionBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
              net.studioblueplanet.tomtomwatch.WorkoutProto.Description, net.studioblueplanet.tomtomwatch.WorkoutProto.Description.Builder, net.studioblueplanet.tomtomwatch.WorkoutProto.DescriptionOrBuilder>(
                  workoutDescription_,
                  ((bitField0_ & 0x00000004) != 0),
                  getParentForChildren(),
                  isClean());
          workoutDescription_ = null;
        }
        return workoutDescriptionBuilder_;
      }

      private net.studioblueplanet.tomtomwatch.WorkoutProto.Workout workout_;
      private com.google.protobuf.SingleFieldBuilderV3<
          net.studioblueplanet.tomtomwatch.WorkoutProto.Workout, net.studioblueplanet.tomtomwatch.WorkoutProto.Workout.Builder, net.studioblueplanet.tomtomwatch.WorkoutProto.WorkoutOrBuilder> workoutBuilder_;
      /**
       * <pre>
       * 0x00BEnnnn
       * </pre>
       *
       * <code>optional .tutorial.Workout workout = 7;</code>
       */
      public boolean hasWorkout() {
        return ((bitField0_ & 0x00000008) != 0);
      }
      /**
       * <pre>
       * 0x00BEnnnn
       * </pre>
       *
       * <code>optional .tutorial.Workout workout = 7;</code>
       */
      public net.studioblueplanet.tomtomwatch.WorkoutProto.Workout getWorkout() {
        if (workoutBuilder_ == null) {
          return workout_ == null ? net.studioblueplanet.tomtomwatch.WorkoutProto.Workout.getDefaultInstance() : workout_;
        } else {
          return workoutBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       * 0x00BEnnnn
       * </pre>
       *
       * <code>optional .tutorial.Workout workout = 7;</code>
       */
      public Builder setWorkout(net.studioblueplanet.tomtomwatch.WorkoutProto.Workout value) {
        if (workoutBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          workout_ = value;
          onChanged();
        } else {
          workoutBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000008;
        return this;
      }
      /**
       * <pre>
       * 0x00BEnnnn
       * </pre>
       *
       * <code>optional .tutorial.Workout workout = 7;</code>
       */
      public Builder setWorkout(
          net.studioblueplanet.tomtomwatch.WorkoutProto.Workout.Builder builderForValue) {
        if (workoutBuilder_ == null) {
          workout_ = builderForValue.build();
          onChanged();
        } else {
          workoutBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000008;
        return this;
      }
      /**
       * <pre>
       * 0x00BEnnnn
       * </pre>
       *
       * <code>optional .tutorial.Workout workout = 7;</code>
       */
      public Builder mergeWorkout(net.studioblueplanet.tomtomwatch.WorkoutProto.Workout value) {
        if (workoutBuilder_ == null) {
          if (((bitField0_ & 0x00000008) != 0) &&
              workout_ != null &&
              workout_ != net.studioblueplanet.tomtomwatch.WorkoutProto.Workout.getDefaultInstance()) {
            workout_ =
              net.studioblueplanet.tomtomwatch.WorkoutProto.Workout.newBuilder(workout_).mergeFrom(value).buildPartial();
          } else {
            workout_ = value;
          }
          onChanged();
        } else {
          workoutBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000008;
        return this;
      }
      /**
       * <pre>
       * 0x00BEnnnn
       * </pre>
       *
       * <code>optional .tutorial.Workout workout = 7;</code>
       */
      public Builder clearWorkout() {
        if (workoutBuilder_ == null) {
          workout_ = null;
          onChanged();
        } else {
          workoutBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000008);
        return this;
      }
      /**
       * <pre>
       * 0x00BEnnnn
       * </pre>
       *
       * <code>optional .tutorial.Workout workout = 7;</code>
       */
      public net.studioblueplanet.tomtomwatch.WorkoutProto.Workout.Builder getWorkoutBuilder() {
        bitField0_ |= 0x00000008;
        onChanged();
        return getWorkoutFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       * 0x00BEnnnn
       * </pre>
       *
       * <code>optional .tutorial.Workout workout = 7;</code>
       */
      public net.studioblueplanet.tomtomwatch.WorkoutProto.WorkoutOrBuilder getWorkoutOrBuilder() {
        if (workoutBuilder_ != null) {
          return workoutBuilder_.getMessageOrBuilder();
        } else {
          return workout_ == null ?
              net.studioblueplanet.tomtomwatch.WorkoutProto.Workout.getDefaultInstance() : workout_;
        }
      }
      /**
       * <pre>
       * 0x00BEnnnn
       * </pre>
       *
       * <code>optional .tutorial.Workout workout = 7;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          net.studioblueplanet.tomtomwatch.WorkoutProto.Workout, net.studioblueplanet.tomtomwatch.WorkoutProto.Workout.Builder, net.studioblueplanet.tomtomwatch.WorkoutProto.WorkoutOrBuilder> 
          getWorkoutFieldBuilder() {
        if (workoutBuilder_ == null) {
          workoutBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              net.studioblueplanet.tomtomwatch.WorkoutProto.Workout, net.studioblueplanet.tomtomwatch.WorkoutProto.Workout.Builder, net.studioblueplanet.tomtomwatch.WorkoutProto.WorkoutOrBuilder>(
                  getWorkout(),
                  getParentForChildren(),
                  isClean());
          workout_ = null;
        }
        return workoutBuilder_;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:tutorial.SubDataContainer)
    }

    // @@protoc_insertion_point(class_scope:tutorial.SubDataContainer)
    private static final net.studioblueplanet.tomtomwatch.WorkoutProto.SubDataContainer DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new net.studioblueplanet.tomtomwatch.WorkoutProto.SubDataContainer();
    }

    public static net.studioblueplanet.tomtomwatch.WorkoutProto.SubDataContainer getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    @java.lang.Deprecated public static final com.google.protobuf.Parser<SubDataContainer>
        PARSER = new com.google.protobuf.AbstractParser<SubDataContainer>() {
      @java.lang.Override
      public SubDataContainer parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new SubDataContainer(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<SubDataContainer> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<SubDataContainer> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public net.studioblueplanet.tomtomwatch.WorkoutProto.SubDataContainer getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface DescriptionOrBuilder extends
      // @@protoc_insertion_point(interface_extends:tutorial.Description)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     * 0=workout name, 1=workout description, &gt;=2 are stages referred to from the program
     * </pre>
     *
     * <code>required int32 id = 1;</code>
     */
    boolean hasId();
    /**
     * <pre>
     * 0=workout name, 1=workout description, &gt;=2 are stages referred to from the program
     * </pre>
     *
     * <code>required int32 id = 1;</code>
     */
    int getId();

    /**
     * <pre>
     * Name/description of the workout/stage
     * </pre>
     *
     * <code>required string description = 2;</code>
     */
    boolean hasDescription();
    /**
     * <pre>
     * Name/description of the workout/stage
     * </pre>
     *
     * <code>required string description = 2;</code>
     */
    java.lang.String getDescription();
    /**
     * <pre>
     * Name/description of the workout/stage
     * </pre>
     *
     * <code>required string description = 2;</code>
     */
    com.google.protobuf.ByteString
        getDescriptionBytes();
  }
  /**
   * <pre>
   *#################################################################################################
   * 4th level: descriptions used in the program
   *#################################################################################################
   * </pre>
   *
   * Protobuf type {@code tutorial.Description}
   */
  public  static final class Description extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:tutorial.Description)
      DescriptionOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use Description.newBuilder() to construct.
    private Description(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private Description() {
      description_ = "";
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new Description();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private Description(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 8: {
              bitField0_ |= 0x00000001;
              id_ = input.readInt32();
              break;
            }
            case 18: {
              com.google.protobuf.ByteString bs = input.readBytes();
              bitField0_ |= 0x00000002;
              description_ = bs;
              break;
            }
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return net.studioblueplanet.tomtomwatch.WorkoutProto.internal_static_tutorial_Description_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return net.studioblueplanet.tomtomwatch.WorkoutProto.internal_static_tutorial_Description_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              net.studioblueplanet.tomtomwatch.WorkoutProto.Description.class, net.studioblueplanet.tomtomwatch.WorkoutProto.Description.Builder.class);
    }

    private int bitField0_;
    public static final int ID_FIELD_NUMBER = 1;
    private int id_;
    /**
     * <pre>
     * 0=workout name, 1=workout description, &gt;=2 are stages referred to from the program
     * </pre>
     *
     * <code>required int32 id = 1;</code>
     */
    public boolean hasId() {
      return ((bitField0_ & 0x00000001) != 0);
    }
    /**
     * <pre>
     * 0=workout name, 1=workout description, &gt;=2 are stages referred to from the program
     * </pre>
     *
     * <code>required int32 id = 1;</code>
     */
    public int getId() {
      return id_;
    }

    public static final int DESCRIPTION_FIELD_NUMBER = 2;
    private volatile java.lang.Object description_;
    /**
     * <pre>
     * Name/description of the workout/stage
     * </pre>
     *
     * <code>required string description = 2;</code>
     */
    public boolean hasDescription() {
      return ((bitField0_ & 0x00000002) != 0);
    }
    /**
     * <pre>
     * Name/description of the workout/stage
     * </pre>
     *
     * <code>required string description = 2;</code>
     */
    public java.lang.String getDescription() {
      java.lang.Object ref = description_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          description_ = s;
        }
        return s;
      }
    }
    /**
     * <pre>
     * Name/description of the workout/stage
     * </pre>
     *
     * <code>required string description = 2;</code>
     */
    public com.google.protobuf.ByteString
        getDescriptionBytes() {
      java.lang.Object ref = description_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        description_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      if (!hasId()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasDescription()) {
        memoizedIsInitialized = 0;
        return false;
      }
      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (((bitField0_ & 0x00000001) != 0)) {
        output.writeInt32(1, id_);
      }
      if (((bitField0_ & 0x00000002) != 0)) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 2, description_);
      }
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(1, id_);
      }
      if (((bitField0_ & 0x00000002) != 0)) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(2, description_);
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof net.studioblueplanet.tomtomwatch.WorkoutProto.Description)) {
        return super.equals(obj);
      }
      net.studioblueplanet.tomtomwatch.WorkoutProto.Description other = (net.studioblueplanet.tomtomwatch.WorkoutProto.Description) obj;

      if (hasId() != other.hasId()) return false;
      if (hasId()) {
        if (getId()
            != other.getId()) return false;
      }
      if (hasDescription() != other.hasDescription()) return false;
      if (hasDescription()) {
        if (!getDescription()
            .equals(other.getDescription())) return false;
      }
      if (!unknownFields.equals(other.unknownFields)) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (hasId()) {
        hash = (37 * hash) + ID_FIELD_NUMBER;
        hash = (53 * hash) + getId();
      }
      if (hasDescription()) {
        hash = (37 * hash) + DESCRIPTION_FIELD_NUMBER;
        hash = (53 * hash) + getDescription().hashCode();
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static net.studioblueplanet.tomtomwatch.WorkoutProto.Description parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static net.studioblueplanet.tomtomwatch.WorkoutProto.Description parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static net.studioblueplanet.tomtomwatch.WorkoutProto.Description parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static net.studioblueplanet.tomtomwatch.WorkoutProto.Description parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static net.studioblueplanet.tomtomwatch.WorkoutProto.Description parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static net.studioblueplanet.tomtomwatch.WorkoutProto.Description parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static net.studioblueplanet.tomtomwatch.WorkoutProto.Description parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static net.studioblueplanet.tomtomwatch.WorkoutProto.Description parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static net.studioblueplanet.tomtomwatch.WorkoutProto.Description parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static net.studioblueplanet.tomtomwatch.WorkoutProto.Description parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static net.studioblueplanet.tomtomwatch.WorkoutProto.Description parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static net.studioblueplanet.tomtomwatch.WorkoutProto.Description parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(net.studioblueplanet.tomtomwatch.WorkoutProto.Description prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     *#################################################################################################
     * 4th level: descriptions used in the program
     *#################################################################################################
     * </pre>
     *
     * Protobuf type {@code tutorial.Description}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:tutorial.Description)
        net.studioblueplanet.tomtomwatch.WorkoutProto.DescriptionOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return net.studioblueplanet.tomtomwatch.WorkoutProto.internal_static_tutorial_Description_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return net.studioblueplanet.tomtomwatch.WorkoutProto.internal_static_tutorial_Description_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                net.studioblueplanet.tomtomwatch.WorkoutProto.Description.class, net.studioblueplanet.tomtomwatch.WorkoutProto.Description.Builder.class);
      }

      // Construct using net.studioblueplanet.tomtomwatch.WorkoutProto.Description.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        id_ = 0;
        bitField0_ = (bitField0_ & ~0x00000001);
        description_ = "";
        bitField0_ = (bitField0_ & ~0x00000002);
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return net.studioblueplanet.tomtomwatch.WorkoutProto.internal_static_tutorial_Description_descriptor;
      }

      @java.lang.Override
      public net.studioblueplanet.tomtomwatch.WorkoutProto.Description getDefaultInstanceForType() {
        return net.studioblueplanet.tomtomwatch.WorkoutProto.Description.getDefaultInstance();
      }

      @java.lang.Override
      public net.studioblueplanet.tomtomwatch.WorkoutProto.Description build() {
        net.studioblueplanet.tomtomwatch.WorkoutProto.Description result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public net.studioblueplanet.tomtomwatch.WorkoutProto.Description buildPartial() {
        net.studioblueplanet.tomtomwatch.WorkoutProto.Description result = new net.studioblueplanet.tomtomwatch.WorkoutProto.Description(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) != 0)) {
          result.id_ = id_;
          to_bitField0_ |= 0x00000001;
        }
        if (((from_bitField0_ & 0x00000002) != 0)) {
          to_bitField0_ |= 0x00000002;
        }
        result.description_ = description_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof net.studioblueplanet.tomtomwatch.WorkoutProto.Description) {
          return mergeFrom((net.studioblueplanet.tomtomwatch.WorkoutProto.Description)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(net.studioblueplanet.tomtomwatch.WorkoutProto.Description other) {
        if (other == net.studioblueplanet.tomtomwatch.WorkoutProto.Description.getDefaultInstance()) return this;
        if (other.hasId()) {
          setId(other.getId());
        }
        if (other.hasDescription()) {
          bitField0_ |= 0x00000002;
          description_ = other.description_;
          onChanged();
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        if (!hasId()) {
          return false;
        }
        if (!hasDescription()) {
          return false;
        }
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        net.studioblueplanet.tomtomwatch.WorkoutProto.Description parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (net.studioblueplanet.tomtomwatch.WorkoutProto.Description) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private int id_ ;
      /**
       * <pre>
       * 0=workout name, 1=workout description, &gt;=2 are stages referred to from the program
       * </pre>
       *
       * <code>required int32 id = 1;</code>
       */
      public boolean hasId() {
        return ((bitField0_ & 0x00000001) != 0);
      }
      /**
       * <pre>
       * 0=workout name, 1=workout description, &gt;=2 are stages referred to from the program
       * </pre>
       *
       * <code>required int32 id = 1;</code>
       */
      public int getId() {
        return id_;
      }
      /**
       * <pre>
       * 0=workout name, 1=workout description, &gt;=2 are stages referred to from the program
       * </pre>
       *
       * <code>required int32 id = 1;</code>
       */
      public Builder setId(int value) {
        bitField0_ |= 0x00000001;
        id_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * 0=workout name, 1=workout description, &gt;=2 are stages referred to from the program
       * </pre>
       *
       * <code>required int32 id = 1;</code>
       */
      public Builder clearId() {
        bitField0_ = (bitField0_ & ~0x00000001);
        id_ = 0;
        onChanged();
        return this;
      }

      private java.lang.Object description_ = "";
      /**
       * <pre>
       * Name/description of the workout/stage
       * </pre>
       *
       * <code>required string description = 2;</code>
       */
      public boolean hasDescription() {
        return ((bitField0_ & 0x00000002) != 0);
      }
      /**
       * <pre>
       * Name/description of the workout/stage
       * </pre>
       *
       * <code>required string description = 2;</code>
       */
      public java.lang.String getDescription() {
        java.lang.Object ref = description_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          if (bs.isValidUtf8()) {
            description_ = s;
          }
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       * Name/description of the workout/stage
       * </pre>
       *
       * <code>required string description = 2;</code>
       */
      public com.google.protobuf.ByteString
          getDescriptionBytes() {
        java.lang.Object ref = description_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          description_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       * Name/description of the workout/stage
       * </pre>
       *
       * <code>required string description = 2;</code>
       */
      public Builder setDescription(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000002;
        description_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Name/description of the workout/stage
       * </pre>
       *
       * <code>required string description = 2;</code>
       */
      public Builder clearDescription() {
        bitField0_ = (bitField0_ & ~0x00000002);
        description_ = getDefaultInstance().getDescription();
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Name/description of the workout/stage
       * </pre>
       *
       * <code>required string description = 2;</code>
       */
      public Builder setDescriptionBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000002;
        description_ = value;
        onChanged();
        return this;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:tutorial.Description)
    }

    // @@protoc_insertion_point(class_scope:tutorial.Description)
    private static final net.studioblueplanet.tomtomwatch.WorkoutProto.Description DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new net.studioblueplanet.tomtomwatch.WorkoutProto.Description();
    }

    public static net.studioblueplanet.tomtomwatch.WorkoutProto.Description getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    @java.lang.Deprecated public static final com.google.protobuf.Parser<Description>
        PARSER = new com.google.protobuf.AbstractParser<Description>() {
      @java.lang.Override
      public Description parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new Description(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<Description> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<Description> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public net.studioblueplanet.tomtomwatch.WorkoutProto.Description getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface WorkoutOrBuilder extends
      // @@protoc_insertion_point(interface_extends:tutorial.Workout)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     * Name of the workout as refrence to a workoutDescription
     * </pre>
     *
     * <code>required int32 name = 2;</code>
     */
    boolean hasName();
    /**
     * <pre>
     * Name of the workout as refrence to a workoutDescription
     * </pre>
     *
     * <code>required int32 name = 2;</code>
     */
    int getName();

    /**
     * <pre>
     * Description of the workout, as reference to a workoutDescription
     * </pre>
     *
     * <code>optional int32 description = 3;</code>
     */
    boolean hasDescription();
    /**
     * <pre>
     * Description of the workout, as reference to a workoutDescription
     * </pre>
     *
     * <code>optional int32 description = 3;</code>
     */
    int getDescription();

    /**
     * <pre>
     * 16 bytes
     * </pre>
     *
     * <code>required bytes id = 4;</code>
     */
    boolean hasId();
    /**
     * <pre>
     * 16 bytes
     * </pre>
     *
     * <code>required bytes id = 4;</code>
     */
    com.google.protobuf.ByteString getId();

    /**
     * <pre>
     * 1: Fat burn, 2: Endurance, 3: Fitness, 4: Speed, 5: Power, 6: Custom 
     * </pre>
     *
     * <code>required int32 Type = 10;</code>
     */
    boolean hasType();
    /**
     * <pre>
     * 1: Fat burn, 2: Endurance, 3: Fitness, 4: Speed, 5: Power, 6: Custom 
     * </pre>
     *
     * <code>required int32 Type = 10;</code>
     */
    int getType();

    /**
     * <pre>
     * value 2
     * </pre>
     *
     * <code>required int32 unknown11 = 11;</code>
     */
    boolean hasUnknown11();
    /**
     * <pre>
     * value 2
     * </pre>
     *
     * <code>required int32 unknown11 = 11;</code>
     */
    int getUnknown11();

    /**
     * <pre>
     * Steps that make up the workout
     * </pre>
     *
     * <code>repeated .tutorial.WorkoutStep step = 12;</code>
     */
    java.util.List<net.studioblueplanet.tomtomwatch.WorkoutProto.WorkoutStep> 
        getStepList();
    /**
     * <pre>
     * Steps that make up the workout
     * </pre>
     *
     * <code>repeated .tutorial.WorkoutStep step = 12;</code>
     */
    net.studioblueplanet.tomtomwatch.WorkoutProto.WorkoutStep getStep(int index);
    /**
     * <pre>
     * Steps that make up the workout
     * </pre>
     *
     * <code>repeated .tutorial.WorkoutStep step = 12;</code>
     */
    int getStepCount();
    /**
     * <pre>
     * Steps that make up the workout
     * </pre>
     *
     * <code>repeated .tutorial.WorkoutStep step = 12;</code>
     */
    java.util.List<? extends net.studioblueplanet.tomtomwatch.WorkoutProto.WorkoutStepOrBuilder> 
        getStepOrBuilderList();
    /**
     * <pre>
     * Steps that make up the workout
     * </pre>
     *
     * <code>repeated .tutorial.WorkoutStep step = 12;</code>
     */
    net.studioblueplanet.tomtomwatch.WorkoutProto.WorkoutStepOrBuilder getStepOrBuilder(
        int index);
  }
  /**
   * <pre>
   *#################################################################################################
   * 4th level: the workout as list of steps
   *#################################################################################################
   * </pre>
   *
   * Protobuf type {@code tutorial.Workout}
   */
  public  static final class Workout extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:tutorial.Workout)
      WorkoutOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use Workout.newBuilder() to construct.
    private Workout(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private Workout() {
      id_ = com.google.protobuf.ByteString.EMPTY;
      step_ = java.util.Collections.emptyList();
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new Workout();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private Workout(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 16: {
              bitField0_ |= 0x00000001;
              name_ = input.readInt32();
              break;
            }
            case 24: {
              bitField0_ |= 0x00000002;
              description_ = input.readInt32();
              break;
            }
            case 34: {
              bitField0_ |= 0x00000004;
              id_ = input.readBytes();
              break;
            }
            case 80: {
              bitField0_ |= 0x00000008;
              type_ = input.readInt32();
              break;
            }
            case 88: {
              bitField0_ |= 0x00000010;
              unknown11_ = input.readInt32();
              break;
            }
            case 98: {
              if (!((mutable_bitField0_ & 0x00000020) != 0)) {
                step_ = new java.util.ArrayList<net.studioblueplanet.tomtomwatch.WorkoutProto.WorkoutStep>();
                mutable_bitField0_ |= 0x00000020;
              }
              step_.add(
                  input.readMessage(net.studioblueplanet.tomtomwatch.WorkoutProto.WorkoutStep.PARSER, extensionRegistry));
              break;
            }
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000020) != 0)) {
          step_ = java.util.Collections.unmodifiableList(step_);
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return net.studioblueplanet.tomtomwatch.WorkoutProto.internal_static_tutorial_Workout_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return net.studioblueplanet.tomtomwatch.WorkoutProto.internal_static_tutorial_Workout_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              net.studioblueplanet.tomtomwatch.WorkoutProto.Workout.class, net.studioblueplanet.tomtomwatch.WorkoutProto.Workout.Builder.class);
    }

    private int bitField0_;
    public static final int NAME_FIELD_NUMBER = 2;
    private int name_;
    /**
     * <pre>
     * Name of the workout as refrence to a workoutDescription
     * </pre>
     *
     * <code>required int32 name = 2;</code>
     */
    public boolean hasName() {
      return ((bitField0_ & 0x00000001) != 0);
    }
    /**
     * <pre>
     * Name of the workout as refrence to a workoutDescription
     * </pre>
     *
     * <code>required int32 name = 2;</code>
     */
    public int getName() {
      return name_;
    }

    public static final int DESCRIPTION_FIELD_NUMBER = 3;
    private int description_;
    /**
     * <pre>
     * Description of the workout, as reference to a workoutDescription
     * </pre>
     *
     * <code>optional int32 description = 3;</code>
     */
    public boolean hasDescription() {
      return ((bitField0_ & 0x00000002) != 0);
    }
    /**
     * <pre>
     * Description of the workout, as reference to a workoutDescription
     * </pre>
     *
     * <code>optional int32 description = 3;</code>
     */
    public int getDescription() {
      return description_;
    }

    public static final int ID_FIELD_NUMBER = 4;
    private com.google.protobuf.ByteString id_;
    /**
     * <pre>
     * 16 bytes
     * </pre>
     *
     * <code>required bytes id = 4;</code>
     */
    public boolean hasId() {
      return ((bitField0_ & 0x00000004) != 0);
    }
    /**
     * <pre>
     * 16 bytes
     * </pre>
     *
     * <code>required bytes id = 4;</code>
     */
    public com.google.protobuf.ByteString getId() {
      return id_;
    }

    public static final int TYPE_FIELD_NUMBER = 10;
    private int type_;
    /**
     * <pre>
     * 1: Fat burn, 2: Endurance, 3: Fitness, 4: Speed, 5: Power, 6: Custom 
     * </pre>
     *
     * <code>required int32 Type = 10;</code>
     */
    public boolean hasType() {
      return ((bitField0_ & 0x00000008) != 0);
    }
    /**
     * <pre>
     * 1: Fat burn, 2: Endurance, 3: Fitness, 4: Speed, 5: Power, 6: Custom 
     * </pre>
     *
     * <code>required int32 Type = 10;</code>
     */
    public int getType() {
      return type_;
    }

    public static final int UNKNOWN11_FIELD_NUMBER = 11;
    private int unknown11_;
    /**
     * <pre>
     * value 2
     * </pre>
     *
     * <code>required int32 unknown11 = 11;</code>
     */
    public boolean hasUnknown11() {
      return ((bitField0_ & 0x00000010) != 0);
    }
    /**
     * <pre>
     * value 2
     * </pre>
     *
     * <code>required int32 unknown11 = 11;</code>
     */
    public int getUnknown11() {
      return unknown11_;
    }

    public static final int STEP_FIELD_NUMBER = 12;
    private java.util.List<net.studioblueplanet.tomtomwatch.WorkoutProto.WorkoutStep> step_;
    /**
     * <pre>
     * Steps that make up the workout
     * </pre>
     *
     * <code>repeated .tutorial.WorkoutStep step = 12;</code>
     */
    public java.util.List<net.studioblueplanet.tomtomwatch.WorkoutProto.WorkoutStep> getStepList() {
      return step_;
    }
    /**
     * <pre>
     * Steps that make up the workout
     * </pre>
     *
     * <code>repeated .tutorial.WorkoutStep step = 12;</code>
     */
    public java.util.List<? extends net.studioblueplanet.tomtomwatch.WorkoutProto.WorkoutStepOrBuilder> 
        getStepOrBuilderList() {
      return step_;
    }
    /**
     * <pre>
     * Steps that make up the workout
     * </pre>
     *
     * <code>repeated .tutorial.WorkoutStep step = 12;</code>
     */
    public int getStepCount() {
      return step_.size();
    }
    /**
     * <pre>
     * Steps that make up the workout
     * </pre>
     *
     * <code>repeated .tutorial.WorkoutStep step = 12;</code>
     */
    public net.studioblueplanet.tomtomwatch.WorkoutProto.WorkoutStep getStep(int index) {
      return step_.get(index);
    }
    /**
     * <pre>
     * Steps that make up the workout
     * </pre>
     *
     * <code>repeated .tutorial.WorkoutStep step = 12;</code>
     */
    public net.studioblueplanet.tomtomwatch.WorkoutProto.WorkoutStepOrBuilder getStepOrBuilder(
        int index) {
      return step_.get(index);
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      if (!hasName()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasId()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasType()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasUnknown11()) {
        memoizedIsInitialized = 0;
        return false;
      }
      for (int i = 0; i < getStepCount(); i++) {
        if (!getStep(i).isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (((bitField0_ & 0x00000001) != 0)) {
        output.writeInt32(2, name_);
      }
      if (((bitField0_ & 0x00000002) != 0)) {
        output.writeInt32(3, description_);
      }
      if (((bitField0_ & 0x00000004) != 0)) {
        output.writeBytes(4, id_);
      }
      if (((bitField0_ & 0x00000008) != 0)) {
        output.writeInt32(10, type_);
      }
      if (((bitField0_ & 0x00000010) != 0)) {
        output.writeInt32(11, unknown11_);
      }
      for (int i = 0; i < step_.size(); i++) {
        output.writeMessage(12, step_.get(i));
      }
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(2, name_);
      }
      if (((bitField0_ & 0x00000002) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(3, description_);
      }
      if (((bitField0_ & 0x00000004) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(4, id_);
      }
      if (((bitField0_ & 0x00000008) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(10, type_);
      }
      if (((bitField0_ & 0x00000010) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(11, unknown11_);
      }
      for (int i = 0; i < step_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(12, step_.get(i));
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof net.studioblueplanet.tomtomwatch.WorkoutProto.Workout)) {
        return super.equals(obj);
      }
      net.studioblueplanet.tomtomwatch.WorkoutProto.Workout other = (net.studioblueplanet.tomtomwatch.WorkoutProto.Workout) obj;

      if (hasName() != other.hasName()) return false;
      if (hasName()) {
        if (getName()
            != other.getName()) return false;
      }
      if (hasDescription() != other.hasDescription()) return false;
      if (hasDescription()) {
        if (getDescription()
            != other.getDescription()) return false;
      }
      if (hasId() != other.hasId()) return false;
      if (hasId()) {
        if (!getId()
            .equals(other.getId())) return false;
      }
      if (hasType() != other.hasType()) return false;
      if (hasType()) {
        if (getType()
            != other.getType()) return false;
      }
      if (hasUnknown11() != other.hasUnknown11()) return false;
      if (hasUnknown11()) {
        if (getUnknown11()
            != other.getUnknown11()) return false;
      }
      if (!getStepList()
          .equals(other.getStepList())) return false;
      if (!unknownFields.equals(other.unknownFields)) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (hasName()) {
        hash = (37 * hash) + NAME_FIELD_NUMBER;
        hash = (53 * hash) + getName();
      }
      if (hasDescription()) {
        hash = (37 * hash) + DESCRIPTION_FIELD_NUMBER;
        hash = (53 * hash) + getDescription();
      }
      if (hasId()) {
        hash = (37 * hash) + ID_FIELD_NUMBER;
        hash = (53 * hash) + getId().hashCode();
      }
      if (hasType()) {
        hash = (37 * hash) + TYPE_FIELD_NUMBER;
        hash = (53 * hash) + getType();
      }
      if (hasUnknown11()) {
        hash = (37 * hash) + UNKNOWN11_FIELD_NUMBER;
        hash = (53 * hash) + getUnknown11();
      }
      if (getStepCount() > 0) {
        hash = (37 * hash) + STEP_FIELD_NUMBER;
        hash = (53 * hash) + getStepList().hashCode();
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static net.studioblueplanet.tomtomwatch.WorkoutProto.Workout parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static net.studioblueplanet.tomtomwatch.WorkoutProto.Workout parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static net.studioblueplanet.tomtomwatch.WorkoutProto.Workout parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static net.studioblueplanet.tomtomwatch.WorkoutProto.Workout parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static net.studioblueplanet.tomtomwatch.WorkoutProto.Workout parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static net.studioblueplanet.tomtomwatch.WorkoutProto.Workout parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static net.studioblueplanet.tomtomwatch.WorkoutProto.Workout parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static net.studioblueplanet.tomtomwatch.WorkoutProto.Workout parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static net.studioblueplanet.tomtomwatch.WorkoutProto.Workout parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static net.studioblueplanet.tomtomwatch.WorkoutProto.Workout parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static net.studioblueplanet.tomtomwatch.WorkoutProto.Workout parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static net.studioblueplanet.tomtomwatch.WorkoutProto.Workout parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(net.studioblueplanet.tomtomwatch.WorkoutProto.Workout prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     *#################################################################################################
     * 4th level: the workout as list of steps
     *#################################################################################################
     * </pre>
     *
     * Protobuf type {@code tutorial.Workout}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:tutorial.Workout)
        net.studioblueplanet.tomtomwatch.WorkoutProto.WorkoutOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return net.studioblueplanet.tomtomwatch.WorkoutProto.internal_static_tutorial_Workout_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return net.studioblueplanet.tomtomwatch.WorkoutProto.internal_static_tutorial_Workout_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                net.studioblueplanet.tomtomwatch.WorkoutProto.Workout.class, net.studioblueplanet.tomtomwatch.WorkoutProto.Workout.Builder.class);
      }

      // Construct using net.studioblueplanet.tomtomwatch.WorkoutProto.Workout.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
          getStepFieldBuilder();
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        name_ = 0;
        bitField0_ = (bitField0_ & ~0x00000001);
        description_ = 0;
        bitField0_ = (bitField0_ & ~0x00000002);
        id_ = com.google.protobuf.ByteString.EMPTY;
        bitField0_ = (bitField0_ & ~0x00000004);
        type_ = 0;
        bitField0_ = (bitField0_ & ~0x00000008);
        unknown11_ = 0;
        bitField0_ = (bitField0_ & ~0x00000010);
        if (stepBuilder_ == null) {
          step_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000020);
        } else {
          stepBuilder_.clear();
        }
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return net.studioblueplanet.tomtomwatch.WorkoutProto.internal_static_tutorial_Workout_descriptor;
      }

      @java.lang.Override
      public net.studioblueplanet.tomtomwatch.WorkoutProto.Workout getDefaultInstanceForType() {
        return net.studioblueplanet.tomtomwatch.WorkoutProto.Workout.getDefaultInstance();
      }

      @java.lang.Override
      public net.studioblueplanet.tomtomwatch.WorkoutProto.Workout build() {
        net.studioblueplanet.tomtomwatch.WorkoutProto.Workout result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public net.studioblueplanet.tomtomwatch.WorkoutProto.Workout buildPartial() {
        net.studioblueplanet.tomtomwatch.WorkoutProto.Workout result = new net.studioblueplanet.tomtomwatch.WorkoutProto.Workout(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) != 0)) {
          result.name_ = name_;
          to_bitField0_ |= 0x00000001;
        }
        if (((from_bitField0_ & 0x00000002) != 0)) {
          result.description_ = description_;
          to_bitField0_ |= 0x00000002;
        }
        if (((from_bitField0_ & 0x00000004) != 0)) {
          to_bitField0_ |= 0x00000004;
        }
        result.id_ = id_;
        if (((from_bitField0_ & 0x00000008) != 0)) {
          result.type_ = type_;
          to_bitField0_ |= 0x00000008;
        }
        if (((from_bitField0_ & 0x00000010) != 0)) {
          result.unknown11_ = unknown11_;
          to_bitField0_ |= 0x00000010;
        }
        if (stepBuilder_ == null) {
          if (((bitField0_ & 0x00000020) != 0)) {
            step_ = java.util.Collections.unmodifiableList(step_);
            bitField0_ = (bitField0_ & ~0x00000020);
          }
          result.step_ = step_;
        } else {
          result.step_ = stepBuilder_.build();
        }
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof net.studioblueplanet.tomtomwatch.WorkoutProto.Workout) {
          return mergeFrom((net.studioblueplanet.tomtomwatch.WorkoutProto.Workout)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(net.studioblueplanet.tomtomwatch.WorkoutProto.Workout other) {
        if (other == net.studioblueplanet.tomtomwatch.WorkoutProto.Workout.getDefaultInstance()) return this;
        if (other.hasName()) {
          setName(other.getName());
        }
        if (other.hasDescription()) {
          setDescription(other.getDescription());
        }
        if (other.hasId()) {
          setId(other.getId());
        }
        if (other.hasType()) {
          setType(other.getType());
        }
        if (other.hasUnknown11()) {
          setUnknown11(other.getUnknown11());
        }
        if (stepBuilder_ == null) {
          if (!other.step_.isEmpty()) {
            if (step_.isEmpty()) {
              step_ = other.step_;
              bitField0_ = (bitField0_ & ~0x00000020);
            } else {
              ensureStepIsMutable();
              step_.addAll(other.step_);
            }
            onChanged();
          }
        } else {
          if (!other.step_.isEmpty()) {
            if (stepBuilder_.isEmpty()) {
              stepBuilder_.dispose();
              stepBuilder_ = null;
              step_ = other.step_;
              bitField0_ = (bitField0_ & ~0x00000020);
              stepBuilder_ = 
                com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                   getStepFieldBuilder() : null;
            } else {
              stepBuilder_.addAllMessages(other.step_);
            }
          }
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        if (!hasName()) {
          return false;
        }
        if (!hasId()) {
          return false;
        }
        if (!hasType()) {
          return false;
        }
        if (!hasUnknown11()) {
          return false;
        }
        for (int i = 0; i < getStepCount(); i++) {
          if (!getStep(i).isInitialized()) {
            return false;
          }
        }
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        net.studioblueplanet.tomtomwatch.WorkoutProto.Workout parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (net.studioblueplanet.tomtomwatch.WorkoutProto.Workout) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private int name_ ;
      /**
       * <pre>
       * Name of the workout as refrence to a workoutDescription
       * </pre>
       *
       * <code>required int32 name = 2;</code>
       */
      public boolean hasName() {
        return ((bitField0_ & 0x00000001) != 0);
      }
      /**
       * <pre>
       * Name of the workout as refrence to a workoutDescription
       * </pre>
       *
       * <code>required int32 name = 2;</code>
       */
      public int getName() {
        return name_;
      }
      /**
       * <pre>
       * Name of the workout as refrence to a workoutDescription
       * </pre>
       *
       * <code>required int32 name = 2;</code>
       */
      public Builder setName(int value) {
        bitField0_ |= 0x00000001;
        name_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Name of the workout as refrence to a workoutDescription
       * </pre>
       *
       * <code>required int32 name = 2;</code>
       */
      public Builder clearName() {
        bitField0_ = (bitField0_ & ~0x00000001);
        name_ = 0;
        onChanged();
        return this;
      }

      private int description_ ;
      /**
       * <pre>
       * Description of the workout, as reference to a workoutDescription
       * </pre>
       *
       * <code>optional int32 description = 3;</code>
       */
      public boolean hasDescription() {
        return ((bitField0_ & 0x00000002) != 0);
      }
      /**
       * <pre>
       * Description of the workout, as reference to a workoutDescription
       * </pre>
       *
       * <code>optional int32 description = 3;</code>
       */
      public int getDescription() {
        return description_;
      }
      /**
       * <pre>
       * Description of the workout, as reference to a workoutDescription
       * </pre>
       *
       * <code>optional int32 description = 3;</code>
       */
      public Builder setDescription(int value) {
        bitField0_ |= 0x00000002;
        description_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Description of the workout, as reference to a workoutDescription
       * </pre>
       *
       * <code>optional int32 description = 3;</code>
       */
      public Builder clearDescription() {
        bitField0_ = (bitField0_ & ~0x00000002);
        description_ = 0;
        onChanged();
        return this;
      }

      private com.google.protobuf.ByteString id_ = com.google.protobuf.ByteString.EMPTY;
      /**
       * <pre>
       * 16 bytes
       * </pre>
       *
       * <code>required bytes id = 4;</code>
       */
      public boolean hasId() {
        return ((bitField0_ & 0x00000004) != 0);
      }
      /**
       * <pre>
       * 16 bytes
       * </pre>
       *
       * <code>required bytes id = 4;</code>
       */
      public com.google.protobuf.ByteString getId() {
        return id_;
      }
      /**
       * <pre>
       * 16 bytes
       * </pre>
       *
       * <code>required bytes id = 4;</code>
       */
      public Builder setId(com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000004;
        id_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * 16 bytes
       * </pre>
       *
       * <code>required bytes id = 4;</code>
       */
      public Builder clearId() {
        bitField0_ = (bitField0_ & ~0x00000004);
        id_ = getDefaultInstance().getId();
        onChanged();
        return this;
      }

      private int type_ ;
      /**
       * <pre>
       * 1: Fat burn, 2: Endurance, 3: Fitness, 4: Speed, 5: Power, 6: Custom 
       * </pre>
       *
       * <code>required int32 Type = 10;</code>
       */
      public boolean hasType() {
        return ((bitField0_ & 0x00000008) != 0);
      }
      /**
       * <pre>
       * 1: Fat burn, 2: Endurance, 3: Fitness, 4: Speed, 5: Power, 6: Custom 
       * </pre>
       *
       * <code>required int32 Type = 10;</code>
       */
      public int getType() {
        return type_;
      }
      /**
       * <pre>
       * 1: Fat burn, 2: Endurance, 3: Fitness, 4: Speed, 5: Power, 6: Custom 
       * </pre>
       *
       * <code>required int32 Type = 10;</code>
       */
      public Builder setType(int value) {
        bitField0_ |= 0x00000008;
        type_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * 1: Fat burn, 2: Endurance, 3: Fitness, 4: Speed, 5: Power, 6: Custom 
       * </pre>
       *
       * <code>required int32 Type = 10;</code>
       */
      public Builder clearType() {
        bitField0_ = (bitField0_ & ~0x00000008);
        type_ = 0;
        onChanged();
        return this;
      }

      private int unknown11_ ;
      /**
       * <pre>
       * value 2
       * </pre>
       *
       * <code>required int32 unknown11 = 11;</code>
       */
      public boolean hasUnknown11() {
        return ((bitField0_ & 0x00000010) != 0);
      }
      /**
       * <pre>
       * value 2
       * </pre>
       *
       * <code>required int32 unknown11 = 11;</code>
       */
      public int getUnknown11() {
        return unknown11_;
      }
      /**
       * <pre>
       * value 2
       * </pre>
       *
       * <code>required int32 unknown11 = 11;</code>
       */
      public Builder setUnknown11(int value) {
        bitField0_ |= 0x00000010;
        unknown11_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * value 2
       * </pre>
       *
       * <code>required int32 unknown11 = 11;</code>
       */
      public Builder clearUnknown11() {
        bitField0_ = (bitField0_ & ~0x00000010);
        unknown11_ = 0;
        onChanged();
        return this;
      }

      private java.util.List<net.studioblueplanet.tomtomwatch.WorkoutProto.WorkoutStep> step_ =
        java.util.Collections.emptyList();
      private void ensureStepIsMutable() {
        if (!((bitField0_ & 0x00000020) != 0)) {
          step_ = new java.util.ArrayList<net.studioblueplanet.tomtomwatch.WorkoutProto.WorkoutStep>(step_);
          bitField0_ |= 0x00000020;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilderV3<
          net.studioblueplanet.tomtomwatch.WorkoutProto.WorkoutStep, net.studioblueplanet.tomtomwatch.WorkoutProto.WorkoutStep.Builder, net.studioblueplanet.tomtomwatch.WorkoutProto.WorkoutStepOrBuilder> stepBuilder_;

      /**
       * <pre>
       * Steps that make up the workout
       * </pre>
       *
       * <code>repeated .tutorial.WorkoutStep step = 12;</code>
       */
      public java.util.List<net.studioblueplanet.tomtomwatch.WorkoutProto.WorkoutStep> getStepList() {
        if (stepBuilder_ == null) {
          return java.util.Collections.unmodifiableList(step_);
        } else {
          return stepBuilder_.getMessageList();
        }
      }
      /**
       * <pre>
       * Steps that make up the workout
       * </pre>
       *
       * <code>repeated .tutorial.WorkoutStep step = 12;</code>
       */
      public int getStepCount() {
        if (stepBuilder_ == null) {
          return step_.size();
        } else {
          return stepBuilder_.getCount();
        }
      }
      /**
       * <pre>
       * Steps that make up the workout
       * </pre>
       *
       * <code>repeated .tutorial.WorkoutStep step = 12;</code>
       */
      public net.studioblueplanet.tomtomwatch.WorkoutProto.WorkoutStep getStep(int index) {
        if (stepBuilder_ == null) {
          return step_.get(index);
        } else {
          return stepBuilder_.getMessage(index);
        }
      }
      /**
       * <pre>
       * Steps that make up the workout
       * </pre>
       *
       * <code>repeated .tutorial.WorkoutStep step = 12;</code>
       */
      public Builder setStep(
          int index, net.studioblueplanet.tomtomwatch.WorkoutProto.WorkoutStep value) {
        if (stepBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureStepIsMutable();
          step_.set(index, value);
          onChanged();
        } else {
          stepBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <pre>
       * Steps that make up the workout
       * </pre>
       *
       * <code>repeated .tutorial.WorkoutStep step = 12;</code>
       */
      public Builder setStep(
          int index, net.studioblueplanet.tomtomwatch.WorkoutProto.WorkoutStep.Builder builderForValue) {
        if (stepBuilder_ == null) {
          ensureStepIsMutable();
          step_.set(index, builderForValue.build());
          onChanged();
        } else {
          stepBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * Steps that make up the workout
       * </pre>
       *
       * <code>repeated .tutorial.WorkoutStep step = 12;</code>
       */
      public Builder addStep(net.studioblueplanet.tomtomwatch.WorkoutProto.WorkoutStep value) {
        if (stepBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureStepIsMutable();
          step_.add(value);
          onChanged();
        } else {
          stepBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <pre>
       * Steps that make up the workout
       * </pre>
       *
       * <code>repeated .tutorial.WorkoutStep step = 12;</code>
       */
      public Builder addStep(
          int index, net.studioblueplanet.tomtomwatch.WorkoutProto.WorkoutStep value) {
        if (stepBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureStepIsMutable();
          step_.add(index, value);
          onChanged();
        } else {
          stepBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <pre>
       * Steps that make up the workout
       * </pre>
       *
       * <code>repeated .tutorial.WorkoutStep step = 12;</code>
       */
      public Builder addStep(
          net.studioblueplanet.tomtomwatch.WorkoutProto.WorkoutStep.Builder builderForValue) {
        if (stepBuilder_ == null) {
          ensureStepIsMutable();
          step_.add(builderForValue.build());
          onChanged();
        } else {
          stepBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * Steps that make up the workout
       * </pre>
       *
       * <code>repeated .tutorial.WorkoutStep step = 12;</code>
       */
      public Builder addStep(
          int index, net.studioblueplanet.tomtomwatch.WorkoutProto.WorkoutStep.Builder builderForValue) {
        if (stepBuilder_ == null) {
          ensureStepIsMutable();
          step_.add(index, builderForValue.build());
          onChanged();
        } else {
          stepBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * Steps that make up the workout
       * </pre>
       *
       * <code>repeated .tutorial.WorkoutStep step = 12;</code>
       */
      public Builder addAllStep(
          java.lang.Iterable<? extends net.studioblueplanet.tomtomwatch.WorkoutProto.WorkoutStep> values) {
        if (stepBuilder_ == null) {
          ensureStepIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, step_);
          onChanged();
        } else {
          stepBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <pre>
       * Steps that make up the workout
       * </pre>
       *
       * <code>repeated .tutorial.WorkoutStep step = 12;</code>
       */
      public Builder clearStep() {
        if (stepBuilder_ == null) {
          step_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000020);
          onChanged();
        } else {
          stepBuilder_.clear();
        }
        return this;
      }
      /**
       * <pre>
       * Steps that make up the workout
       * </pre>
       *
       * <code>repeated .tutorial.WorkoutStep step = 12;</code>
       */
      public Builder removeStep(int index) {
        if (stepBuilder_ == null) {
          ensureStepIsMutable();
          step_.remove(index);
          onChanged();
        } else {
          stepBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <pre>
       * Steps that make up the workout
       * </pre>
       *
       * <code>repeated .tutorial.WorkoutStep step = 12;</code>
       */
      public net.studioblueplanet.tomtomwatch.WorkoutProto.WorkoutStep.Builder getStepBuilder(
          int index) {
        return getStepFieldBuilder().getBuilder(index);
      }
      /**
       * <pre>
       * Steps that make up the workout
       * </pre>
       *
       * <code>repeated .tutorial.WorkoutStep step = 12;</code>
       */
      public net.studioblueplanet.tomtomwatch.WorkoutProto.WorkoutStepOrBuilder getStepOrBuilder(
          int index) {
        if (stepBuilder_ == null) {
          return step_.get(index);  } else {
          return stepBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <pre>
       * Steps that make up the workout
       * </pre>
       *
       * <code>repeated .tutorial.WorkoutStep step = 12;</code>
       */
      public java.util.List<? extends net.studioblueplanet.tomtomwatch.WorkoutProto.WorkoutStepOrBuilder> 
           getStepOrBuilderList() {
        if (stepBuilder_ != null) {
          return stepBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(step_);
        }
      }
      /**
       * <pre>
       * Steps that make up the workout
       * </pre>
       *
       * <code>repeated .tutorial.WorkoutStep step = 12;</code>
       */
      public net.studioblueplanet.tomtomwatch.WorkoutProto.WorkoutStep.Builder addStepBuilder() {
        return getStepFieldBuilder().addBuilder(
            net.studioblueplanet.tomtomwatch.WorkoutProto.WorkoutStep.getDefaultInstance());
      }
      /**
       * <pre>
       * Steps that make up the workout
       * </pre>
       *
       * <code>repeated .tutorial.WorkoutStep step = 12;</code>
       */
      public net.studioblueplanet.tomtomwatch.WorkoutProto.WorkoutStep.Builder addStepBuilder(
          int index) {
        return getStepFieldBuilder().addBuilder(
            index, net.studioblueplanet.tomtomwatch.WorkoutProto.WorkoutStep.getDefaultInstance());
      }
      /**
       * <pre>
       * Steps that make up the workout
       * </pre>
       *
       * <code>repeated .tutorial.WorkoutStep step = 12;</code>
       */
      public java.util.List<net.studioblueplanet.tomtomwatch.WorkoutProto.WorkoutStep.Builder> 
           getStepBuilderList() {
        return getStepFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilderV3<
          net.studioblueplanet.tomtomwatch.WorkoutProto.WorkoutStep, net.studioblueplanet.tomtomwatch.WorkoutProto.WorkoutStep.Builder, net.studioblueplanet.tomtomwatch.WorkoutProto.WorkoutStepOrBuilder> 
          getStepFieldBuilder() {
        if (stepBuilder_ == null) {
          stepBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
              net.studioblueplanet.tomtomwatch.WorkoutProto.WorkoutStep, net.studioblueplanet.tomtomwatch.WorkoutProto.WorkoutStep.Builder, net.studioblueplanet.tomtomwatch.WorkoutProto.WorkoutStepOrBuilder>(
                  step_,
                  ((bitField0_ & 0x00000020) != 0),
                  getParentForChildren(),
                  isClean());
          step_ = null;
        }
        return stepBuilder_;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:tutorial.Workout)
    }

    // @@protoc_insertion_point(class_scope:tutorial.Workout)
    private static final net.studioblueplanet.tomtomwatch.WorkoutProto.Workout DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new net.studioblueplanet.tomtomwatch.WorkoutProto.Workout();
    }

    public static net.studioblueplanet.tomtomwatch.WorkoutProto.Workout getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    @java.lang.Deprecated public static final com.google.protobuf.Parser<Workout>
        PARSER = new com.google.protobuf.AbstractParser<Workout>() {
      @java.lang.Override
      public Workout parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new Workout(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<Workout> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<Workout> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public net.studioblueplanet.tomtomwatch.WorkoutProto.Workout getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface WorkoutListItemOrBuilder extends
      // @@protoc_insertion_point(interface_extends:tutorial.WorkoutListItem)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     * File ID representing the workout, like 0x00BE0001 
     * </pre>
     *
     * <code>required fixed32 fileId = 1;</code>
     */
    boolean hasFileId();
    /**
     * <pre>
     * File ID representing the workout, like 0x00BE0001 
     * </pre>
     *
     * <code>required fixed32 fileId = 1;</code>
     */
    int getFileId();

    /**
     * <pre>
     * 16 bytes   
     * </pre>
     *
     * <code>required bytes id = 2;</code>
     */
    boolean hasId();
    /**
     * <pre>
     * 16 bytes   
     * </pre>
     *
     * <code>required bytes id = 2;</code>
     */
    com.google.protobuf.ByteString getId();

    /**
     * <pre>
     * Workout Name in the menu, like '★☆☆30 min'
     * </pre>
     *
     * <code>required int32 itemName = 3;</code>
     */
    boolean hasItemName();
    /**
     * <pre>
     * Workout Name in the menu, like '★☆☆30 min'
     * </pre>
     *
     * <code>required int32 itemName = 3;</code>
     */
    int getItemName();

    /**
     * <pre>
     * Workout Description in the menu, like 'Keep going and stay in the Fat Burn HR zone for the entire time'
     * </pre>
     *
     * <code>required int32 itemDescription = 4;</code>
     */
    boolean hasItemDescription();
    /**
     * <pre>
     * Workout Description in the menu, like 'Keep going and stay in the Fat Burn HR zone for the entire time'
     * </pre>
     *
     * <code>required int32 itemDescription = 4;</code>
     */
    int getItemDescription();

    /**
     * <pre>
     * 16 bytes, same bytes as unknown4 in Program
     * </pre>
     *
     * <code>required bytes workoutId = 5;</code>
     */
    boolean hasWorkoutId();
    /**
     * <pre>
     * 16 bytes, same bytes as unknown4 in Program
     * </pre>
     *
     * <code>required bytes workoutId = 5;</code>
     */
    com.google.protobuf.ByteString getWorkoutId();

    /**
     * <pre>
     * value=0
     * </pre>
     *
     * <code>required int32 unknown7 = 7;</code>
     */
    boolean hasUnknown7();
    /**
     * <pre>
     * value=0
     * </pre>
     *
     * <code>required int32 unknown7 = 7;</code>
     */
    int getUnknown7();

    /**
     * <pre>
     * value=0
     * </pre>
     *
     * <code>required int32 unknown8 = 8;</code>
     */
    boolean hasUnknown8();
    /**
     * <pre>
     * value=0
     * </pre>
     *
     * <code>required int32 unknown8 = 8;</code>
     */
    int getUnknown8();

    /**
     * <pre>
     * definitly used, usage unknown
     * </pre>
     *
     * <code>required int32 unknown9 = 9;</code>
     */
    boolean hasUnknown9();
    /**
     * <pre>
     * definitly used, usage unknown
     * </pre>
     *
     * <code>required int32 unknown9 = 9;</code>
     */
    int getUnknown9();

    /**
     * <pre>
     * 0x0802 for cycling, 0x4181 for running   
     * </pre>
     *
     * <code>required fixed64 activity = 10;</code>
     */
    boolean hasActivity();
    /**
     * <pre>
     * 0x0802 for cycling, 0x4181 for running   
     * </pre>
     *
     * <code>required fixed64 activity = 10;</code>
     */
    long getActivity();

    /**
     * <pre>
     * 1: Fat burn, 2: Endurance, 3: Fitness, 4: Speed, 5: Power, 6: Custom 
     * </pre>
     *
     * <code>required int32 type = 11;</code>
     */
    boolean hasType();
    /**
     * <pre>
     * 1: Fat burn, 2: Endurance, 3: Fitness, 4: Speed, 5: Power, 6: Custom 
     * </pre>
     *
     * <code>required int32 type = 11;</code>
     */
    int getType();

    /**
     * <pre>
     * value=2
     * </pre>
     *
     * <code>required int32 unknown12 = 12;</code>
     */
    boolean hasUnknown12();
    /**
     * <pre>
     * value=2
     * </pre>
     *
     * <code>required int32 unknown12 = 12;</code>
     */
    int getUnknown12();

    /**
     * <pre>
     * value=1
     * </pre>
     *
     * <code>required int32 unknown13 = 13;</code>
     */
    boolean hasUnknown13();
    /**
     * <pre>
     * value=1
     * </pre>
     *
     * <code>required int32 unknown13 = 13;</code>
     */
    int getUnknown13();
  }
  /**
   * <pre>
   *#################################################################################################
   * 4th level: an Item in the Workout list/menu
   *#################################################################################################
   * </pre>
   *
   * Protobuf type {@code tutorial.WorkoutListItem}
   */
  public  static final class WorkoutListItem extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:tutorial.WorkoutListItem)
      WorkoutListItemOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use WorkoutListItem.newBuilder() to construct.
    private WorkoutListItem(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private WorkoutListItem() {
      id_ = com.google.protobuf.ByteString.EMPTY;
      workoutId_ = com.google.protobuf.ByteString.EMPTY;
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new WorkoutListItem();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private WorkoutListItem(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 13: {
              bitField0_ |= 0x00000001;
              fileId_ = input.readFixed32();
              break;
            }
            case 18: {
              bitField0_ |= 0x00000002;
              id_ = input.readBytes();
              break;
            }
            case 24: {
              bitField0_ |= 0x00000004;
              itemName_ = input.readInt32();
              break;
            }
            case 32: {
              bitField0_ |= 0x00000008;
              itemDescription_ = input.readInt32();
              break;
            }
            case 42: {
              bitField0_ |= 0x00000010;
              workoutId_ = input.readBytes();
              break;
            }
            case 56: {
              bitField0_ |= 0x00000020;
              unknown7_ = input.readInt32();
              break;
            }
            case 64: {
              bitField0_ |= 0x00000040;
              unknown8_ = input.readInt32();
              break;
            }
            case 72: {
              bitField0_ |= 0x00000080;
              unknown9_ = input.readInt32();
              break;
            }
            case 81: {
              bitField0_ |= 0x00000100;
              activity_ = input.readFixed64();
              break;
            }
            case 88: {
              bitField0_ |= 0x00000200;
              type_ = input.readInt32();
              break;
            }
            case 96: {
              bitField0_ |= 0x00000400;
              unknown12_ = input.readInt32();
              break;
            }
            case 104: {
              bitField0_ |= 0x00000800;
              unknown13_ = input.readInt32();
              break;
            }
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return net.studioblueplanet.tomtomwatch.WorkoutProto.internal_static_tutorial_WorkoutListItem_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return net.studioblueplanet.tomtomwatch.WorkoutProto.internal_static_tutorial_WorkoutListItem_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              net.studioblueplanet.tomtomwatch.WorkoutProto.WorkoutListItem.class, net.studioblueplanet.tomtomwatch.WorkoutProto.WorkoutListItem.Builder.class);
    }

    private int bitField0_;
    public static final int FILEID_FIELD_NUMBER = 1;
    private int fileId_;
    /**
     * <pre>
     * File ID representing the workout, like 0x00BE0001 
     * </pre>
     *
     * <code>required fixed32 fileId = 1;</code>
     */
    public boolean hasFileId() {
      return ((bitField0_ & 0x00000001) != 0);
    }
    /**
     * <pre>
     * File ID representing the workout, like 0x00BE0001 
     * </pre>
     *
     * <code>required fixed32 fileId = 1;</code>
     */
    public int getFileId() {
      return fileId_;
    }

    public static final int ID_FIELD_NUMBER = 2;
    private com.google.protobuf.ByteString id_;
    /**
     * <pre>
     * 16 bytes   
     * </pre>
     *
     * <code>required bytes id = 2;</code>
     */
    public boolean hasId() {
      return ((bitField0_ & 0x00000002) != 0);
    }
    /**
     * <pre>
     * 16 bytes   
     * </pre>
     *
     * <code>required bytes id = 2;</code>
     */
    public com.google.protobuf.ByteString getId() {
      return id_;
    }

    public static final int ITEMNAME_FIELD_NUMBER = 3;
    private int itemName_;
    /**
     * <pre>
     * Workout Name in the menu, like '★☆☆30 min'
     * </pre>
     *
     * <code>required int32 itemName = 3;</code>
     */
    public boolean hasItemName() {
      return ((bitField0_ & 0x00000004) != 0);
    }
    /**
     * <pre>
     * Workout Name in the menu, like '★☆☆30 min'
     * </pre>
     *
     * <code>required int32 itemName = 3;</code>
     */
    public int getItemName() {
      return itemName_;
    }

    public static final int ITEMDESCRIPTION_FIELD_NUMBER = 4;
    private int itemDescription_;
    /**
     * <pre>
     * Workout Description in the menu, like 'Keep going and stay in the Fat Burn HR zone for the entire time'
     * </pre>
     *
     * <code>required int32 itemDescription = 4;</code>
     */
    public boolean hasItemDescription() {
      return ((bitField0_ & 0x00000008) != 0);
    }
    /**
     * <pre>
     * Workout Description in the menu, like 'Keep going and stay in the Fat Burn HR zone for the entire time'
     * </pre>
     *
     * <code>required int32 itemDescription = 4;</code>
     */
    public int getItemDescription() {
      return itemDescription_;
    }

    public static final int WORKOUTID_FIELD_NUMBER = 5;
    private com.google.protobuf.ByteString workoutId_;
    /**
     * <pre>
     * 16 bytes, same bytes as unknown4 in Program
     * </pre>
     *
     * <code>required bytes workoutId = 5;</code>
     */
    public boolean hasWorkoutId() {
      return ((bitField0_ & 0x00000010) != 0);
    }
    /**
     * <pre>
     * 16 bytes, same bytes as unknown4 in Program
     * </pre>
     *
     * <code>required bytes workoutId = 5;</code>
     */
    public com.google.protobuf.ByteString getWorkoutId() {
      return workoutId_;
    }

    public static final int UNKNOWN7_FIELD_NUMBER = 7;
    private int unknown7_;
    /**
     * <pre>
     * value=0
     * </pre>
     *
     * <code>required int32 unknown7 = 7;</code>
     */
    public boolean hasUnknown7() {
      return ((bitField0_ & 0x00000020) != 0);
    }
    /**
     * <pre>
     * value=0
     * </pre>
     *
     * <code>required int32 unknown7 = 7;</code>
     */
    public int getUnknown7() {
      return unknown7_;
    }

    public static final int UNKNOWN8_FIELD_NUMBER = 8;
    private int unknown8_;
    /**
     * <pre>
     * value=0
     * </pre>
     *
     * <code>required int32 unknown8 = 8;</code>
     */
    public boolean hasUnknown8() {
      return ((bitField0_ & 0x00000040) != 0);
    }
    /**
     * <pre>
     * value=0
     * </pre>
     *
     * <code>required int32 unknown8 = 8;</code>
     */
    public int getUnknown8() {
      return unknown8_;
    }

    public static final int UNKNOWN9_FIELD_NUMBER = 9;
    private int unknown9_;
    /**
     * <pre>
     * definitly used, usage unknown
     * </pre>
     *
     * <code>required int32 unknown9 = 9;</code>
     */
    public boolean hasUnknown9() {
      return ((bitField0_ & 0x00000080) != 0);
    }
    /**
     * <pre>
     * definitly used, usage unknown
     * </pre>
     *
     * <code>required int32 unknown9 = 9;</code>
     */
    public int getUnknown9() {
      return unknown9_;
    }

    public static final int ACTIVITY_FIELD_NUMBER = 10;
    private long activity_;
    /**
     * <pre>
     * 0x0802 for cycling, 0x4181 for running   
     * </pre>
     *
     * <code>required fixed64 activity = 10;</code>
     */
    public boolean hasActivity() {
      return ((bitField0_ & 0x00000100) != 0);
    }
    /**
     * <pre>
     * 0x0802 for cycling, 0x4181 for running   
     * </pre>
     *
     * <code>required fixed64 activity = 10;</code>
     */
    public long getActivity() {
      return activity_;
    }

    public static final int TYPE_FIELD_NUMBER = 11;
    private int type_;
    /**
     * <pre>
     * 1: Fat burn, 2: Endurance, 3: Fitness, 4: Speed, 5: Power, 6: Custom 
     * </pre>
     *
     * <code>required int32 type = 11;</code>
     */
    public boolean hasType() {
      return ((bitField0_ & 0x00000200) != 0);
    }
    /**
     * <pre>
     * 1: Fat burn, 2: Endurance, 3: Fitness, 4: Speed, 5: Power, 6: Custom 
     * </pre>
     *
     * <code>required int32 type = 11;</code>
     */
    public int getType() {
      return type_;
    }

    public static final int UNKNOWN12_FIELD_NUMBER = 12;
    private int unknown12_;
    /**
     * <pre>
     * value=2
     * </pre>
     *
     * <code>required int32 unknown12 = 12;</code>
     */
    public boolean hasUnknown12() {
      return ((bitField0_ & 0x00000400) != 0);
    }
    /**
     * <pre>
     * value=2
     * </pre>
     *
     * <code>required int32 unknown12 = 12;</code>
     */
    public int getUnknown12() {
      return unknown12_;
    }

    public static final int UNKNOWN13_FIELD_NUMBER = 13;
    private int unknown13_;
    /**
     * <pre>
     * value=1
     * </pre>
     *
     * <code>required int32 unknown13 = 13;</code>
     */
    public boolean hasUnknown13() {
      return ((bitField0_ & 0x00000800) != 0);
    }
    /**
     * <pre>
     * value=1
     * </pre>
     *
     * <code>required int32 unknown13 = 13;</code>
     */
    public int getUnknown13() {
      return unknown13_;
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      if (!hasFileId()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasId()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasItemName()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasItemDescription()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasWorkoutId()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasUnknown7()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasUnknown8()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasUnknown9()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasActivity()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasType()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasUnknown12()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasUnknown13()) {
        memoizedIsInitialized = 0;
        return false;
      }
      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (((bitField0_ & 0x00000001) != 0)) {
        output.writeFixed32(1, fileId_);
      }
      if (((bitField0_ & 0x00000002) != 0)) {
        output.writeBytes(2, id_);
      }
      if (((bitField0_ & 0x00000004) != 0)) {
        output.writeInt32(3, itemName_);
      }
      if (((bitField0_ & 0x00000008) != 0)) {
        output.writeInt32(4, itemDescription_);
      }
      if (((bitField0_ & 0x00000010) != 0)) {
        output.writeBytes(5, workoutId_);
      }
      if (((bitField0_ & 0x00000020) != 0)) {
        output.writeInt32(7, unknown7_);
      }
      if (((bitField0_ & 0x00000040) != 0)) {
        output.writeInt32(8, unknown8_);
      }
      if (((bitField0_ & 0x00000080) != 0)) {
        output.writeInt32(9, unknown9_);
      }
      if (((bitField0_ & 0x00000100) != 0)) {
        output.writeFixed64(10, activity_);
      }
      if (((bitField0_ & 0x00000200) != 0)) {
        output.writeInt32(11, type_);
      }
      if (((bitField0_ & 0x00000400) != 0)) {
        output.writeInt32(12, unknown12_);
      }
      if (((bitField0_ & 0x00000800) != 0)) {
        output.writeInt32(13, unknown13_);
      }
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeFixed32Size(1, fileId_);
      }
      if (((bitField0_ & 0x00000002) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(2, id_);
      }
      if (((bitField0_ & 0x00000004) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(3, itemName_);
      }
      if (((bitField0_ & 0x00000008) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(4, itemDescription_);
      }
      if (((bitField0_ & 0x00000010) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(5, workoutId_);
      }
      if (((bitField0_ & 0x00000020) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(7, unknown7_);
      }
      if (((bitField0_ & 0x00000040) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(8, unknown8_);
      }
      if (((bitField0_ & 0x00000080) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(9, unknown9_);
      }
      if (((bitField0_ & 0x00000100) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeFixed64Size(10, activity_);
      }
      if (((bitField0_ & 0x00000200) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(11, type_);
      }
      if (((bitField0_ & 0x00000400) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(12, unknown12_);
      }
      if (((bitField0_ & 0x00000800) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(13, unknown13_);
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof net.studioblueplanet.tomtomwatch.WorkoutProto.WorkoutListItem)) {
        return super.equals(obj);
      }
      net.studioblueplanet.tomtomwatch.WorkoutProto.WorkoutListItem other = (net.studioblueplanet.tomtomwatch.WorkoutProto.WorkoutListItem) obj;

      if (hasFileId() != other.hasFileId()) return false;
      if (hasFileId()) {
        if (getFileId()
            != other.getFileId()) return false;
      }
      if (hasId() != other.hasId()) return false;
      if (hasId()) {
        if (!getId()
            .equals(other.getId())) return false;
      }
      if (hasItemName() != other.hasItemName()) return false;
      if (hasItemName()) {
        if (getItemName()
            != other.getItemName()) return false;
      }
      if (hasItemDescription() != other.hasItemDescription()) return false;
      if (hasItemDescription()) {
        if (getItemDescription()
            != other.getItemDescription()) return false;
      }
      if (hasWorkoutId() != other.hasWorkoutId()) return false;
      if (hasWorkoutId()) {
        if (!getWorkoutId()
            .equals(other.getWorkoutId())) return false;
      }
      if (hasUnknown7() != other.hasUnknown7()) return false;
      if (hasUnknown7()) {
        if (getUnknown7()
            != other.getUnknown7()) return false;
      }
      if (hasUnknown8() != other.hasUnknown8()) return false;
      if (hasUnknown8()) {
        if (getUnknown8()
            != other.getUnknown8()) return false;
      }
      if (hasUnknown9() != other.hasUnknown9()) return false;
      if (hasUnknown9()) {
        if (getUnknown9()
            != other.getUnknown9()) return false;
      }
      if (hasActivity() != other.hasActivity()) return false;
      if (hasActivity()) {
        if (getActivity()
            != other.getActivity()) return false;
      }
      if (hasType() != other.hasType()) return false;
      if (hasType()) {
        if (getType()
            != other.getType()) return false;
      }
      if (hasUnknown12() != other.hasUnknown12()) return false;
      if (hasUnknown12()) {
        if (getUnknown12()
            != other.getUnknown12()) return false;
      }
      if (hasUnknown13() != other.hasUnknown13()) return false;
      if (hasUnknown13()) {
        if (getUnknown13()
            != other.getUnknown13()) return false;
      }
      if (!unknownFields.equals(other.unknownFields)) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (hasFileId()) {
        hash = (37 * hash) + FILEID_FIELD_NUMBER;
        hash = (53 * hash) + getFileId();
      }
      if (hasId()) {
        hash = (37 * hash) + ID_FIELD_NUMBER;
        hash = (53 * hash) + getId().hashCode();
      }
      if (hasItemName()) {
        hash = (37 * hash) + ITEMNAME_FIELD_NUMBER;
        hash = (53 * hash) + getItemName();
      }
      if (hasItemDescription()) {
        hash = (37 * hash) + ITEMDESCRIPTION_FIELD_NUMBER;
        hash = (53 * hash) + getItemDescription();
      }
      if (hasWorkoutId()) {
        hash = (37 * hash) + WORKOUTID_FIELD_NUMBER;
        hash = (53 * hash) + getWorkoutId().hashCode();
      }
      if (hasUnknown7()) {
        hash = (37 * hash) + UNKNOWN7_FIELD_NUMBER;
        hash = (53 * hash) + getUnknown7();
      }
      if (hasUnknown8()) {
        hash = (37 * hash) + UNKNOWN8_FIELD_NUMBER;
        hash = (53 * hash) + getUnknown8();
      }
      if (hasUnknown9()) {
        hash = (37 * hash) + UNKNOWN9_FIELD_NUMBER;
        hash = (53 * hash) + getUnknown9();
      }
      if (hasActivity()) {
        hash = (37 * hash) + ACTIVITY_FIELD_NUMBER;
        hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
            getActivity());
      }
      if (hasType()) {
        hash = (37 * hash) + TYPE_FIELD_NUMBER;
        hash = (53 * hash) + getType();
      }
      if (hasUnknown12()) {
        hash = (37 * hash) + UNKNOWN12_FIELD_NUMBER;
        hash = (53 * hash) + getUnknown12();
      }
      if (hasUnknown13()) {
        hash = (37 * hash) + UNKNOWN13_FIELD_NUMBER;
        hash = (53 * hash) + getUnknown13();
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static net.studioblueplanet.tomtomwatch.WorkoutProto.WorkoutListItem parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static net.studioblueplanet.tomtomwatch.WorkoutProto.WorkoutListItem parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static net.studioblueplanet.tomtomwatch.WorkoutProto.WorkoutListItem parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static net.studioblueplanet.tomtomwatch.WorkoutProto.WorkoutListItem parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static net.studioblueplanet.tomtomwatch.WorkoutProto.WorkoutListItem parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static net.studioblueplanet.tomtomwatch.WorkoutProto.WorkoutListItem parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static net.studioblueplanet.tomtomwatch.WorkoutProto.WorkoutListItem parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static net.studioblueplanet.tomtomwatch.WorkoutProto.WorkoutListItem parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static net.studioblueplanet.tomtomwatch.WorkoutProto.WorkoutListItem parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static net.studioblueplanet.tomtomwatch.WorkoutProto.WorkoutListItem parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static net.studioblueplanet.tomtomwatch.WorkoutProto.WorkoutListItem parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static net.studioblueplanet.tomtomwatch.WorkoutProto.WorkoutListItem parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(net.studioblueplanet.tomtomwatch.WorkoutProto.WorkoutListItem prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     *#################################################################################################
     * 4th level: an Item in the Workout list/menu
     *#################################################################################################
     * </pre>
     *
     * Protobuf type {@code tutorial.WorkoutListItem}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:tutorial.WorkoutListItem)
        net.studioblueplanet.tomtomwatch.WorkoutProto.WorkoutListItemOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return net.studioblueplanet.tomtomwatch.WorkoutProto.internal_static_tutorial_WorkoutListItem_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return net.studioblueplanet.tomtomwatch.WorkoutProto.internal_static_tutorial_WorkoutListItem_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                net.studioblueplanet.tomtomwatch.WorkoutProto.WorkoutListItem.class, net.studioblueplanet.tomtomwatch.WorkoutProto.WorkoutListItem.Builder.class);
      }

      // Construct using net.studioblueplanet.tomtomwatch.WorkoutProto.WorkoutListItem.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        fileId_ = 0;
        bitField0_ = (bitField0_ & ~0x00000001);
        id_ = com.google.protobuf.ByteString.EMPTY;
        bitField0_ = (bitField0_ & ~0x00000002);
        itemName_ = 0;
        bitField0_ = (bitField0_ & ~0x00000004);
        itemDescription_ = 0;
        bitField0_ = (bitField0_ & ~0x00000008);
        workoutId_ = com.google.protobuf.ByteString.EMPTY;
        bitField0_ = (bitField0_ & ~0x00000010);
        unknown7_ = 0;
        bitField0_ = (bitField0_ & ~0x00000020);
        unknown8_ = 0;
        bitField0_ = (bitField0_ & ~0x00000040);
        unknown9_ = 0;
        bitField0_ = (bitField0_ & ~0x00000080);
        activity_ = 0L;
        bitField0_ = (bitField0_ & ~0x00000100);
        type_ = 0;
        bitField0_ = (bitField0_ & ~0x00000200);
        unknown12_ = 0;
        bitField0_ = (bitField0_ & ~0x00000400);
        unknown13_ = 0;
        bitField0_ = (bitField0_ & ~0x00000800);
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return net.studioblueplanet.tomtomwatch.WorkoutProto.internal_static_tutorial_WorkoutListItem_descriptor;
      }

      @java.lang.Override
      public net.studioblueplanet.tomtomwatch.WorkoutProto.WorkoutListItem getDefaultInstanceForType() {
        return net.studioblueplanet.tomtomwatch.WorkoutProto.WorkoutListItem.getDefaultInstance();
      }

      @java.lang.Override
      public net.studioblueplanet.tomtomwatch.WorkoutProto.WorkoutListItem build() {
        net.studioblueplanet.tomtomwatch.WorkoutProto.WorkoutListItem result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public net.studioblueplanet.tomtomwatch.WorkoutProto.WorkoutListItem buildPartial() {
        net.studioblueplanet.tomtomwatch.WorkoutProto.WorkoutListItem result = new net.studioblueplanet.tomtomwatch.WorkoutProto.WorkoutListItem(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) != 0)) {
          result.fileId_ = fileId_;
          to_bitField0_ |= 0x00000001;
        }
        if (((from_bitField0_ & 0x00000002) != 0)) {
          to_bitField0_ |= 0x00000002;
        }
        result.id_ = id_;
        if (((from_bitField0_ & 0x00000004) != 0)) {
          result.itemName_ = itemName_;
          to_bitField0_ |= 0x00000004;
        }
        if (((from_bitField0_ & 0x00000008) != 0)) {
          result.itemDescription_ = itemDescription_;
          to_bitField0_ |= 0x00000008;
        }
        if (((from_bitField0_ & 0x00000010) != 0)) {
          to_bitField0_ |= 0x00000010;
        }
        result.workoutId_ = workoutId_;
        if (((from_bitField0_ & 0x00000020) != 0)) {
          result.unknown7_ = unknown7_;
          to_bitField0_ |= 0x00000020;
        }
        if (((from_bitField0_ & 0x00000040) != 0)) {
          result.unknown8_ = unknown8_;
          to_bitField0_ |= 0x00000040;
        }
        if (((from_bitField0_ & 0x00000080) != 0)) {
          result.unknown9_ = unknown9_;
          to_bitField0_ |= 0x00000080;
        }
        if (((from_bitField0_ & 0x00000100) != 0)) {
          result.activity_ = activity_;
          to_bitField0_ |= 0x00000100;
        }
        if (((from_bitField0_ & 0x00000200) != 0)) {
          result.type_ = type_;
          to_bitField0_ |= 0x00000200;
        }
        if (((from_bitField0_ & 0x00000400) != 0)) {
          result.unknown12_ = unknown12_;
          to_bitField0_ |= 0x00000400;
        }
        if (((from_bitField0_ & 0x00000800) != 0)) {
          result.unknown13_ = unknown13_;
          to_bitField0_ |= 0x00000800;
        }
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof net.studioblueplanet.tomtomwatch.WorkoutProto.WorkoutListItem) {
          return mergeFrom((net.studioblueplanet.tomtomwatch.WorkoutProto.WorkoutListItem)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(net.studioblueplanet.tomtomwatch.WorkoutProto.WorkoutListItem other) {
        if (other == net.studioblueplanet.tomtomwatch.WorkoutProto.WorkoutListItem.getDefaultInstance()) return this;
        if (other.hasFileId()) {
          setFileId(other.getFileId());
        }
        if (other.hasId()) {
          setId(other.getId());
        }
        if (other.hasItemName()) {
          setItemName(other.getItemName());
        }
        if (other.hasItemDescription()) {
          setItemDescription(other.getItemDescription());
        }
        if (other.hasWorkoutId()) {
          setWorkoutId(other.getWorkoutId());
        }
        if (other.hasUnknown7()) {
          setUnknown7(other.getUnknown7());
        }
        if (other.hasUnknown8()) {
          setUnknown8(other.getUnknown8());
        }
        if (other.hasUnknown9()) {
          setUnknown9(other.getUnknown9());
        }
        if (other.hasActivity()) {
          setActivity(other.getActivity());
        }
        if (other.hasType()) {
          setType(other.getType());
        }
        if (other.hasUnknown12()) {
          setUnknown12(other.getUnknown12());
        }
        if (other.hasUnknown13()) {
          setUnknown13(other.getUnknown13());
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        if (!hasFileId()) {
          return false;
        }
        if (!hasId()) {
          return false;
        }
        if (!hasItemName()) {
          return false;
        }
        if (!hasItemDescription()) {
          return false;
        }
        if (!hasWorkoutId()) {
          return false;
        }
        if (!hasUnknown7()) {
          return false;
        }
        if (!hasUnknown8()) {
          return false;
        }
        if (!hasUnknown9()) {
          return false;
        }
        if (!hasActivity()) {
          return false;
        }
        if (!hasType()) {
          return false;
        }
        if (!hasUnknown12()) {
          return false;
        }
        if (!hasUnknown13()) {
          return false;
        }
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        net.studioblueplanet.tomtomwatch.WorkoutProto.WorkoutListItem parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (net.studioblueplanet.tomtomwatch.WorkoutProto.WorkoutListItem) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private int fileId_ ;
      /**
       * <pre>
       * File ID representing the workout, like 0x00BE0001 
       * </pre>
       *
       * <code>required fixed32 fileId = 1;</code>
       */
      public boolean hasFileId() {
        return ((bitField0_ & 0x00000001) != 0);
      }
      /**
       * <pre>
       * File ID representing the workout, like 0x00BE0001 
       * </pre>
       *
       * <code>required fixed32 fileId = 1;</code>
       */
      public int getFileId() {
        return fileId_;
      }
      /**
       * <pre>
       * File ID representing the workout, like 0x00BE0001 
       * </pre>
       *
       * <code>required fixed32 fileId = 1;</code>
       */
      public Builder setFileId(int value) {
        bitField0_ |= 0x00000001;
        fileId_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * File ID representing the workout, like 0x00BE0001 
       * </pre>
       *
       * <code>required fixed32 fileId = 1;</code>
       */
      public Builder clearFileId() {
        bitField0_ = (bitField0_ & ~0x00000001);
        fileId_ = 0;
        onChanged();
        return this;
      }

      private com.google.protobuf.ByteString id_ = com.google.protobuf.ByteString.EMPTY;
      /**
       * <pre>
       * 16 bytes   
       * </pre>
       *
       * <code>required bytes id = 2;</code>
       */
      public boolean hasId() {
        return ((bitField0_ & 0x00000002) != 0);
      }
      /**
       * <pre>
       * 16 bytes   
       * </pre>
       *
       * <code>required bytes id = 2;</code>
       */
      public com.google.protobuf.ByteString getId() {
        return id_;
      }
      /**
       * <pre>
       * 16 bytes   
       * </pre>
       *
       * <code>required bytes id = 2;</code>
       */
      public Builder setId(com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000002;
        id_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * 16 bytes   
       * </pre>
       *
       * <code>required bytes id = 2;</code>
       */
      public Builder clearId() {
        bitField0_ = (bitField0_ & ~0x00000002);
        id_ = getDefaultInstance().getId();
        onChanged();
        return this;
      }

      private int itemName_ ;
      /**
       * <pre>
       * Workout Name in the menu, like '★☆☆30 min'
       * </pre>
       *
       * <code>required int32 itemName = 3;</code>
       */
      public boolean hasItemName() {
        return ((bitField0_ & 0x00000004) != 0);
      }
      /**
       * <pre>
       * Workout Name in the menu, like '★☆☆30 min'
       * </pre>
       *
       * <code>required int32 itemName = 3;</code>
       */
      public int getItemName() {
        return itemName_;
      }
      /**
       * <pre>
       * Workout Name in the menu, like '★☆☆30 min'
       * </pre>
       *
       * <code>required int32 itemName = 3;</code>
       */
      public Builder setItemName(int value) {
        bitField0_ |= 0x00000004;
        itemName_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Workout Name in the menu, like '★☆☆30 min'
       * </pre>
       *
       * <code>required int32 itemName = 3;</code>
       */
      public Builder clearItemName() {
        bitField0_ = (bitField0_ & ~0x00000004);
        itemName_ = 0;
        onChanged();
        return this;
      }

      private int itemDescription_ ;
      /**
       * <pre>
       * Workout Description in the menu, like 'Keep going and stay in the Fat Burn HR zone for the entire time'
       * </pre>
       *
       * <code>required int32 itemDescription = 4;</code>
       */
      public boolean hasItemDescription() {
        return ((bitField0_ & 0x00000008) != 0);
      }
      /**
       * <pre>
       * Workout Description in the menu, like 'Keep going and stay in the Fat Burn HR zone for the entire time'
       * </pre>
       *
       * <code>required int32 itemDescription = 4;</code>
       */
      public int getItemDescription() {
        return itemDescription_;
      }
      /**
       * <pre>
       * Workout Description in the menu, like 'Keep going and stay in the Fat Burn HR zone for the entire time'
       * </pre>
       *
       * <code>required int32 itemDescription = 4;</code>
       */
      public Builder setItemDescription(int value) {
        bitField0_ |= 0x00000008;
        itemDescription_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Workout Description in the menu, like 'Keep going and stay in the Fat Burn HR zone for the entire time'
       * </pre>
       *
       * <code>required int32 itemDescription = 4;</code>
       */
      public Builder clearItemDescription() {
        bitField0_ = (bitField0_ & ~0x00000008);
        itemDescription_ = 0;
        onChanged();
        return this;
      }

      private com.google.protobuf.ByteString workoutId_ = com.google.protobuf.ByteString.EMPTY;
      /**
       * <pre>
       * 16 bytes, same bytes as unknown4 in Program
       * </pre>
       *
       * <code>required bytes workoutId = 5;</code>
       */
      public boolean hasWorkoutId() {
        return ((bitField0_ & 0x00000010) != 0);
      }
      /**
       * <pre>
       * 16 bytes, same bytes as unknown4 in Program
       * </pre>
       *
       * <code>required bytes workoutId = 5;</code>
       */
      public com.google.protobuf.ByteString getWorkoutId() {
        return workoutId_;
      }
      /**
       * <pre>
       * 16 bytes, same bytes as unknown4 in Program
       * </pre>
       *
       * <code>required bytes workoutId = 5;</code>
       */
      public Builder setWorkoutId(com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000010;
        workoutId_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * 16 bytes, same bytes as unknown4 in Program
       * </pre>
       *
       * <code>required bytes workoutId = 5;</code>
       */
      public Builder clearWorkoutId() {
        bitField0_ = (bitField0_ & ~0x00000010);
        workoutId_ = getDefaultInstance().getWorkoutId();
        onChanged();
        return this;
      }

      private int unknown7_ ;
      /**
       * <pre>
       * value=0
       * </pre>
       *
       * <code>required int32 unknown7 = 7;</code>
       */
      public boolean hasUnknown7() {
        return ((bitField0_ & 0x00000020) != 0);
      }
      /**
       * <pre>
       * value=0
       * </pre>
       *
       * <code>required int32 unknown7 = 7;</code>
       */
      public int getUnknown7() {
        return unknown7_;
      }
      /**
       * <pre>
       * value=0
       * </pre>
       *
       * <code>required int32 unknown7 = 7;</code>
       */
      public Builder setUnknown7(int value) {
        bitField0_ |= 0x00000020;
        unknown7_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * value=0
       * </pre>
       *
       * <code>required int32 unknown7 = 7;</code>
       */
      public Builder clearUnknown7() {
        bitField0_ = (bitField0_ & ~0x00000020);
        unknown7_ = 0;
        onChanged();
        return this;
      }

      private int unknown8_ ;
      /**
       * <pre>
       * value=0
       * </pre>
       *
       * <code>required int32 unknown8 = 8;</code>
       */
      public boolean hasUnknown8() {
        return ((bitField0_ & 0x00000040) != 0);
      }
      /**
       * <pre>
       * value=0
       * </pre>
       *
       * <code>required int32 unknown8 = 8;</code>
       */
      public int getUnknown8() {
        return unknown8_;
      }
      /**
       * <pre>
       * value=0
       * </pre>
       *
       * <code>required int32 unknown8 = 8;</code>
       */
      public Builder setUnknown8(int value) {
        bitField0_ |= 0x00000040;
        unknown8_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * value=0
       * </pre>
       *
       * <code>required int32 unknown8 = 8;</code>
       */
      public Builder clearUnknown8() {
        bitField0_ = (bitField0_ & ~0x00000040);
        unknown8_ = 0;
        onChanged();
        return this;
      }

      private int unknown9_ ;
      /**
       * <pre>
       * definitly used, usage unknown
       * </pre>
       *
       * <code>required int32 unknown9 = 9;</code>
       */
      public boolean hasUnknown9() {
        return ((bitField0_ & 0x00000080) != 0);
      }
      /**
       * <pre>
       * definitly used, usage unknown
       * </pre>
       *
       * <code>required int32 unknown9 = 9;</code>
       */
      public int getUnknown9() {
        return unknown9_;
      }
      /**
       * <pre>
       * definitly used, usage unknown
       * </pre>
       *
       * <code>required int32 unknown9 = 9;</code>
       */
      public Builder setUnknown9(int value) {
        bitField0_ |= 0x00000080;
        unknown9_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * definitly used, usage unknown
       * </pre>
       *
       * <code>required int32 unknown9 = 9;</code>
       */
      public Builder clearUnknown9() {
        bitField0_ = (bitField0_ & ~0x00000080);
        unknown9_ = 0;
        onChanged();
        return this;
      }

      private long activity_ ;
      /**
       * <pre>
       * 0x0802 for cycling, 0x4181 for running   
       * </pre>
       *
       * <code>required fixed64 activity = 10;</code>
       */
      public boolean hasActivity() {
        return ((bitField0_ & 0x00000100) != 0);
      }
      /**
       * <pre>
       * 0x0802 for cycling, 0x4181 for running   
       * </pre>
       *
       * <code>required fixed64 activity = 10;</code>
       */
      public long getActivity() {
        return activity_;
      }
      /**
       * <pre>
       * 0x0802 for cycling, 0x4181 for running   
       * </pre>
       *
       * <code>required fixed64 activity = 10;</code>
       */
      public Builder setActivity(long value) {
        bitField0_ |= 0x00000100;
        activity_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * 0x0802 for cycling, 0x4181 for running   
       * </pre>
       *
       * <code>required fixed64 activity = 10;</code>
       */
      public Builder clearActivity() {
        bitField0_ = (bitField0_ & ~0x00000100);
        activity_ = 0L;
        onChanged();
        return this;
      }

      private int type_ ;
      /**
       * <pre>
       * 1: Fat burn, 2: Endurance, 3: Fitness, 4: Speed, 5: Power, 6: Custom 
       * </pre>
       *
       * <code>required int32 type = 11;</code>
       */
      public boolean hasType() {
        return ((bitField0_ & 0x00000200) != 0);
      }
      /**
       * <pre>
       * 1: Fat burn, 2: Endurance, 3: Fitness, 4: Speed, 5: Power, 6: Custom 
       * </pre>
       *
       * <code>required int32 type = 11;</code>
       */
      public int getType() {
        return type_;
      }
      /**
       * <pre>
       * 1: Fat burn, 2: Endurance, 3: Fitness, 4: Speed, 5: Power, 6: Custom 
       * </pre>
       *
       * <code>required int32 type = 11;</code>
       */
      public Builder setType(int value) {
        bitField0_ |= 0x00000200;
        type_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * 1: Fat burn, 2: Endurance, 3: Fitness, 4: Speed, 5: Power, 6: Custom 
       * </pre>
       *
       * <code>required int32 type = 11;</code>
       */
      public Builder clearType() {
        bitField0_ = (bitField0_ & ~0x00000200);
        type_ = 0;
        onChanged();
        return this;
      }

      private int unknown12_ ;
      /**
       * <pre>
       * value=2
       * </pre>
       *
       * <code>required int32 unknown12 = 12;</code>
       */
      public boolean hasUnknown12() {
        return ((bitField0_ & 0x00000400) != 0);
      }
      /**
       * <pre>
       * value=2
       * </pre>
       *
       * <code>required int32 unknown12 = 12;</code>
       */
      public int getUnknown12() {
        return unknown12_;
      }
      /**
       * <pre>
       * value=2
       * </pre>
       *
       * <code>required int32 unknown12 = 12;</code>
       */
      public Builder setUnknown12(int value) {
        bitField0_ |= 0x00000400;
        unknown12_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * value=2
       * </pre>
       *
       * <code>required int32 unknown12 = 12;</code>
       */
      public Builder clearUnknown12() {
        bitField0_ = (bitField0_ & ~0x00000400);
        unknown12_ = 0;
        onChanged();
        return this;
      }

      private int unknown13_ ;
      /**
       * <pre>
       * value=1
       * </pre>
       *
       * <code>required int32 unknown13 = 13;</code>
       */
      public boolean hasUnknown13() {
        return ((bitField0_ & 0x00000800) != 0);
      }
      /**
       * <pre>
       * value=1
       * </pre>
       *
       * <code>required int32 unknown13 = 13;</code>
       */
      public int getUnknown13() {
        return unknown13_;
      }
      /**
       * <pre>
       * value=1
       * </pre>
       *
       * <code>required int32 unknown13 = 13;</code>
       */
      public Builder setUnknown13(int value) {
        bitField0_ |= 0x00000800;
        unknown13_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * value=1
       * </pre>
       *
       * <code>required int32 unknown13 = 13;</code>
       */
      public Builder clearUnknown13() {
        bitField0_ = (bitField0_ & ~0x00000800);
        unknown13_ = 0;
        onChanged();
        return this;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:tutorial.WorkoutListItem)
    }

    // @@protoc_insertion_point(class_scope:tutorial.WorkoutListItem)
    private static final net.studioblueplanet.tomtomwatch.WorkoutProto.WorkoutListItem DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new net.studioblueplanet.tomtomwatch.WorkoutProto.WorkoutListItem();
    }

    public static net.studioblueplanet.tomtomwatch.WorkoutProto.WorkoutListItem getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    @java.lang.Deprecated public static final com.google.protobuf.Parser<WorkoutListItem>
        PARSER = new com.google.protobuf.AbstractParser<WorkoutListItem>() {
      @java.lang.Override
      public WorkoutListItem parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new WorkoutListItem(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<WorkoutListItem> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<WorkoutListItem> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public net.studioblueplanet.tomtomwatch.WorkoutProto.WorkoutListItem getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface WorkoutStepOrBuilder extends
      // @@protoc_insertion_point(interface_extends:tutorial.WorkoutStep)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>required .tutorial.WorkoutStepSub stepSub = 8;</code>
     */
    boolean hasStepSub();
    /**
     * <code>required .tutorial.WorkoutStepSub stepSub = 8;</code>
     */
    net.studioblueplanet.tomtomwatch.WorkoutProto.WorkoutStepSub getStepSub();
    /**
     * <code>required .tutorial.WorkoutStepSub stepSub = 8;</code>
     */
    net.studioblueplanet.tomtomwatch.WorkoutProto.WorkoutStepSubOrBuilder getStepSubOrBuilder();
  }
  /**
   * <pre>
   *#################################################################################################
   * 5th level: Workout step
   *#################################################################################################
   * </pre>
   *
   * Protobuf type {@code tutorial.WorkoutStep}
   */
  public  static final class WorkoutStep extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:tutorial.WorkoutStep)
      WorkoutStepOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use WorkoutStep.newBuilder() to construct.
    private WorkoutStep(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private WorkoutStep() {
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new WorkoutStep();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private WorkoutStep(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 66: {
              net.studioblueplanet.tomtomwatch.WorkoutProto.WorkoutStepSub.Builder subBuilder = null;
              if (((bitField0_ & 0x00000001) != 0)) {
                subBuilder = stepSub_.toBuilder();
              }
              stepSub_ = input.readMessage(net.studioblueplanet.tomtomwatch.WorkoutProto.WorkoutStepSub.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(stepSub_);
                stepSub_ = subBuilder.buildPartial();
              }
              bitField0_ |= 0x00000001;
              break;
            }
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return net.studioblueplanet.tomtomwatch.WorkoutProto.internal_static_tutorial_WorkoutStep_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return net.studioblueplanet.tomtomwatch.WorkoutProto.internal_static_tutorial_WorkoutStep_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              net.studioblueplanet.tomtomwatch.WorkoutProto.WorkoutStep.class, net.studioblueplanet.tomtomwatch.WorkoutProto.WorkoutStep.Builder.class);
    }

    private int bitField0_;
    public static final int STEPSUB_FIELD_NUMBER = 8;
    private net.studioblueplanet.tomtomwatch.WorkoutProto.WorkoutStepSub stepSub_;
    /**
     * <code>required .tutorial.WorkoutStepSub stepSub = 8;</code>
     */
    public boolean hasStepSub() {
      return ((bitField0_ & 0x00000001) != 0);
    }
    /**
     * <code>required .tutorial.WorkoutStepSub stepSub = 8;</code>
     */
    public net.studioblueplanet.tomtomwatch.WorkoutProto.WorkoutStepSub getStepSub() {
      return stepSub_ == null ? net.studioblueplanet.tomtomwatch.WorkoutProto.WorkoutStepSub.getDefaultInstance() : stepSub_;
    }
    /**
     * <code>required .tutorial.WorkoutStepSub stepSub = 8;</code>
     */
    public net.studioblueplanet.tomtomwatch.WorkoutProto.WorkoutStepSubOrBuilder getStepSubOrBuilder() {
      return stepSub_ == null ? net.studioblueplanet.tomtomwatch.WorkoutProto.WorkoutStepSub.getDefaultInstance() : stepSub_;
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      if (!hasStepSub()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!getStepSub().isInitialized()) {
        memoizedIsInitialized = 0;
        return false;
      }
      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (((bitField0_ & 0x00000001) != 0)) {
        output.writeMessage(8, getStepSub());
      }
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(8, getStepSub());
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof net.studioblueplanet.tomtomwatch.WorkoutProto.WorkoutStep)) {
        return super.equals(obj);
      }
      net.studioblueplanet.tomtomwatch.WorkoutProto.WorkoutStep other = (net.studioblueplanet.tomtomwatch.WorkoutProto.WorkoutStep) obj;

      if (hasStepSub() != other.hasStepSub()) return false;
      if (hasStepSub()) {
        if (!getStepSub()
            .equals(other.getStepSub())) return false;
      }
      if (!unknownFields.equals(other.unknownFields)) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (hasStepSub()) {
        hash = (37 * hash) + STEPSUB_FIELD_NUMBER;
        hash = (53 * hash) + getStepSub().hashCode();
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static net.studioblueplanet.tomtomwatch.WorkoutProto.WorkoutStep parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static net.studioblueplanet.tomtomwatch.WorkoutProto.WorkoutStep parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static net.studioblueplanet.tomtomwatch.WorkoutProto.WorkoutStep parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static net.studioblueplanet.tomtomwatch.WorkoutProto.WorkoutStep parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static net.studioblueplanet.tomtomwatch.WorkoutProto.WorkoutStep parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static net.studioblueplanet.tomtomwatch.WorkoutProto.WorkoutStep parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static net.studioblueplanet.tomtomwatch.WorkoutProto.WorkoutStep parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static net.studioblueplanet.tomtomwatch.WorkoutProto.WorkoutStep parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static net.studioblueplanet.tomtomwatch.WorkoutProto.WorkoutStep parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static net.studioblueplanet.tomtomwatch.WorkoutProto.WorkoutStep parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static net.studioblueplanet.tomtomwatch.WorkoutProto.WorkoutStep parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static net.studioblueplanet.tomtomwatch.WorkoutProto.WorkoutStep parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(net.studioblueplanet.tomtomwatch.WorkoutProto.WorkoutStep prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     *#################################################################################################
     * 5th level: Workout step
     *#################################################################################################
     * </pre>
     *
     * Protobuf type {@code tutorial.WorkoutStep}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:tutorial.WorkoutStep)
        net.studioblueplanet.tomtomwatch.WorkoutProto.WorkoutStepOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return net.studioblueplanet.tomtomwatch.WorkoutProto.internal_static_tutorial_WorkoutStep_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return net.studioblueplanet.tomtomwatch.WorkoutProto.internal_static_tutorial_WorkoutStep_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                net.studioblueplanet.tomtomwatch.WorkoutProto.WorkoutStep.class, net.studioblueplanet.tomtomwatch.WorkoutProto.WorkoutStep.Builder.class);
      }

      // Construct using net.studioblueplanet.tomtomwatch.WorkoutProto.WorkoutStep.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
          getStepSubFieldBuilder();
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        if (stepSubBuilder_ == null) {
          stepSub_ = null;
        } else {
          stepSubBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000001);
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return net.studioblueplanet.tomtomwatch.WorkoutProto.internal_static_tutorial_WorkoutStep_descriptor;
      }

      @java.lang.Override
      public net.studioblueplanet.tomtomwatch.WorkoutProto.WorkoutStep getDefaultInstanceForType() {
        return net.studioblueplanet.tomtomwatch.WorkoutProto.WorkoutStep.getDefaultInstance();
      }

      @java.lang.Override
      public net.studioblueplanet.tomtomwatch.WorkoutProto.WorkoutStep build() {
        net.studioblueplanet.tomtomwatch.WorkoutProto.WorkoutStep result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public net.studioblueplanet.tomtomwatch.WorkoutProto.WorkoutStep buildPartial() {
        net.studioblueplanet.tomtomwatch.WorkoutProto.WorkoutStep result = new net.studioblueplanet.tomtomwatch.WorkoutProto.WorkoutStep(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) != 0)) {
          if (stepSubBuilder_ == null) {
            result.stepSub_ = stepSub_;
          } else {
            result.stepSub_ = stepSubBuilder_.build();
          }
          to_bitField0_ |= 0x00000001;
        }
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof net.studioblueplanet.tomtomwatch.WorkoutProto.WorkoutStep) {
          return mergeFrom((net.studioblueplanet.tomtomwatch.WorkoutProto.WorkoutStep)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(net.studioblueplanet.tomtomwatch.WorkoutProto.WorkoutStep other) {
        if (other == net.studioblueplanet.tomtomwatch.WorkoutProto.WorkoutStep.getDefaultInstance()) return this;
        if (other.hasStepSub()) {
          mergeStepSub(other.getStepSub());
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        if (!hasStepSub()) {
          return false;
        }
        if (!getStepSub().isInitialized()) {
          return false;
        }
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        net.studioblueplanet.tomtomwatch.WorkoutProto.WorkoutStep parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (net.studioblueplanet.tomtomwatch.WorkoutProto.WorkoutStep) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private net.studioblueplanet.tomtomwatch.WorkoutProto.WorkoutStepSub stepSub_;
      private com.google.protobuf.SingleFieldBuilderV3<
          net.studioblueplanet.tomtomwatch.WorkoutProto.WorkoutStepSub, net.studioblueplanet.tomtomwatch.WorkoutProto.WorkoutStepSub.Builder, net.studioblueplanet.tomtomwatch.WorkoutProto.WorkoutStepSubOrBuilder> stepSubBuilder_;
      /**
       * <code>required .tutorial.WorkoutStepSub stepSub = 8;</code>
       */
      public boolean hasStepSub() {
        return ((bitField0_ & 0x00000001) != 0);
      }
      /**
       * <code>required .tutorial.WorkoutStepSub stepSub = 8;</code>
       */
      public net.studioblueplanet.tomtomwatch.WorkoutProto.WorkoutStepSub getStepSub() {
        if (stepSubBuilder_ == null) {
          return stepSub_ == null ? net.studioblueplanet.tomtomwatch.WorkoutProto.WorkoutStepSub.getDefaultInstance() : stepSub_;
        } else {
          return stepSubBuilder_.getMessage();
        }
      }
      /**
       * <code>required .tutorial.WorkoutStepSub stepSub = 8;</code>
       */
      public Builder setStepSub(net.studioblueplanet.tomtomwatch.WorkoutProto.WorkoutStepSub value) {
        if (stepSubBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          stepSub_ = value;
          onChanged();
        } else {
          stepSubBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000001;
        return this;
      }
      /**
       * <code>required .tutorial.WorkoutStepSub stepSub = 8;</code>
       */
      public Builder setStepSub(
          net.studioblueplanet.tomtomwatch.WorkoutProto.WorkoutStepSub.Builder builderForValue) {
        if (stepSubBuilder_ == null) {
          stepSub_ = builderForValue.build();
          onChanged();
        } else {
          stepSubBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000001;
        return this;
      }
      /**
       * <code>required .tutorial.WorkoutStepSub stepSub = 8;</code>
       */
      public Builder mergeStepSub(net.studioblueplanet.tomtomwatch.WorkoutProto.WorkoutStepSub value) {
        if (stepSubBuilder_ == null) {
          if (((bitField0_ & 0x00000001) != 0) &&
              stepSub_ != null &&
              stepSub_ != net.studioblueplanet.tomtomwatch.WorkoutProto.WorkoutStepSub.getDefaultInstance()) {
            stepSub_ =
              net.studioblueplanet.tomtomwatch.WorkoutProto.WorkoutStepSub.newBuilder(stepSub_).mergeFrom(value).buildPartial();
          } else {
            stepSub_ = value;
          }
          onChanged();
        } else {
          stepSubBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000001;
        return this;
      }
      /**
       * <code>required .tutorial.WorkoutStepSub stepSub = 8;</code>
       */
      public Builder clearStepSub() {
        if (stepSubBuilder_ == null) {
          stepSub_ = null;
          onChanged();
        } else {
          stepSubBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000001);
        return this;
      }
      /**
       * <code>required .tutorial.WorkoutStepSub stepSub = 8;</code>
       */
      public net.studioblueplanet.tomtomwatch.WorkoutProto.WorkoutStepSub.Builder getStepSubBuilder() {
        bitField0_ |= 0x00000001;
        onChanged();
        return getStepSubFieldBuilder().getBuilder();
      }
      /**
       * <code>required .tutorial.WorkoutStepSub stepSub = 8;</code>
       */
      public net.studioblueplanet.tomtomwatch.WorkoutProto.WorkoutStepSubOrBuilder getStepSubOrBuilder() {
        if (stepSubBuilder_ != null) {
          return stepSubBuilder_.getMessageOrBuilder();
        } else {
          return stepSub_ == null ?
              net.studioblueplanet.tomtomwatch.WorkoutProto.WorkoutStepSub.getDefaultInstance() : stepSub_;
        }
      }
      /**
       * <code>required .tutorial.WorkoutStepSub stepSub = 8;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          net.studioblueplanet.tomtomwatch.WorkoutProto.WorkoutStepSub, net.studioblueplanet.tomtomwatch.WorkoutProto.WorkoutStepSub.Builder, net.studioblueplanet.tomtomwatch.WorkoutProto.WorkoutStepSubOrBuilder> 
          getStepSubFieldBuilder() {
        if (stepSubBuilder_ == null) {
          stepSubBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              net.studioblueplanet.tomtomwatch.WorkoutProto.WorkoutStepSub, net.studioblueplanet.tomtomwatch.WorkoutProto.WorkoutStepSub.Builder, net.studioblueplanet.tomtomwatch.WorkoutProto.WorkoutStepSubOrBuilder>(
                  getStepSub(),
                  getParentForChildren(),
                  isClean());
          stepSub_ = null;
        }
        return stepSubBuilder_;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:tutorial.WorkoutStep)
    }

    // @@protoc_insertion_point(class_scope:tutorial.WorkoutStep)
    private static final net.studioblueplanet.tomtomwatch.WorkoutProto.WorkoutStep DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new net.studioblueplanet.tomtomwatch.WorkoutProto.WorkoutStep();
    }

    public static net.studioblueplanet.tomtomwatch.WorkoutProto.WorkoutStep getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    @java.lang.Deprecated public static final com.google.protobuf.Parser<WorkoutStep>
        PARSER = new com.google.protobuf.AbstractParser<WorkoutStep>() {
      @java.lang.Override
      public WorkoutStep parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new WorkoutStep(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<WorkoutStep> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<WorkoutStep> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public net.studioblueplanet.tomtomwatch.WorkoutProto.WorkoutStep getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface WorkoutStepSubOrBuilder extends
      // @@protoc_insertion_point(interface_extends:tutorial.WorkoutStepSub)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     * refers to a description ID (e.g. 'warm up', 'work')
     * </pre>
     *
     * <code>required int32 stepName = 1;</code>
     */
    boolean hasStepName();
    /**
     * <pre>
     * refers to a description ID (e.g. 'warm up', 'work')
     * </pre>
     *
     * <code>required int32 stepName = 1;</code>
     */
    int getStepName();

    /**
     * <pre>
     * refers to a description ID (e.g. 'Get into the Fat Burn HR zone')
     * </pre>
     *
     * <code>optional int32 stepDescription = 2;</code>
     */
    boolean hasStepDescription();
    /**
     * <pre>
     * refers to a description ID (e.g. 'Get into the Fat Burn HR zone')
     * </pre>
     *
     * <code>optional int32 stepDescription = 2;</code>
     */
    int getStepDescription();

    /**
     * <pre>
     * 0, 1, 2, 3,...
     * </pre>
     *
     * <code>required int32 stepNumber = 4;</code>
     */
    boolean hasStepNumber();
    /**
     * <pre>
     * 0, 1, 2, 3,...
     * </pre>
     *
     * <code>required int32 stepNumber = 4;</code>
     */
    int getStepNumber();

    /**
     * <pre>
     * 1: warm up, 2: work, 3: rest, 4: ?, 5: cool down
     * </pre>
     *
     * <code>required int32 stepType = 6;</code>
     */
    boolean hasStepType();
    /**
     * <pre>
     * 1: warm up, 2: work, 3: rest, 4: ?, 5: cool down
     * </pre>
     *
     * <code>required int32 stepType = 6;</code>
     */
    int getStepType();

    /**
     * <pre>
     * Duration or distance (called Length by TomTom)
     * </pre>
     *
     * <code>optional .tutorial.Extent stepExtent = 7;</code>
     */
    boolean hasStepExtent();
    /**
     * <pre>
     * Duration or distance (called Length by TomTom)
     * </pre>
     *
     * <code>optional .tutorial.Extent stepExtent = 7;</code>
     */
    net.studioblueplanet.tomtomwatch.WorkoutProto.Extent getStepExtent();
    /**
     * <pre>
     * Duration or distance (called Length by TomTom)
     * </pre>
     *
     * <code>optional .tutorial.Extent stepExtent = 7;</code>
     */
    net.studioblueplanet.tomtomwatch.WorkoutProto.ExtentOrBuilder getStepExtentOrBuilder();

    /**
     * <pre>
     * Intensity goal (HR zone, pace, speed) of the step; optional
     * </pre>
     *
     * <code>optional .tutorial.Intensity intensity = 8;</code>
     */
    boolean hasIntensity();
    /**
     * <pre>
     * Intensity goal (HR zone, pace, speed) of the step; optional
     * </pre>
     *
     * <code>optional .tutorial.Intensity intensity = 8;</code>
     */
    net.studioblueplanet.tomtomwatch.WorkoutProto.Intensity getIntensity();
    /**
     * <pre>
     * Intensity goal (HR zone, pace, speed) of the step; optional
     * </pre>
     *
     * <code>optional .tutorial.Intensity intensity = 8;</code>
     */
    net.studioblueplanet.tomtomwatch.WorkoutProto.IntensityOrBuilder getIntensityOrBuilder();
  }
  /**
   * <pre>
   *#################################################################################################
   * 6th level: Workout step sub
   *#################################################################################################
   * </pre>
   *
   * Protobuf type {@code tutorial.WorkoutStepSub}
   */
  public  static final class WorkoutStepSub extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:tutorial.WorkoutStepSub)
      WorkoutStepSubOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use WorkoutStepSub.newBuilder() to construct.
    private WorkoutStepSub(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private WorkoutStepSub() {
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new WorkoutStepSub();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private WorkoutStepSub(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 8: {
              bitField0_ |= 0x00000001;
              stepName_ = input.readInt32();
              break;
            }
            case 16: {
              bitField0_ |= 0x00000002;
              stepDescription_ = input.readInt32();
              break;
            }
            case 32: {
              bitField0_ |= 0x00000004;
              stepNumber_ = input.readInt32();
              break;
            }
            case 48: {
              bitField0_ |= 0x00000008;
              stepType_ = input.readInt32();
              break;
            }
            case 58: {
              net.studioblueplanet.tomtomwatch.WorkoutProto.Extent.Builder subBuilder = null;
              if (((bitField0_ & 0x00000010) != 0)) {
                subBuilder = stepExtent_.toBuilder();
              }
              stepExtent_ = input.readMessage(net.studioblueplanet.tomtomwatch.WorkoutProto.Extent.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(stepExtent_);
                stepExtent_ = subBuilder.buildPartial();
              }
              bitField0_ |= 0x00000010;
              break;
            }
            case 66: {
              net.studioblueplanet.tomtomwatch.WorkoutProto.Intensity.Builder subBuilder = null;
              if (((bitField0_ & 0x00000020) != 0)) {
                subBuilder = intensity_.toBuilder();
              }
              intensity_ = input.readMessage(net.studioblueplanet.tomtomwatch.WorkoutProto.Intensity.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(intensity_);
                intensity_ = subBuilder.buildPartial();
              }
              bitField0_ |= 0x00000020;
              break;
            }
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return net.studioblueplanet.tomtomwatch.WorkoutProto.internal_static_tutorial_WorkoutStepSub_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return net.studioblueplanet.tomtomwatch.WorkoutProto.internal_static_tutorial_WorkoutStepSub_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              net.studioblueplanet.tomtomwatch.WorkoutProto.WorkoutStepSub.class, net.studioblueplanet.tomtomwatch.WorkoutProto.WorkoutStepSub.Builder.class);
    }

    private int bitField0_;
    public static final int STEPNAME_FIELD_NUMBER = 1;
    private int stepName_;
    /**
     * <pre>
     * refers to a description ID (e.g. 'warm up', 'work')
     * </pre>
     *
     * <code>required int32 stepName = 1;</code>
     */
    public boolean hasStepName() {
      return ((bitField0_ & 0x00000001) != 0);
    }
    /**
     * <pre>
     * refers to a description ID (e.g. 'warm up', 'work')
     * </pre>
     *
     * <code>required int32 stepName = 1;</code>
     */
    public int getStepName() {
      return stepName_;
    }

    public static final int STEPDESCRIPTION_FIELD_NUMBER = 2;
    private int stepDescription_;
    /**
     * <pre>
     * refers to a description ID (e.g. 'Get into the Fat Burn HR zone')
     * </pre>
     *
     * <code>optional int32 stepDescription = 2;</code>
     */
    public boolean hasStepDescription() {
      return ((bitField0_ & 0x00000002) != 0);
    }
    /**
     * <pre>
     * refers to a description ID (e.g. 'Get into the Fat Burn HR zone')
     * </pre>
     *
     * <code>optional int32 stepDescription = 2;</code>
     */
    public int getStepDescription() {
      return stepDescription_;
    }

    public static final int STEPNUMBER_FIELD_NUMBER = 4;
    private int stepNumber_;
    /**
     * <pre>
     * 0, 1, 2, 3,...
     * </pre>
     *
     * <code>required int32 stepNumber = 4;</code>
     */
    public boolean hasStepNumber() {
      return ((bitField0_ & 0x00000004) != 0);
    }
    /**
     * <pre>
     * 0, 1, 2, 3,...
     * </pre>
     *
     * <code>required int32 stepNumber = 4;</code>
     */
    public int getStepNumber() {
      return stepNumber_;
    }

    public static final int STEPTYPE_FIELD_NUMBER = 6;
    private int stepType_;
    /**
     * <pre>
     * 1: warm up, 2: work, 3: rest, 4: ?, 5: cool down
     * </pre>
     *
     * <code>required int32 stepType = 6;</code>
     */
    public boolean hasStepType() {
      return ((bitField0_ & 0x00000008) != 0);
    }
    /**
     * <pre>
     * 1: warm up, 2: work, 3: rest, 4: ?, 5: cool down
     * </pre>
     *
     * <code>required int32 stepType = 6;</code>
     */
    public int getStepType() {
      return stepType_;
    }

    public static final int STEPEXTENT_FIELD_NUMBER = 7;
    private net.studioblueplanet.tomtomwatch.WorkoutProto.Extent stepExtent_;
    /**
     * <pre>
     * Duration or distance (called Length by TomTom)
     * </pre>
     *
     * <code>optional .tutorial.Extent stepExtent = 7;</code>
     */
    public boolean hasStepExtent() {
      return ((bitField0_ & 0x00000010) != 0);
    }
    /**
     * <pre>
     * Duration or distance (called Length by TomTom)
     * </pre>
     *
     * <code>optional .tutorial.Extent stepExtent = 7;</code>
     */
    public net.studioblueplanet.tomtomwatch.WorkoutProto.Extent getStepExtent() {
      return stepExtent_ == null ? net.studioblueplanet.tomtomwatch.WorkoutProto.Extent.getDefaultInstance() : stepExtent_;
    }
    /**
     * <pre>
     * Duration or distance (called Length by TomTom)
     * </pre>
     *
     * <code>optional .tutorial.Extent stepExtent = 7;</code>
     */
    public net.studioblueplanet.tomtomwatch.WorkoutProto.ExtentOrBuilder getStepExtentOrBuilder() {
      return stepExtent_ == null ? net.studioblueplanet.tomtomwatch.WorkoutProto.Extent.getDefaultInstance() : stepExtent_;
    }

    public static final int INTENSITY_FIELD_NUMBER = 8;
    private net.studioblueplanet.tomtomwatch.WorkoutProto.Intensity intensity_;
    /**
     * <pre>
     * Intensity goal (HR zone, pace, speed) of the step; optional
     * </pre>
     *
     * <code>optional .tutorial.Intensity intensity = 8;</code>
     */
    public boolean hasIntensity() {
      return ((bitField0_ & 0x00000020) != 0);
    }
    /**
     * <pre>
     * Intensity goal (HR zone, pace, speed) of the step; optional
     * </pre>
     *
     * <code>optional .tutorial.Intensity intensity = 8;</code>
     */
    public net.studioblueplanet.tomtomwatch.WorkoutProto.Intensity getIntensity() {
      return intensity_ == null ? net.studioblueplanet.tomtomwatch.WorkoutProto.Intensity.getDefaultInstance() : intensity_;
    }
    /**
     * <pre>
     * Intensity goal (HR zone, pace, speed) of the step; optional
     * </pre>
     *
     * <code>optional .tutorial.Intensity intensity = 8;</code>
     */
    public net.studioblueplanet.tomtomwatch.WorkoutProto.IntensityOrBuilder getIntensityOrBuilder() {
      return intensity_ == null ? net.studioblueplanet.tomtomwatch.WorkoutProto.Intensity.getDefaultInstance() : intensity_;
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      if (!hasStepName()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasStepNumber()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasStepType()) {
        memoizedIsInitialized = 0;
        return false;
      }
      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (((bitField0_ & 0x00000001) != 0)) {
        output.writeInt32(1, stepName_);
      }
      if (((bitField0_ & 0x00000002) != 0)) {
        output.writeInt32(2, stepDescription_);
      }
      if (((bitField0_ & 0x00000004) != 0)) {
        output.writeInt32(4, stepNumber_);
      }
      if (((bitField0_ & 0x00000008) != 0)) {
        output.writeInt32(6, stepType_);
      }
      if (((bitField0_ & 0x00000010) != 0)) {
        output.writeMessage(7, getStepExtent());
      }
      if (((bitField0_ & 0x00000020) != 0)) {
        output.writeMessage(8, getIntensity());
      }
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(1, stepName_);
      }
      if (((bitField0_ & 0x00000002) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(2, stepDescription_);
      }
      if (((bitField0_ & 0x00000004) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(4, stepNumber_);
      }
      if (((bitField0_ & 0x00000008) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(6, stepType_);
      }
      if (((bitField0_ & 0x00000010) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(7, getStepExtent());
      }
      if (((bitField0_ & 0x00000020) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(8, getIntensity());
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof net.studioblueplanet.tomtomwatch.WorkoutProto.WorkoutStepSub)) {
        return super.equals(obj);
      }
      net.studioblueplanet.tomtomwatch.WorkoutProto.WorkoutStepSub other = (net.studioblueplanet.tomtomwatch.WorkoutProto.WorkoutStepSub) obj;

      if (hasStepName() != other.hasStepName()) return false;
      if (hasStepName()) {
        if (getStepName()
            != other.getStepName()) return false;
      }
      if (hasStepDescription() != other.hasStepDescription()) return false;
      if (hasStepDescription()) {
        if (getStepDescription()
            != other.getStepDescription()) return false;
      }
      if (hasStepNumber() != other.hasStepNumber()) return false;
      if (hasStepNumber()) {
        if (getStepNumber()
            != other.getStepNumber()) return false;
      }
      if (hasStepType() != other.hasStepType()) return false;
      if (hasStepType()) {
        if (getStepType()
            != other.getStepType()) return false;
      }
      if (hasStepExtent() != other.hasStepExtent()) return false;
      if (hasStepExtent()) {
        if (!getStepExtent()
            .equals(other.getStepExtent())) return false;
      }
      if (hasIntensity() != other.hasIntensity()) return false;
      if (hasIntensity()) {
        if (!getIntensity()
            .equals(other.getIntensity())) return false;
      }
      if (!unknownFields.equals(other.unknownFields)) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (hasStepName()) {
        hash = (37 * hash) + STEPNAME_FIELD_NUMBER;
        hash = (53 * hash) + getStepName();
      }
      if (hasStepDescription()) {
        hash = (37 * hash) + STEPDESCRIPTION_FIELD_NUMBER;
        hash = (53 * hash) + getStepDescription();
      }
      if (hasStepNumber()) {
        hash = (37 * hash) + STEPNUMBER_FIELD_NUMBER;
        hash = (53 * hash) + getStepNumber();
      }
      if (hasStepType()) {
        hash = (37 * hash) + STEPTYPE_FIELD_NUMBER;
        hash = (53 * hash) + getStepType();
      }
      if (hasStepExtent()) {
        hash = (37 * hash) + STEPEXTENT_FIELD_NUMBER;
        hash = (53 * hash) + getStepExtent().hashCode();
      }
      if (hasIntensity()) {
        hash = (37 * hash) + INTENSITY_FIELD_NUMBER;
        hash = (53 * hash) + getIntensity().hashCode();
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static net.studioblueplanet.tomtomwatch.WorkoutProto.WorkoutStepSub parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static net.studioblueplanet.tomtomwatch.WorkoutProto.WorkoutStepSub parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static net.studioblueplanet.tomtomwatch.WorkoutProto.WorkoutStepSub parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static net.studioblueplanet.tomtomwatch.WorkoutProto.WorkoutStepSub parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static net.studioblueplanet.tomtomwatch.WorkoutProto.WorkoutStepSub parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static net.studioblueplanet.tomtomwatch.WorkoutProto.WorkoutStepSub parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static net.studioblueplanet.tomtomwatch.WorkoutProto.WorkoutStepSub parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static net.studioblueplanet.tomtomwatch.WorkoutProto.WorkoutStepSub parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static net.studioblueplanet.tomtomwatch.WorkoutProto.WorkoutStepSub parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static net.studioblueplanet.tomtomwatch.WorkoutProto.WorkoutStepSub parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static net.studioblueplanet.tomtomwatch.WorkoutProto.WorkoutStepSub parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static net.studioblueplanet.tomtomwatch.WorkoutProto.WorkoutStepSub parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(net.studioblueplanet.tomtomwatch.WorkoutProto.WorkoutStepSub prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     *#################################################################################################
     * 6th level: Workout step sub
     *#################################################################################################
     * </pre>
     *
     * Protobuf type {@code tutorial.WorkoutStepSub}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:tutorial.WorkoutStepSub)
        net.studioblueplanet.tomtomwatch.WorkoutProto.WorkoutStepSubOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return net.studioblueplanet.tomtomwatch.WorkoutProto.internal_static_tutorial_WorkoutStepSub_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return net.studioblueplanet.tomtomwatch.WorkoutProto.internal_static_tutorial_WorkoutStepSub_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                net.studioblueplanet.tomtomwatch.WorkoutProto.WorkoutStepSub.class, net.studioblueplanet.tomtomwatch.WorkoutProto.WorkoutStepSub.Builder.class);
      }

      // Construct using net.studioblueplanet.tomtomwatch.WorkoutProto.WorkoutStepSub.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
          getStepExtentFieldBuilder();
          getIntensityFieldBuilder();
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        stepName_ = 0;
        bitField0_ = (bitField0_ & ~0x00000001);
        stepDescription_ = 0;
        bitField0_ = (bitField0_ & ~0x00000002);
        stepNumber_ = 0;
        bitField0_ = (bitField0_ & ~0x00000004);
        stepType_ = 0;
        bitField0_ = (bitField0_ & ~0x00000008);
        if (stepExtentBuilder_ == null) {
          stepExtent_ = null;
        } else {
          stepExtentBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000010);
        if (intensityBuilder_ == null) {
          intensity_ = null;
        } else {
          intensityBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000020);
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return net.studioblueplanet.tomtomwatch.WorkoutProto.internal_static_tutorial_WorkoutStepSub_descriptor;
      }

      @java.lang.Override
      public net.studioblueplanet.tomtomwatch.WorkoutProto.WorkoutStepSub getDefaultInstanceForType() {
        return net.studioblueplanet.tomtomwatch.WorkoutProto.WorkoutStepSub.getDefaultInstance();
      }

      @java.lang.Override
      public net.studioblueplanet.tomtomwatch.WorkoutProto.WorkoutStepSub build() {
        net.studioblueplanet.tomtomwatch.WorkoutProto.WorkoutStepSub result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public net.studioblueplanet.tomtomwatch.WorkoutProto.WorkoutStepSub buildPartial() {
        net.studioblueplanet.tomtomwatch.WorkoutProto.WorkoutStepSub result = new net.studioblueplanet.tomtomwatch.WorkoutProto.WorkoutStepSub(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) != 0)) {
          result.stepName_ = stepName_;
          to_bitField0_ |= 0x00000001;
        }
        if (((from_bitField0_ & 0x00000002) != 0)) {
          result.stepDescription_ = stepDescription_;
          to_bitField0_ |= 0x00000002;
        }
        if (((from_bitField0_ & 0x00000004) != 0)) {
          result.stepNumber_ = stepNumber_;
          to_bitField0_ |= 0x00000004;
        }
        if (((from_bitField0_ & 0x00000008) != 0)) {
          result.stepType_ = stepType_;
          to_bitField0_ |= 0x00000008;
        }
        if (((from_bitField0_ & 0x00000010) != 0)) {
          if (stepExtentBuilder_ == null) {
            result.stepExtent_ = stepExtent_;
          } else {
            result.stepExtent_ = stepExtentBuilder_.build();
          }
          to_bitField0_ |= 0x00000010;
        }
        if (((from_bitField0_ & 0x00000020) != 0)) {
          if (intensityBuilder_ == null) {
            result.intensity_ = intensity_;
          } else {
            result.intensity_ = intensityBuilder_.build();
          }
          to_bitField0_ |= 0x00000020;
        }
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof net.studioblueplanet.tomtomwatch.WorkoutProto.WorkoutStepSub) {
          return mergeFrom((net.studioblueplanet.tomtomwatch.WorkoutProto.WorkoutStepSub)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(net.studioblueplanet.tomtomwatch.WorkoutProto.WorkoutStepSub other) {
        if (other == net.studioblueplanet.tomtomwatch.WorkoutProto.WorkoutStepSub.getDefaultInstance()) return this;
        if (other.hasStepName()) {
          setStepName(other.getStepName());
        }
        if (other.hasStepDescription()) {
          setStepDescription(other.getStepDescription());
        }
        if (other.hasStepNumber()) {
          setStepNumber(other.getStepNumber());
        }
        if (other.hasStepType()) {
          setStepType(other.getStepType());
        }
        if (other.hasStepExtent()) {
          mergeStepExtent(other.getStepExtent());
        }
        if (other.hasIntensity()) {
          mergeIntensity(other.getIntensity());
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        if (!hasStepName()) {
          return false;
        }
        if (!hasStepNumber()) {
          return false;
        }
        if (!hasStepType()) {
          return false;
        }
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        net.studioblueplanet.tomtomwatch.WorkoutProto.WorkoutStepSub parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (net.studioblueplanet.tomtomwatch.WorkoutProto.WorkoutStepSub) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private int stepName_ ;
      /**
       * <pre>
       * refers to a description ID (e.g. 'warm up', 'work')
       * </pre>
       *
       * <code>required int32 stepName = 1;</code>
       */
      public boolean hasStepName() {
        return ((bitField0_ & 0x00000001) != 0);
      }
      /**
       * <pre>
       * refers to a description ID (e.g. 'warm up', 'work')
       * </pre>
       *
       * <code>required int32 stepName = 1;</code>
       */
      public int getStepName() {
        return stepName_;
      }
      /**
       * <pre>
       * refers to a description ID (e.g. 'warm up', 'work')
       * </pre>
       *
       * <code>required int32 stepName = 1;</code>
       */
      public Builder setStepName(int value) {
        bitField0_ |= 0x00000001;
        stepName_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * refers to a description ID (e.g. 'warm up', 'work')
       * </pre>
       *
       * <code>required int32 stepName = 1;</code>
       */
      public Builder clearStepName() {
        bitField0_ = (bitField0_ & ~0x00000001);
        stepName_ = 0;
        onChanged();
        return this;
      }

      private int stepDescription_ ;
      /**
       * <pre>
       * refers to a description ID (e.g. 'Get into the Fat Burn HR zone')
       * </pre>
       *
       * <code>optional int32 stepDescription = 2;</code>
       */
      public boolean hasStepDescription() {
        return ((bitField0_ & 0x00000002) != 0);
      }
      /**
       * <pre>
       * refers to a description ID (e.g. 'Get into the Fat Burn HR zone')
       * </pre>
       *
       * <code>optional int32 stepDescription = 2;</code>
       */
      public int getStepDescription() {
        return stepDescription_;
      }
      /**
       * <pre>
       * refers to a description ID (e.g. 'Get into the Fat Burn HR zone')
       * </pre>
       *
       * <code>optional int32 stepDescription = 2;</code>
       */
      public Builder setStepDescription(int value) {
        bitField0_ |= 0x00000002;
        stepDescription_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * refers to a description ID (e.g. 'Get into the Fat Burn HR zone')
       * </pre>
       *
       * <code>optional int32 stepDescription = 2;</code>
       */
      public Builder clearStepDescription() {
        bitField0_ = (bitField0_ & ~0x00000002);
        stepDescription_ = 0;
        onChanged();
        return this;
      }

      private int stepNumber_ ;
      /**
       * <pre>
       * 0, 1, 2, 3,...
       * </pre>
       *
       * <code>required int32 stepNumber = 4;</code>
       */
      public boolean hasStepNumber() {
        return ((bitField0_ & 0x00000004) != 0);
      }
      /**
       * <pre>
       * 0, 1, 2, 3,...
       * </pre>
       *
       * <code>required int32 stepNumber = 4;</code>
       */
      public int getStepNumber() {
        return stepNumber_;
      }
      /**
       * <pre>
       * 0, 1, 2, 3,...
       * </pre>
       *
       * <code>required int32 stepNumber = 4;</code>
       */
      public Builder setStepNumber(int value) {
        bitField0_ |= 0x00000004;
        stepNumber_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * 0, 1, 2, 3,...
       * </pre>
       *
       * <code>required int32 stepNumber = 4;</code>
       */
      public Builder clearStepNumber() {
        bitField0_ = (bitField0_ & ~0x00000004);
        stepNumber_ = 0;
        onChanged();
        return this;
      }

      private int stepType_ ;
      /**
       * <pre>
       * 1: warm up, 2: work, 3: rest, 4: ?, 5: cool down
       * </pre>
       *
       * <code>required int32 stepType = 6;</code>
       */
      public boolean hasStepType() {
        return ((bitField0_ & 0x00000008) != 0);
      }
      /**
       * <pre>
       * 1: warm up, 2: work, 3: rest, 4: ?, 5: cool down
       * </pre>
       *
       * <code>required int32 stepType = 6;</code>
       */
      public int getStepType() {
        return stepType_;
      }
      /**
       * <pre>
       * 1: warm up, 2: work, 3: rest, 4: ?, 5: cool down
       * </pre>
       *
       * <code>required int32 stepType = 6;</code>
       */
      public Builder setStepType(int value) {
        bitField0_ |= 0x00000008;
        stepType_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * 1: warm up, 2: work, 3: rest, 4: ?, 5: cool down
       * </pre>
       *
       * <code>required int32 stepType = 6;</code>
       */
      public Builder clearStepType() {
        bitField0_ = (bitField0_ & ~0x00000008);
        stepType_ = 0;
        onChanged();
        return this;
      }

      private net.studioblueplanet.tomtomwatch.WorkoutProto.Extent stepExtent_;
      private com.google.protobuf.SingleFieldBuilderV3<
          net.studioblueplanet.tomtomwatch.WorkoutProto.Extent, net.studioblueplanet.tomtomwatch.WorkoutProto.Extent.Builder, net.studioblueplanet.tomtomwatch.WorkoutProto.ExtentOrBuilder> stepExtentBuilder_;
      /**
       * <pre>
       * Duration or distance (called Length by TomTom)
       * </pre>
       *
       * <code>optional .tutorial.Extent stepExtent = 7;</code>
       */
      public boolean hasStepExtent() {
        return ((bitField0_ & 0x00000010) != 0);
      }
      /**
       * <pre>
       * Duration or distance (called Length by TomTom)
       * </pre>
       *
       * <code>optional .tutorial.Extent stepExtent = 7;</code>
       */
      public net.studioblueplanet.tomtomwatch.WorkoutProto.Extent getStepExtent() {
        if (stepExtentBuilder_ == null) {
          return stepExtent_ == null ? net.studioblueplanet.tomtomwatch.WorkoutProto.Extent.getDefaultInstance() : stepExtent_;
        } else {
          return stepExtentBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       * Duration or distance (called Length by TomTom)
       * </pre>
       *
       * <code>optional .tutorial.Extent stepExtent = 7;</code>
       */
      public Builder setStepExtent(net.studioblueplanet.tomtomwatch.WorkoutProto.Extent value) {
        if (stepExtentBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          stepExtent_ = value;
          onChanged();
        } else {
          stepExtentBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000010;
        return this;
      }
      /**
       * <pre>
       * Duration or distance (called Length by TomTom)
       * </pre>
       *
       * <code>optional .tutorial.Extent stepExtent = 7;</code>
       */
      public Builder setStepExtent(
          net.studioblueplanet.tomtomwatch.WorkoutProto.Extent.Builder builderForValue) {
        if (stepExtentBuilder_ == null) {
          stepExtent_ = builderForValue.build();
          onChanged();
        } else {
          stepExtentBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000010;
        return this;
      }
      /**
       * <pre>
       * Duration or distance (called Length by TomTom)
       * </pre>
       *
       * <code>optional .tutorial.Extent stepExtent = 7;</code>
       */
      public Builder mergeStepExtent(net.studioblueplanet.tomtomwatch.WorkoutProto.Extent value) {
        if (stepExtentBuilder_ == null) {
          if (((bitField0_ & 0x00000010) != 0) &&
              stepExtent_ != null &&
              stepExtent_ != net.studioblueplanet.tomtomwatch.WorkoutProto.Extent.getDefaultInstance()) {
            stepExtent_ =
              net.studioblueplanet.tomtomwatch.WorkoutProto.Extent.newBuilder(stepExtent_).mergeFrom(value).buildPartial();
          } else {
            stepExtent_ = value;
          }
          onChanged();
        } else {
          stepExtentBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000010;
        return this;
      }
      /**
       * <pre>
       * Duration or distance (called Length by TomTom)
       * </pre>
       *
       * <code>optional .tutorial.Extent stepExtent = 7;</code>
       */
      public Builder clearStepExtent() {
        if (stepExtentBuilder_ == null) {
          stepExtent_ = null;
          onChanged();
        } else {
          stepExtentBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000010);
        return this;
      }
      /**
       * <pre>
       * Duration or distance (called Length by TomTom)
       * </pre>
       *
       * <code>optional .tutorial.Extent stepExtent = 7;</code>
       */
      public net.studioblueplanet.tomtomwatch.WorkoutProto.Extent.Builder getStepExtentBuilder() {
        bitField0_ |= 0x00000010;
        onChanged();
        return getStepExtentFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       * Duration or distance (called Length by TomTom)
       * </pre>
       *
       * <code>optional .tutorial.Extent stepExtent = 7;</code>
       */
      public net.studioblueplanet.tomtomwatch.WorkoutProto.ExtentOrBuilder getStepExtentOrBuilder() {
        if (stepExtentBuilder_ != null) {
          return stepExtentBuilder_.getMessageOrBuilder();
        } else {
          return stepExtent_ == null ?
              net.studioblueplanet.tomtomwatch.WorkoutProto.Extent.getDefaultInstance() : stepExtent_;
        }
      }
      /**
       * <pre>
       * Duration or distance (called Length by TomTom)
       * </pre>
       *
       * <code>optional .tutorial.Extent stepExtent = 7;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          net.studioblueplanet.tomtomwatch.WorkoutProto.Extent, net.studioblueplanet.tomtomwatch.WorkoutProto.Extent.Builder, net.studioblueplanet.tomtomwatch.WorkoutProto.ExtentOrBuilder> 
          getStepExtentFieldBuilder() {
        if (stepExtentBuilder_ == null) {
          stepExtentBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              net.studioblueplanet.tomtomwatch.WorkoutProto.Extent, net.studioblueplanet.tomtomwatch.WorkoutProto.Extent.Builder, net.studioblueplanet.tomtomwatch.WorkoutProto.ExtentOrBuilder>(
                  getStepExtent(),
                  getParentForChildren(),
                  isClean());
          stepExtent_ = null;
        }
        return stepExtentBuilder_;
      }

      private net.studioblueplanet.tomtomwatch.WorkoutProto.Intensity intensity_;
      private com.google.protobuf.SingleFieldBuilderV3<
          net.studioblueplanet.tomtomwatch.WorkoutProto.Intensity, net.studioblueplanet.tomtomwatch.WorkoutProto.Intensity.Builder, net.studioblueplanet.tomtomwatch.WorkoutProto.IntensityOrBuilder> intensityBuilder_;
      /**
       * <pre>
       * Intensity goal (HR zone, pace, speed) of the step; optional
       * </pre>
       *
       * <code>optional .tutorial.Intensity intensity = 8;</code>
       */
      public boolean hasIntensity() {
        return ((bitField0_ & 0x00000020) != 0);
      }
      /**
       * <pre>
       * Intensity goal (HR zone, pace, speed) of the step; optional
       * </pre>
       *
       * <code>optional .tutorial.Intensity intensity = 8;</code>
       */
      public net.studioblueplanet.tomtomwatch.WorkoutProto.Intensity getIntensity() {
        if (intensityBuilder_ == null) {
          return intensity_ == null ? net.studioblueplanet.tomtomwatch.WorkoutProto.Intensity.getDefaultInstance() : intensity_;
        } else {
          return intensityBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       * Intensity goal (HR zone, pace, speed) of the step; optional
       * </pre>
       *
       * <code>optional .tutorial.Intensity intensity = 8;</code>
       */
      public Builder setIntensity(net.studioblueplanet.tomtomwatch.WorkoutProto.Intensity value) {
        if (intensityBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          intensity_ = value;
          onChanged();
        } else {
          intensityBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000020;
        return this;
      }
      /**
       * <pre>
       * Intensity goal (HR zone, pace, speed) of the step; optional
       * </pre>
       *
       * <code>optional .tutorial.Intensity intensity = 8;</code>
       */
      public Builder setIntensity(
          net.studioblueplanet.tomtomwatch.WorkoutProto.Intensity.Builder builderForValue) {
        if (intensityBuilder_ == null) {
          intensity_ = builderForValue.build();
          onChanged();
        } else {
          intensityBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000020;
        return this;
      }
      /**
       * <pre>
       * Intensity goal (HR zone, pace, speed) of the step; optional
       * </pre>
       *
       * <code>optional .tutorial.Intensity intensity = 8;</code>
       */
      public Builder mergeIntensity(net.studioblueplanet.tomtomwatch.WorkoutProto.Intensity value) {
        if (intensityBuilder_ == null) {
          if (((bitField0_ & 0x00000020) != 0) &&
              intensity_ != null &&
              intensity_ != net.studioblueplanet.tomtomwatch.WorkoutProto.Intensity.getDefaultInstance()) {
            intensity_ =
              net.studioblueplanet.tomtomwatch.WorkoutProto.Intensity.newBuilder(intensity_).mergeFrom(value).buildPartial();
          } else {
            intensity_ = value;
          }
          onChanged();
        } else {
          intensityBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000020;
        return this;
      }
      /**
       * <pre>
       * Intensity goal (HR zone, pace, speed) of the step; optional
       * </pre>
       *
       * <code>optional .tutorial.Intensity intensity = 8;</code>
       */
      public Builder clearIntensity() {
        if (intensityBuilder_ == null) {
          intensity_ = null;
          onChanged();
        } else {
          intensityBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000020);
        return this;
      }
      /**
       * <pre>
       * Intensity goal (HR zone, pace, speed) of the step; optional
       * </pre>
       *
       * <code>optional .tutorial.Intensity intensity = 8;</code>
       */
      public net.studioblueplanet.tomtomwatch.WorkoutProto.Intensity.Builder getIntensityBuilder() {
        bitField0_ |= 0x00000020;
        onChanged();
        return getIntensityFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       * Intensity goal (HR zone, pace, speed) of the step; optional
       * </pre>
       *
       * <code>optional .tutorial.Intensity intensity = 8;</code>
       */
      public net.studioblueplanet.tomtomwatch.WorkoutProto.IntensityOrBuilder getIntensityOrBuilder() {
        if (intensityBuilder_ != null) {
          return intensityBuilder_.getMessageOrBuilder();
        } else {
          return intensity_ == null ?
              net.studioblueplanet.tomtomwatch.WorkoutProto.Intensity.getDefaultInstance() : intensity_;
        }
      }
      /**
       * <pre>
       * Intensity goal (HR zone, pace, speed) of the step; optional
       * </pre>
       *
       * <code>optional .tutorial.Intensity intensity = 8;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          net.studioblueplanet.tomtomwatch.WorkoutProto.Intensity, net.studioblueplanet.tomtomwatch.WorkoutProto.Intensity.Builder, net.studioblueplanet.tomtomwatch.WorkoutProto.IntensityOrBuilder> 
          getIntensityFieldBuilder() {
        if (intensityBuilder_ == null) {
          intensityBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              net.studioblueplanet.tomtomwatch.WorkoutProto.Intensity, net.studioblueplanet.tomtomwatch.WorkoutProto.Intensity.Builder, net.studioblueplanet.tomtomwatch.WorkoutProto.IntensityOrBuilder>(
                  getIntensity(),
                  getParentForChildren(),
                  isClean());
          intensity_ = null;
        }
        return intensityBuilder_;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:tutorial.WorkoutStepSub)
    }

    // @@protoc_insertion_point(class_scope:tutorial.WorkoutStepSub)
    private static final net.studioblueplanet.tomtomwatch.WorkoutProto.WorkoutStepSub DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new net.studioblueplanet.tomtomwatch.WorkoutProto.WorkoutStepSub();
    }

    public static net.studioblueplanet.tomtomwatch.WorkoutProto.WorkoutStepSub getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    @java.lang.Deprecated public static final com.google.protobuf.Parser<WorkoutStepSub>
        PARSER = new com.google.protobuf.AbstractParser<WorkoutStepSub>() {
      @java.lang.Override
      public WorkoutStepSub parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new WorkoutStepSub(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<WorkoutStepSub> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<WorkoutStepSub> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public net.studioblueplanet.tomtomwatch.WorkoutProto.WorkoutStepSub getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface ExtentOrBuilder extends
      // @@protoc_insertion_point(interface_extends:tutorial.Extent)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     * duration in second
     * </pre>
     *
     * <code>optional int32 duration = 1;</code>
     */
    boolean hasDuration();
    /**
     * <pre>
     * duration in second
     * </pre>
     *
     * <code>optional int32 duration = 1;</code>
     */
    int getDuration();

    /**
     * <pre>
     * min 10000: distance in mm
     * </pre>
     *
     * <code>optional int32 distance = 2;</code>
     */
    boolean hasDistance();
    /**
     * <pre>
     * min 10000: distance in mm
     * </pre>
     *
     * <code>optional int32 distance = 2;</code>
     */
    int getDistance();

    /**
     * <pre>
     * HR zone to reach: 1: Easy 2: Fat burn, 3: Cardio, 4: Perform, 5: Peak (intensity not used)
     * </pre>
     *
     * <code>optional int32 reachZone = 4;</code>
     */
    boolean hasReachZone();
    /**
     * <pre>
     * HR zone to reach: 1: Easy 2: Fat burn, 3: Cardio, 4: Perform, 5: Peak (intensity not used)
     * </pre>
     *
     * <code>optional int32 reachZone = 4;</code>
     */
    int getReachZone();

    /**
     * <pre>
     * value is always 1
     * </pre>
     *
     * <code>optional int32 manual = 5;</code>
     */
    boolean hasManual();
    /**
     * <pre>
     * value is always 1
     * </pre>
     *
     * <code>optional int32 manual = 5;</code>
     */
    int getManual();
  }
  /**
   * <pre>
   *#################################################################################################
   * 7th level: Step size in terms of duration or distance
   *#################################################################################################
   * </pre>
   *
   * Protobuf type {@code tutorial.Extent}
   */
  public  static final class Extent extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:tutorial.Extent)
      ExtentOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use Extent.newBuilder() to construct.
    private Extent(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private Extent() {
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new Extent();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private Extent(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 8: {
              bitField0_ |= 0x00000001;
              duration_ = input.readInt32();
              break;
            }
            case 16: {
              bitField0_ |= 0x00000002;
              distance_ = input.readInt32();
              break;
            }
            case 32: {
              bitField0_ |= 0x00000004;
              reachZone_ = input.readInt32();
              break;
            }
            case 40: {
              bitField0_ |= 0x00000008;
              manual_ = input.readInt32();
              break;
            }
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return net.studioblueplanet.tomtomwatch.WorkoutProto.internal_static_tutorial_Extent_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return net.studioblueplanet.tomtomwatch.WorkoutProto.internal_static_tutorial_Extent_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              net.studioblueplanet.tomtomwatch.WorkoutProto.Extent.class, net.studioblueplanet.tomtomwatch.WorkoutProto.Extent.Builder.class);
    }

    private int bitField0_;
    public static final int DURATION_FIELD_NUMBER = 1;
    private int duration_;
    /**
     * <pre>
     * duration in second
     * </pre>
     *
     * <code>optional int32 duration = 1;</code>
     */
    public boolean hasDuration() {
      return ((bitField0_ & 0x00000001) != 0);
    }
    /**
     * <pre>
     * duration in second
     * </pre>
     *
     * <code>optional int32 duration = 1;</code>
     */
    public int getDuration() {
      return duration_;
    }

    public static final int DISTANCE_FIELD_NUMBER = 2;
    private int distance_;
    /**
     * <pre>
     * min 10000: distance in mm
     * </pre>
     *
     * <code>optional int32 distance = 2;</code>
     */
    public boolean hasDistance() {
      return ((bitField0_ & 0x00000002) != 0);
    }
    /**
     * <pre>
     * min 10000: distance in mm
     * </pre>
     *
     * <code>optional int32 distance = 2;</code>
     */
    public int getDistance() {
      return distance_;
    }

    public static final int REACHZONE_FIELD_NUMBER = 4;
    private int reachZone_;
    /**
     * <pre>
     * HR zone to reach: 1: Easy 2: Fat burn, 3: Cardio, 4: Perform, 5: Peak (intensity not used)
     * </pre>
     *
     * <code>optional int32 reachZone = 4;</code>
     */
    public boolean hasReachZone() {
      return ((bitField0_ & 0x00000004) != 0);
    }
    /**
     * <pre>
     * HR zone to reach: 1: Easy 2: Fat burn, 3: Cardio, 4: Perform, 5: Peak (intensity not used)
     * </pre>
     *
     * <code>optional int32 reachZone = 4;</code>
     */
    public int getReachZone() {
      return reachZone_;
    }

    public static final int MANUAL_FIELD_NUMBER = 5;
    private int manual_;
    /**
     * <pre>
     * value is always 1
     * </pre>
     *
     * <code>optional int32 manual = 5;</code>
     */
    public boolean hasManual() {
      return ((bitField0_ & 0x00000008) != 0);
    }
    /**
     * <pre>
     * value is always 1
     * </pre>
     *
     * <code>optional int32 manual = 5;</code>
     */
    public int getManual() {
      return manual_;
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (((bitField0_ & 0x00000001) != 0)) {
        output.writeInt32(1, duration_);
      }
      if (((bitField0_ & 0x00000002) != 0)) {
        output.writeInt32(2, distance_);
      }
      if (((bitField0_ & 0x00000004) != 0)) {
        output.writeInt32(4, reachZone_);
      }
      if (((bitField0_ & 0x00000008) != 0)) {
        output.writeInt32(5, manual_);
      }
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(1, duration_);
      }
      if (((bitField0_ & 0x00000002) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(2, distance_);
      }
      if (((bitField0_ & 0x00000004) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(4, reachZone_);
      }
      if (((bitField0_ & 0x00000008) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(5, manual_);
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof net.studioblueplanet.tomtomwatch.WorkoutProto.Extent)) {
        return super.equals(obj);
      }
      net.studioblueplanet.tomtomwatch.WorkoutProto.Extent other = (net.studioblueplanet.tomtomwatch.WorkoutProto.Extent) obj;

      if (hasDuration() != other.hasDuration()) return false;
      if (hasDuration()) {
        if (getDuration()
            != other.getDuration()) return false;
      }
      if (hasDistance() != other.hasDistance()) return false;
      if (hasDistance()) {
        if (getDistance()
            != other.getDistance()) return false;
      }
      if (hasReachZone() != other.hasReachZone()) return false;
      if (hasReachZone()) {
        if (getReachZone()
            != other.getReachZone()) return false;
      }
      if (hasManual() != other.hasManual()) return false;
      if (hasManual()) {
        if (getManual()
            != other.getManual()) return false;
      }
      if (!unknownFields.equals(other.unknownFields)) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (hasDuration()) {
        hash = (37 * hash) + DURATION_FIELD_NUMBER;
        hash = (53 * hash) + getDuration();
      }
      if (hasDistance()) {
        hash = (37 * hash) + DISTANCE_FIELD_NUMBER;
        hash = (53 * hash) + getDistance();
      }
      if (hasReachZone()) {
        hash = (37 * hash) + REACHZONE_FIELD_NUMBER;
        hash = (53 * hash) + getReachZone();
      }
      if (hasManual()) {
        hash = (37 * hash) + MANUAL_FIELD_NUMBER;
        hash = (53 * hash) + getManual();
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static net.studioblueplanet.tomtomwatch.WorkoutProto.Extent parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static net.studioblueplanet.tomtomwatch.WorkoutProto.Extent parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static net.studioblueplanet.tomtomwatch.WorkoutProto.Extent parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static net.studioblueplanet.tomtomwatch.WorkoutProto.Extent parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static net.studioblueplanet.tomtomwatch.WorkoutProto.Extent parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static net.studioblueplanet.tomtomwatch.WorkoutProto.Extent parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static net.studioblueplanet.tomtomwatch.WorkoutProto.Extent parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static net.studioblueplanet.tomtomwatch.WorkoutProto.Extent parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static net.studioblueplanet.tomtomwatch.WorkoutProto.Extent parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static net.studioblueplanet.tomtomwatch.WorkoutProto.Extent parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static net.studioblueplanet.tomtomwatch.WorkoutProto.Extent parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static net.studioblueplanet.tomtomwatch.WorkoutProto.Extent parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(net.studioblueplanet.tomtomwatch.WorkoutProto.Extent prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     *#################################################################################################
     * 7th level: Step size in terms of duration or distance
     *#################################################################################################
     * </pre>
     *
     * Protobuf type {@code tutorial.Extent}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:tutorial.Extent)
        net.studioblueplanet.tomtomwatch.WorkoutProto.ExtentOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return net.studioblueplanet.tomtomwatch.WorkoutProto.internal_static_tutorial_Extent_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return net.studioblueplanet.tomtomwatch.WorkoutProto.internal_static_tutorial_Extent_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                net.studioblueplanet.tomtomwatch.WorkoutProto.Extent.class, net.studioblueplanet.tomtomwatch.WorkoutProto.Extent.Builder.class);
      }

      // Construct using net.studioblueplanet.tomtomwatch.WorkoutProto.Extent.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        duration_ = 0;
        bitField0_ = (bitField0_ & ~0x00000001);
        distance_ = 0;
        bitField0_ = (bitField0_ & ~0x00000002);
        reachZone_ = 0;
        bitField0_ = (bitField0_ & ~0x00000004);
        manual_ = 0;
        bitField0_ = (bitField0_ & ~0x00000008);
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return net.studioblueplanet.tomtomwatch.WorkoutProto.internal_static_tutorial_Extent_descriptor;
      }

      @java.lang.Override
      public net.studioblueplanet.tomtomwatch.WorkoutProto.Extent getDefaultInstanceForType() {
        return net.studioblueplanet.tomtomwatch.WorkoutProto.Extent.getDefaultInstance();
      }

      @java.lang.Override
      public net.studioblueplanet.tomtomwatch.WorkoutProto.Extent build() {
        net.studioblueplanet.tomtomwatch.WorkoutProto.Extent result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public net.studioblueplanet.tomtomwatch.WorkoutProto.Extent buildPartial() {
        net.studioblueplanet.tomtomwatch.WorkoutProto.Extent result = new net.studioblueplanet.tomtomwatch.WorkoutProto.Extent(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) != 0)) {
          result.duration_ = duration_;
          to_bitField0_ |= 0x00000001;
        }
        if (((from_bitField0_ & 0x00000002) != 0)) {
          result.distance_ = distance_;
          to_bitField0_ |= 0x00000002;
        }
        if (((from_bitField0_ & 0x00000004) != 0)) {
          result.reachZone_ = reachZone_;
          to_bitField0_ |= 0x00000004;
        }
        if (((from_bitField0_ & 0x00000008) != 0)) {
          result.manual_ = manual_;
          to_bitField0_ |= 0x00000008;
        }
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof net.studioblueplanet.tomtomwatch.WorkoutProto.Extent) {
          return mergeFrom((net.studioblueplanet.tomtomwatch.WorkoutProto.Extent)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(net.studioblueplanet.tomtomwatch.WorkoutProto.Extent other) {
        if (other == net.studioblueplanet.tomtomwatch.WorkoutProto.Extent.getDefaultInstance()) return this;
        if (other.hasDuration()) {
          setDuration(other.getDuration());
        }
        if (other.hasDistance()) {
          setDistance(other.getDistance());
        }
        if (other.hasReachZone()) {
          setReachZone(other.getReachZone());
        }
        if (other.hasManual()) {
          setManual(other.getManual());
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        net.studioblueplanet.tomtomwatch.WorkoutProto.Extent parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (net.studioblueplanet.tomtomwatch.WorkoutProto.Extent) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private int duration_ ;
      /**
       * <pre>
       * duration in second
       * </pre>
       *
       * <code>optional int32 duration = 1;</code>
       */
      public boolean hasDuration() {
        return ((bitField0_ & 0x00000001) != 0);
      }
      /**
       * <pre>
       * duration in second
       * </pre>
       *
       * <code>optional int32 duration = 1;</code>
       */
      public int getDuration() {
        return duration_;
      }
      /**
       * <pre>
       * duration in second
       * </pre>
       *
       * <code>optional int32 duration = 1;</code>
       */
      public Builder setDuration(int value) {
        bitField0_ |= 0x00000001;
        duration_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * duration in second
       * </pre>
       *
       * <code>optional int32 duration = 1;</code>
       */
      public Builder clearDuration() {
        bitField0_ = (bitField0_ & ~0x00000001);
        duration_ = 0;
        onChanged();
        return this;
      }

      private int distance_ ;
      /**
       * <pre>
       * min 10000: distance in mm
       * </pre>
       *
       * <code>optional int32 distance = 2;</code>
       */
      public boolean hasDistance() {
        return ((bitField0_ & 0x00000002) != 0);
      }
      /**
       * <pre>
       * min 10000: distance in mm
       * </pre>
       *
       * <code>optional int32 distance = 2;</code>
       */
      public int getDistance() {
        return distance_;
      }
      /**
       * <pre>
       * min 10000: distance in mm
       * </pre>
       *
       * <code>optional int32 distance = 2;</code>
       */
      public Builder setDistance(int value) {
        bitField0_ |= 0x00000002;
        distance_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * min 10000: distance in mm
       * </pre>
       *
       * <code>optional int32 distance = 2;</code>
       */
      public Builder clearDistance() {
        bitField0_ = (bitField0_ & ~0x00000002);
        distance_ = 0;
        onChanged();
        return this;
      }

      private int reachZone_ ;
      /**
       * <pre>
       * HR zone to reach: 1: Easy 2: Fat burn, 3: Cardio, 4: Perform, 5: Peak (intensity not used)
       * </pre>
       *
       * <code>optional int32 reachZone = 4;</code>
       */
      public boolean hasReachZone() {
        return ((bitField0_ & 0x00000004) != 0);
      }
      /**
       * <pre>
       * HR zone to reach: 1: Easy 2: Fat burn, 3: Cardio, 4: Perform, 5: Peak (intensity not used)
       * </pre>
       *
       * <code>optional int32 reachZone = 4;</code>
       */
      public int getReachZone() {
        return reachZone_;
      }
      /**
       * <pre>
       * HR zone to reach: 1: Easy 2: Fat burn, 3: Cardio, 4: Perform, 5: Peak (intensity not used)
       * </pre>
       *
       * <code>optional int32 reachZone = 4;</code>
       */
      public Builder setReachZone(int value) {
        bitField0_ |= 0x00000004;
        reachZone_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * HR zone to reach: 1: Easy 2: Fat burn, 3: Cardio, 4: Perform, 5: Peak (intensity not used)
       * </pre>
       *
       * <code>optional int32 reachZone = 4;</code>
       */
      public Builder clearReachZone() {
        bitField0_ = (bitField0_ & ~0x00000004);
        reachZone_ = 0;
        onChanged();
        return this;
      }

      private int manual_ ;
      /**
       * <pre>
       * value is always 1
       * </pre>
       *
       * <code>optional int32 manual = 5;</code>
       */
      public boolean hasManual() {
        return ((bitField0_ & 0x00000008) != 0);
      }
      /**
       * <pre>
       * value is always 1
       * </pre>
       *
       * <code>optional int32 manual = 5;</code>
       */
      public int getManual() {
        return manual_;
      }
      /**
       * <pre>
       * value is always 1
       * </pre>
       *
       * <code>optional int32 manual = 5;</code>
       */
      public Builder setManual(int value) {
        bitField0_ |= 0x00000008;
        manual_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * value is always 1
       * </pre>
       *
       * <code>optional int32 manual = 5;</code>
       */
      public Builder clearManual() {
        bitField0_ = (bitField0_ & ~0x00000008);
        manual_ = 0;
        onChanged();
        return this;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:tutorial.Extent)
    }

    // @@protoc_insertion_point(class_scope:tutorial.Extent)
    private static final net.studioblueplanet.tomtomwatch.WorkoutProto.Extent DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new net.studioblueplanet.tomtomwatch.WorkoutProto.Extent();
    }

    public static net.studioblueplanet.tomtomwatch.WorkoutProto.Extent getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    @java.lang.Deprecated public static final com.google.protobuf.Parser<Extent>
        PARSER = new com.google.protobuf.AbstractParser<Extent>() {
      @java.lang.Override
      public Extent parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new Extent(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<Extent> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<Extent> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public net.studioblueplanet.tomtomwatch.WorkoutProto.Extent getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface IntensityOrBuilder extends
      // @@protoc_insertion_point(interface_extends:tutorial.Intensity)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     * &#64;HR Zone: 1: Easy 2: Fat burn, 3: Cardio, 4: Perform, 5: Peak
     * </pre>
     *
     * <code>optional int32 heartratezone = 1;</code>
     */
    boolean hasHeartratezone();
    /**
     * <pre>
     * &#64;HR Zone: 1: Easy 2: Fat burn, 3: Cardio, 4: Perform, 5: Peak
     * </pre>
     *
     * <code>optional int32 heartratezone = 1;</code>
     */
    int getHeartratezone();

    /**
     * <pre>
     * &#64;pace in milliseconds per km e.g. 312000 = 5:12 min/km
     * </pre>
     *
     * <code>optional int32 pace = 2;</code>
     */
    boolean hasPace();
    /**
     * <pre>
     * &#64;pace in milliseconds per km e.g. 312000 = 5:12 min/km
     * </pre>
     *
     * <code>optional int32 pace = 2;</code>
     */
    int getPace();

    /**
     * <pre>
     * &#64;speed in mm/sec
     * </pre>
     *
     * <code>optional int32 speed = 3;</code>
     */
    boolean hasSpeed();
    /**
     * <pre>
     * &#64;speed in mm/sec
     * </pre>
     *
     * <code>optional int32 speed = 3;</code>
     */
    int getSpeed();
  }
  /**
   * <pre>
   *#################################################################################################
   * 7th level: Step intensity in heartrate zone or pace
   *#################################################################################################
   * </pre>
   *
   * Protobuf type {@code tutorial.Intensity}
   */
  public  static final class Intensity extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:tutorial.Intensity)
      IntensityOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use Intensity.newBuilder() to construct.
    private Intensity(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private Intensity() {
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new Intensity();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private Intensity(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 8: {
              bitField0_ |= 0x00000001;
              heartratezone_ = input.readInt32();
              break;
            }
            case 16: {
              bitField0_ |= 0x00000002;
              pace_ = input.readInt32();
              break;
            }
            case 24: {
              bitField0_ |= 0x00000004;
              speed_ = input.readInt32();
              break;
            }
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return net.studioblueplanet.tomtomwatch.WorkoutProto.internal_static_tutorial_Intensity_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return net.studioblueplanet.tomtomwatch.WorkoutProto.internal_static_tutorial_Intensity_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              net.studioblueplanet.tomtomwatch.WorkoutProto.Intensity.class, net.studioblueplanet.tomtomwatch.WorkoutProto.Intensity.Builder.class);
    }

    private int bitField0_;
    public static final int HEARTRATEZONE_FIELD_NUMBER = 1;
    private int heartratezone_;
    /**
     * <pre>
     * &#64;HR Zone: 1: Easy 2: Fat burn, 3: Cardio, 4: Perform, 5: Peak
     * </pre>
     *
     * <code>optional int32 heartratezone = 1;</code>
     */
    public boolean hasHeartratezone() {
      return ((bitField0_ & 0x00000001) != 0);
    }
    /**
     * <pre>
     * &#64;HR Zone: 1: Easy 2: Fat burn, 3: Cardio, 4: Perform, 5: Peak
     * </pre>
     *
     * <code>optional int32 heartratezone = 1;</code>
     */
    public int getHeartratezone() {
      return heartratezone_;
    }

    public static final int PACE_FIELD_NUMBER = 2;
    private int pace_;
    /**
     * <pre>
     * &#64;pace in milliseconds per km e.g. 312000 = 5:12 min/km
     * </pre>
     *
     * <code>optional int32 pace = 2;</code>
     */
    public boolean hasPace() {
      return ((bitField0_ & 0x00000002) != 0);
    }
    /**
     * <pre>
     * &#64;pace in milliseconds per km e.g. 312000 = 5:12 min/km
     * </pre>
     *
     * <code>optional int32 pace = 2;</code>
     */
    public int getPace() {
      return pace_;
    }

    public static final int SPEED_FIELD_NUMBER = 3;
    private int speed_;
    /**
     * <pre>
     * &#64;speed in mm/sec
     * </pre>
     *
     * <code>optional int32 speed = 3;</code>
     */
    public boolean hasSpeed() {
      return ((bitField0_ & 0x00000004) != 0);
    }
    /**
     * <pre>
     * &#64;speed in mm/sec
     * </pre>
     *
     * <code>optional int32 speed = 3;</code>
     */
    public int getSpeed() {
      return speed_;
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (((bitField0_ & 0x00000001) != 0)) {
        output.writeInt32(1, heartratezone_);
      }
      if (((bitField0_ & 0x00000002) != 0)) {
        output.writeInt32(2, pace_);
      }
      if (((bitField0_ & 0x00000004) != 0)) {
        output.writeInt32(3, speed_);
      }
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(1, heartratezone_);
      }
      if (((bitField0_ & 0x00000002) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(2, pace_);
      }
      if (((bitField0_ & 0x00000004) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(3, speed_);
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof net.studioblueplanet.tomtomwatch.WorkoutProto.Intensity)) {
        return super.equals(obj);
      }
      net.studioblueplanet.tomtomwatch.WorkoutProto.Intensity other = (net.studioblueplanet.tomtomwatch.WorkoutProto.Intensity) obj;

      if (hasHeartratezone() != other.hasHeartratezone()) return false;
      if (hasHeartratezone()) {
        if (getHeartratezone()
            != other.getHeartratezone()) return false;
      }
      if (hasPace() != other.hasPace()) return false;
      if (hasPace()) {
        if (getPace()
            != other.getPace()) return false;
      }
      if (hasSpeed() != other.hasSpeed()) return false;
      if (hasSpeed()) {
        if (getSpeed()
            != other.getSpeed()) return false;
      }
      if (!unknownFields.equals(other.unknownFields)) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (hasHeartratezone()) {
        hash = (37 * hash) + HEARTRATEZONE_FIELD_NUMBER;
        hash = (53 * hash) + getHeartratezone();
      }
      if (hasPace()) {
        hash = (37 * hash) + PACE_FIELD_NUMBER;
        hash = (53 * hash) + getPace();
      }
      if (hasSpeed()) {
        hash = (37 * hash) + SPEED_FIELD_NUMBER;
        hash = (53 * hash) + getSpeed();
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static net.studioblueplanet.tomtomwatch.WorkoutProto.Intensity parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static net.studioblueplanet.tomtomwatch.WorkoutProto.Intensity parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static net.studioblueplanet.tomtomwatch.WorkoutProto.Intensity parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static net.studioblueplanet.tomtomwatch.WorkoutProto.Intensity parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static net.studioblueplanet.tomtomwatch.WorkoutProto.Intensity parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static net.studioblueplanet.tomtomwatch.WorkoutProto.Intensity parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static net.studioblueplanet.tomtomwatch.WorkoutProto.Intensity parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static net.studioblueplanet.tomtomwatch.WorkoutProto.Intensity parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static net.studioblueplanet.tomtomwatch.WorkoutProto.Intensity parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static net.studioblueplanet.tomtomwatch.WorkoutProto.Intensity parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static net.studioblueplanet.tomtomwatch.WorkoutProto.Intensity parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static net.studioblueplanet.tomtomwatch.WorkoutProto.Intensity parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(net.studioblueplanet.tomtomwatch.WorkoutProto.Intensity prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     *#################################################################################################
     * 7th level: Step intensity in heartrate zone or pace
     *#################################################################################################
     * </pre>
     *
     * Protobuf type {@code tutorial.Intensity}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:tutorial.Intensity)
        net.studioblueplanet.tomtomwatch.WorkoutProto.IntensityOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return net.studioblueplanet.tomtomwatch.WorkoutProto.internal_static_tutorial_Intensity_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return net.studioblueplanet.tomtomwatch.WorkoutProto.internal_static_tutorial_Intensity_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                net.studioblueplanet.tomtomwatch.WorkoutProto.Intensity.class, net.studioblueplanet.tomtomwatch.WorkoutProto.Intensity.Builder.class);
      }

      // Construct using net.studioblueplanet.tomtomwatch.WorkoutProto.Intensity.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        heartratezone_ = 0;
        bitField0_ = (bitField0_ & ~0x00000001);
        pace_ = 0;
        bitField0_ = (bitField0_ & ~0x00000002);
        speed_ = 0;
        bitField0_ = (bitField0_ & ~0x00000004);
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return net.studioblueplanet.tomtomwatch.WorkoutProto.internal_static_tutorial_Intensity_descriptor;
      }

      @java.lang.Override
      public net.studioblueplanet.tomtomwatch.WorkoutProto.Intensity getDefaultInstanceForType() {
        return net.studioblueplanet.tomtomwatch.WorkoutProto.Intensity.getDefaultInstance();
      }

      @java.lang.Override
      public net.studioblueplanet.tomtomwatch.WorkoutProto.Intensity build() {
        net.studioblueplanet.tomtomwatch.WorkoutProto.Intensity result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public net.studioblueplanet.tomtomwatch.WorkoutProto.Intensity buildPartial() {
        net.studioblueplanet.tomtomwatch.WorkoutProto.Intensity result = new net.studioblueplanet.tomtomwatch.WorkoutProto.Intensity(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) != 0)) {
          result.heartratezone_ = heartratezone_;
          to_bitField0_ |= 0x00000001;
        }
        if (((from_bitField0_ & 0x00000002) != 0)) {
          result.pace_ = pace_;
          to_bitField0_ |= 0x00000002;
        }
        if (((from_bitField0_ & 0x00000004) != 0)) {
          result.speed_ = speed_;
          to_bitField0_ |= 0x00000004;
        }
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof net.studioblueplanet.tomtomwatch.WorkoutProto.Intensity) {
          return mergeFrom((net.studioblueplanet.tomtomwatch.WorkoutProto.Intensity)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(net.studioblueplanet.tomtomwatch.WorkoutProto.Intensity other) {
        if (other == net.studioblueplanet.tomtomwatch.WorkoutProto.Intensity.getDefaultInstance()) return this;
        if (other.hasHeartratezone()) {
          setHeartratezone(other.getHeartratezone());
        }
        if (other.hasPace()) {
          setPace(other.getPace());
        }
        if (other.hasSpeed()) {
          setSpeed(other.getSpeed());
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        net.studioblueplanet.tomtomwatch.WorkoutProto.Intensity parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (net.studioblueplanet.tomtomwatch.WorkoutProto.Intensity) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private int heartratezone_ ;
      /**
       * <pre>
       * &#64;HR Zone: 1: Easy 2: Fat burn, 3: Cardio, 4: Perform, 5: Peak
       * </pre>
       *
       * <code>optional int32 heartratezone = 1;</code>
       */
      public boolean hasHeartratezone() {
        return ((bitField0_ & 0x00000001) != 0);
      }
      /**
       * <pre>
       * &#64;HR Zone: 1: Easy 2: Fat burn, 3: Cardio, 4: Perform, 5: Peak
       * </pre>
       *
       * <code>optional int32 heartratezone = 1;</code>
       */
      public int getHeartratezone() {
        return heartratezone_;
      }
      /**
       * <pre>
       * &#64;HR Zone: 1: Easy 2: Fat burn, 3: Cardio, 4: Perform, 5: Peak
       * </pre>
       *
       * <code>optional int32 heartratezone = 1;</code>
       */
      public Builder setHeartratezone(int value) {
        bitField0_ |= 0x00000001;
        heartratezone_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * &#64;HR Zone: 1: Easy 2: Fat burn, 3: Cardio, 4: Perform, 5: Peak
       * </pre>
       *
       * <code>optional int32 heartratezone = 1;</code>
       */
      public Builder clearHeartratezone() {
        bitField0_ = (bitField0_ & ~0x00000001);
        heartratezone_ = 0;
        onChanged();
        return this;
      }

      private int pace_ ;
      /**
       * <pre>
       * &#64;pace in milliseconds per km e.g. 312000 = 5:12 min/km
       * </pre>
       *
       * <code>optional int32 pace = 2;</code>
       */
      public boolean hasPace() {
        return ((bitField0_ & 0x00000002) != 0);
      }
      /**
       * <pre>
       * &#64;pace in milliseconds per km e.g. 312000 = 5:12 min/km
       * </pre>
       *
       * <code>optional int32 pace = 2;</code>
       */
      public int getPace() {
        return pace_;
      }
      /**
       * <pre>
       * &#64;pace in milliseconds per km e.g. 312000 = 5:12 min/km
       * </pre>
       *
       * <code>optional int32 pace = 2;</code>
       */
      public Builder setPace(int value) {
        bitField0_ |= 0x00000002;
        pace_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * &#64;pace in milliseconds per km e.g. 312000 = 5:12 min/km
       * </pre>
       *
       * <code>optional int32 pace = 2;</code>
       */
      public Builder clearPace() {
        bitField0_ = (bitField0_ & ~0x00000002);
        pace_ = 0;
        onChanged();
        return this;
      }

      private int speed_ ;
      /**
       * <pre>
       * &#64;speed in mm/sec
       * </pre>
       *
       * <code>optional int32 speed = 3;</code>
       */
      public boolean hasSpeed() {
        return ((bitField0_ & 0x00000004) != 0);
      }
      /**
       * <pre>
       * &#64;speed in mm/sec
       * </pre>
       *
       * <code>optional int32 speed = 3;</code>
       */
      public int getSpeed() {
        return speed_;
      }
      /**
       * <pre>
       * &#64;speed in mm/sec
       * </pre>
       *
       * <code>optional int32 speed = 3;</code>
       */
      public Builder setSpeed(int value) {
        bitField0_ |= 0x00000004;
        speed_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * &#64;speed in mm/sec
       * </pre>
       *
       * <code>optional int32 speed = 3;</code>
       */
      public Builder clearSpeed() {
        bitField0_ = (bitField0_ & ~0x00000004);
        speed_ = 0;
        onChanged();
        return this;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:tutorial.Intensity)
    }

    // @@protoc_insertion_point(class_scope:tutorial.Intensity)
    private static final net.studioblueplanet.tomtomwatch.WorkoutProto.Intensity DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new net.studioblueplanet.tomtomwatch.WorkoutProto.Intensity();
    }

    public static net.studioblueplanet.tomtomwatch.WorkoutProto.Intensity getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    @java.lang.Deprecated public static final com.google.protobuf.Parser<Intensity>
        PARSER = new com.google.protobuf.AbstractParser<Intensity>() {
      @java.lang.Override
      public Intensity parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new Intensity(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<Intensity> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<Intensity> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public net.studioblueplanet.tomtomwatch.WorkoutProto.Intensity getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_tutorial_Root_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_tutorial_Root_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_tutorial_RootContainer_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_tutorial_RootContainer_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_tutorial_Metadata_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_tutorial_Metadata_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_tutorial_DataContainer_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_tutorial_DataContainer_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_tutorial_SubDataContainer_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_tutorial_SubDataContainer_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_tutorial_Description_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_tutorial_Description_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_tutorial_Workout_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_tutorial_Workout_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_tutorial_WorkoutListItem_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_tutorial_WorkoutListItem_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_tutorial_WorkoutStep_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_tutorial_WorkoutStep_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_tutorial_WorkoutStepSub_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_tutorial_WorkoutStepSub_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_tutorial_Extent_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_tutorial_Extent_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_tutorial_Intensity_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_tutorial_Intensity_fieldAccessorTable;

  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static  com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    java.lang.String[] descriptorData = {
      "\n\rworkout.proto\022\010tutorial\"6\n\004Root\022.\n\rroo" +
      "tContainer\030\001 \003(\0132\027.tutorial.RootContaine" +
      "r\"e\n\rRootContainer\022$\n\010metadata\030\007 \001(\0132\022.t" +
      "utorial.Metadata\022.\n\rdataContainer\030\010 \001(\0132" +
      "\027.tutorial.DataContainer\"2\n\010Metadata\022\024\n\014" +
      "manufacturer\030\001 \002(\007\022\020\n\010fileType\030\002 \002(\007\"E\n\r" +
      "DataContainer\0224\n\020subDataContainer\030\001 \002(\0132" +
      "\032.tutorial.SubDataContainer\"\315\001\n\020SubDataC" +
      "ontainer\022.\n\017itemDescription\030\006 \003(\0132\025.tuto" +
      "rial.Description\0222\n\017workoutListItem\030\005 \003(" +
      "\0132\031.tutorial.WorkoutListItem\0221\n\022workoutD" +
      "escription\030\004 \003(\0132\025.tutorial.Description\022" +
      "\"\n\007workout\030\007 \001(\0132\021.tutorial.Workout\".\n\013D" +
      "escription\022\n\n\002id\030\001 \002(\005\022\023\n\013description\030\002 " +
      "\002(\t\"~\n\007Workout\022\014\n\004name\030\002 \002(\005\022\023\n\013descript" +
      "ion\030\003 \001(\005\022\n\n\002id\030\004 \002(\014\022\014\n\004Type\030\n \002(\005\022\021\n\tu" +
      "nknown11\030\013 \002(\005\022#\n\004step\030\014 \003(\0132\025.tutorial." +
      "WorkoutStep\"\347\001\n\017WorkoutListItem\022\016\n\006fileI" +
      "d\030\001 \002(\007\022\n\n\002id\030\002 \002(\014\022\020\n\010itemName\030\003 \002(\005\022\027\n" +
      "\017itemDescription\030\004 \002(\005\022\021\n\tworkoutId\030\005 \002(" +
      "\014\022\020\n\010unknown7\030\007 \002(\005\022\020\n\010unknown8\030\010 \002(\005\022\020\n" +
      "\010unknown9\030\t \002(\005\022\020\n\010activity\030\n \002(\006\022\014\n\004typ" +
      "e\030\013 \002(\005\022\021\n\tunknown12\030\014 \002(\005\022\021\n\tunknown13\030" +
      "\r \002(\005\"8\n\013WorkoutStep\022)\n\007stepSub\030\010 \002(\0132\030." +
      "tutorial.WorkoutStepSub\"\257\001\n\016WorkoutStepS" +
      "ub\022\020\n\010stepName\030\001 \002(\005\022\027\n\017stepDescription\030" +
      "\002 \001(\005\022\022\n\nstepNumber\030\004 \002(\005\022\020\n\010stepType\030\006 " +
      "\002(\005\022$\n\nstepExtent\030\007 \001(\0132\020.tutorial.Exten" +
      "t\022&\n\tintensity\030\010 \001(\0132\023.tutorial.Intensit" +
      "y\"O\n\006Extent\022\020\n\010duration\030\001 \001(\005\022\020\n\010distanc" +
      "e\030\002 \001(\005\022\021\n\treachZone\030\004 \001(\005\022\016\n\006manual\030\005 \001" +
      "(\005\"?\n\tIntensity\022\025\n\rheartratezone\030\001 \001(\005\022\014" +
      "\n\004pace\030\002 \001(\005\022\r\n\005speed\030\003 \001(\005B0\n net.studi" +
      "oblueplanet.tomtomwatchB\014WorkoutProto"
    };
    descriptor = com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
        });
    internal_static_tutorial_Root_descriptor =
      getDescriptor().getMessageTypes().get(0);
    internal_static_tutorial_Root_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_tutorial_Root_descriptor,
        new java.lang.String[] { "RootContainer", });
    internal_static_tutorial_RootContainer_descriptor =
      getDescriptor().getMessageTypes().get(1);
    internal_static_tutorial_RootContainer_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_tutorial_RootContainer_descriptor,
        new java.lang.String[] { "Metadata", "DataContainer", });
    internal_static_tutorial_Metadata_descriptor =
      getDescriptor().getMessageTypes().get(2);
    internal_static_tutorial_Metadata_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_tutorial_Metadata_descriptor,
        new java.lang.String[] { "Manufacturer", "FileType", });
    internal_static_tutorial_DataContainer_descriptor =
      getDescriptor().getMessageTypes().get(3);
    internal_static_tutorial_DataContainer_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_tutorial_DataContainer_descriptor,
        new java.lang.String[] { "SubDataContainer", });
    internal_static_tutorial_SubDataContainer_descriptor =
      getDescriptor().getMessageTypes().get(4);
    internal_static_tutorial_SubDataContainer_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_tutorial_SubDataContainer_descriptor,
        new java.lang.String[] { "ItemDescription", "WorkoutListItem", "WorkoutDescription", "Workout", });
    internal_static_tutorial_Description_descriptor =
      getDescriptor().getMessageTypes().get(5);
    internal_static_tutorial_Description_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_tutorial_Description_descriptor,
        new java.lang.String[] { "Id", "Description", });
    internal_static_tutorial_Workout_descriptor =
      getDescriptor().getMessageTypes().get(6);
    internal_static_tutorial_Workout_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_tutorial_Workout_descriptor,
        new java.lang.String[] { "Name", "Description", "Id", "Type", "Unknown11", "Step", });
    internal_static_tutorial_WorkoutListItem_descriptor =
      getDescriptor().getMessageTypes().get(7);
    internal_static_tutorial_WorkoutListItem_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_tutorial_WorkoutListItem_descriptor,
        new java.lang.String[] { "FileId", "Id", "ItemName", "ItemDescription", "WorkoutId", "Unknown7", "Unknown8", "Unknown9", "Activity", "Type", "Unknown12", "Unknown13", });
    internal_static_tutorial_WorkoutStep_descriptor =
      getDescriptor().getMessageTypes().get(8);
    internal_static_tutorial_WorkoutStep_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_tutorial_WorkoutStep_descriptor,
        new java.lang.String[] { "StepSub", });
    internal_static_tutorial_WorkoutStepSub_descriptor =
      getDescriptor().getMessageTypes().get(9);
    internal_static_tutorial_WorkoutStepSub_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_tutorial_WorkoutStepSub_descriptor,
        new java.lang.String[] { "StepName", "StepDescription", "StepNumber", "StepType", "StepExtent", "Intensity", });
    internal_static_tutorial_Extent_descriptor =
      getDescriptor().getMessageTypes().get(10);
    internal_static_tutorial_Extent_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_tutorial_Extent_descriptor,
        new java.lang.String[] { "Duration", "Distance", "ReachZone", "Manual", });
    internal_static_tutorial_Intensity_descriptor =
      getDescriptor().getMessageTypes().get(11);
    internal_static_tutorial_Intensity_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_tutorial_Intensity_descriptor,
        new java.lang.String[] { "Heartratezone", "Pace", "Speed", });
  }

  // @@protoc_insertion_point(outer_class_scope)
}
