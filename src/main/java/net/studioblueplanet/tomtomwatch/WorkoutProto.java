// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: workout.proto

package net.studioblueplanet.tomtomwatch;

public final class WorkoutProto {
  private WorkoutProto() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistryLite registry) {
  }

  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
    registerAllExtensions(
        (com.google.protobuf.ExtensionRegistryLite) registry);
  }
  public interface RootContainerOrBuilder extends
      // @@protoc_insertion_point(interface_extends:tutorial.RootContainer)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>optional .tutorial.Metadata metadata = 7;</code>
     */
    boolean hasMetadata();
    /**
     * <code>optional .tutorial.Metadata metadata = 7;</code>
     */
    net.studioblueplanet.tomtomwatch.WorkoutProto.Metadata getMetadata();
    /**
     * <code>optional .tutorial.Metadata metadata = 7;</code>
     */
    net.studioblueplanet.tomtomwatch.WorkoutProto.MetadataOrBuilder getMetadataOrBuilder();

    /**
     * <code>optional .tutorial.DataContainer dataContainer = 8;</code>
     */
    boolean hasDataContainer();
    /**
     * <code>optional .tutorial.DataContainer dataContainer = 8;</code>
     */
    net.studioblueplanet.tomtomwatch.WorkoutProto.DataContainer getDataContainer();
    /**
     * <code>optional .tutorial.DataContainer dataContainer = 8;</code>
     */
    net.studioblueplanet.tomtomwatch.WorkoutProto.DataContainerOrBuilder getDataContainerOrBuilder();
  }
  /**
   * Protobuf type {@code tutorial.RootContainer}
   */
  public  static final class RootContainer extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:tutorial.RootContainer)
      RootContainerOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use RootContainer.newBuilder() to construct.
    private RootContainer(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private RootContainer() {
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new RootContainer();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private RootContainer(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 58: {
              net.studioblueplanet.tomtomwatch.WorkoutProto.Metadata.Builder subBuilder = null;
              if (((bitField0_ & 0x00000001) != 0)) {
                subBuilder = metadata_.toBuilder();
              }
              metadata_ = input.readMessage(net.studioblueplanet.tomtomwatch.WorkoutProto.Metadata.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(metadata_);
                metadata_ = subBuilder.buildPartial();
              }
              bitField0_ |= 0x00000001;
              break;
            }
            case 66: {
              net.studioblueplanet.tomtomwatch.WorkoutProto.DataContainer.Builder subBuilder = null;
              if (((bitField0_ & 0x00000002) != 0)) {
                subBuilder = dataContainer_.toBuilder();
              }
              dataContainer_ = input.readMessage(net.studioblueplanet.tomtomwatch.WorkoutProto.DataContainer.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(dataContainer_);
                dataContainer_ = subBuilder.buildPartial();
              }
              bitField0_ |= 0x00000002;
              break;
            }
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return net.studioblueplanet.tomtomwatch.WorkoutProto.internal_static_tutorial_RootContainer_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return net.studioblueplanet.tomtomwatch.WorkoutProto.internal_static_tutorial_RootContainer_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              net.studioblueplanet.tomtomwatch.WorkoutProto.RootContainer.class, net.studioblueplanet.tomtomwatch.WorkoutProto.RootContainer.Builder.class);
    }

    private int bitField0_;
    public static final int METADATA_FIELD_NUMBER = 7;
    private net.studioblueplanet.tomtomwatch.WorkoutProto.Metadata metadata_;
    /**
     * <code>optional .tutorial.Metadata metadata = 7;</code>
     */
    public boolean hasMetadata() {
      return ((bitField0_ & 0x00000001) != 0);
    }
    /**
     * <code>optional .tutorial.Metadata metadata = 7;</code>
     */
    public net.studioblueplanet.tomtomwatch.WorkoutProto.Metadata getMetadata() {
      return metadata_ == null ? net.studioblueplanet.tomtomwatch.WorkoutProto.Metadata.getDefaultInstance() : metadata_;
    }
    /**
     * <code>optional .tutorial.Metadata metadata = 7;</code>
     */
    public net.studioblueplanet.tomtomwatch.WorkoutProto.MetadataOrBuilder getMetadataOrBuilder() {
      return metadata_ == null ? net.studioblueplanet.tomtomwatch.WorkoutProto.Metadata.getDefaultInstance() : metadata_;
    }

    public static final int DATACONTAINER_FIELD_NUMBER = 8;
    private net.studioblueplanet.tomtomwatch.WorkoutProto.DataContainer dataContainer_;
    /**
     * <code>optional .tutorial.DataContainer dataContainer = 8;</code>
     */
    public boolean hasDataContainer() {
      return ((bitField0_ & 0x00000002) != 0);
    }
    /**
     * <code>optional .tutorial.DataContainer dataContainer = 8;</code>
     */
    public net.studioblueplanet.tomtomwatch.WorkoutProto.DataContainer getDataContainer() {
      return dataContainer_ == null ? net.studioblueplanet.tomtomwatch.WorkoutProto.DataContainer.getDefaultInstance() : dataContainer_;
    }
    /**
     * <code>optional .tutorial.DataContainer dataContainer = 8;</code>
     */
    public net.studioblueplanet.tomtomwatch.WorkoutProto.DataContainerOrBuilder getDataContainerOrBuilder() {
      return dataContainer_ == null ? net.studioblueplanet.tomtomwatch.WorkoutProto.DataContainer.getDefaultInstance() : dataContainer_;
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      if (hasMetadata()) {
        if (!getMetadata().isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      if (hasDataContainer()) {
        if (!getDataContainer().isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (((bitField0_ & 0x00000001) != 0)) {
        output.writeMessage(7, getMetadata());
      }
      if (((bitField0_ & 0x00000002) != 0)) {
        output.writeMessage(8, getDataContainer());
      }
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(7, getMetadata());
      }
      if (((bitField0_ & 0x00000002) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(8, getDataContainer());
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof net.studioblueplanet.tomtomwatch.WorkoutProto.RootContainer)) {
        return super.equals(obj);
      }
      net.studioblueplanet.tomtomwatch.WorkoutProto.RootContainer other = (net.studioblueplanet.tomtomwatch.WorkoutProto.RootContainer) obj;

      if (hasMetadata() != other.hasMetadata()) return false;
      if (hasMetadata()) {
        if (!getMetadata()
            .equals(other.getMetadata())) return false;
      }
      if (hasDataContainer() != other.hasDataContainer()) return false;
      if (hasDataContainer()) {
        if (!getDataContainer()
            .equals(other.getDataContainer())) return false;
      }
      if (!unknownFields.equals(other.unknownFields)) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (hasMetadata()) {
        hash = (37 * hash) + METADATA_FIELD_NUMBER;
        hash = (53 * hash) + getMetadata().hashCode();
      }
      if (hasDataContainer()) {
        hash = (37 * hash) + DATACONTAINER_FIELD_NUMBER;
        hash = (53 * hash) + getDataContainer().hashCode();
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static net.studioblueplanet.tomtomwatch.WorkoutProto.RootContainer parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static net.studioblueplanet.tomtomwatch.WorkoutProto.RootContainer parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static net.studioblueplanet.tomtomwatch.WorkoutProto.RootContainer parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static net.studioblueplanet.tomtomwatch.WorkoutProto.RootContainer parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static net.studioblueplanet.tomtomwatch.WorkoutProto.RootContainer parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static net.studioblueplanet.tomtomwatch.WorkoutProto.RootContainer parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static net.studioblueplanet.tomtomwatch.WorkoutProto.RootContainer parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static net.studioblueplanet.tomtomwatch.WorkoutProto.RootContainer parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static net.studioblueplanet.tomtomwatch.WorkoutProto.RootContainer parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static net.studioblueplanet.tomtomwatch.WorkoutProto.RootContainer parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static net.studioblueplanet.tomtomwatch.WorkoutProto.RootContainer parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static net.studioblueplanet.tomtomwatch.WorkoutProto.RootContainer parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(net.studioblueplanet.tomtomwatch.WorkoutProto.RootContainer prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code tutorial.RootContainer}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:tutorial.RootContainer)
        net.studioblueplanet.tomtomwatch.WorkoutProto.RootContainerOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return net.studioblueplanet.tomtomwatch.WorkoutProto.internal_static_tutorial_RootContainer_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return net.studioblueplanet.tomtomwatch.WorkoutProto.internal_static_tutorial_RootContainer_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                net.studioblueplanet.tomtomwatch.WorkoutProto.RootContainer.class, net.studioblueplanet.tomtomwatch.WorkoutProto.RootContainer.Builder.class);
      }

      // Construct using net.studioblueplanet.tomtomwatch.WorkoutProto.RootContainer.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
          getMetadataFieldBuilder();
          getDataContainerFieldBuilder();
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        if (metadataBuilder_ == null) {
          metadata_ = null;
        } else {
          metadataBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000001);
        if (dataContainerBuilder_ == null) {
          dataContainer_ = null;
        } else {
          dataContainerBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000002);
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return net.studioblueplanet.tomtomwatch.WorkoutProto.internal_static_tutorial_RootContainer_descriptor;
      }

      @java.lang.Override
      public net.studioblueplanet.tomtomwatch.WorkoutProto.RootContainer getDefaultInstanceForType() {
        return net.studioblueplanet.tomtomwatch.WorkoutProto.RootContainer.getDefaultInstance();
      }

      @java.lang.Override
      public net.studioblueplanet.tomtomwatch.WorkoutProto.RootContainer build() {
        net.studioblueplanet.tomtomwatch.WorkoutProto.RootContainer result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public net.studioblueplanet.tomtomwatch.WorkoutProto.RootContainer buildPartial() {
        net.studioblueplanet.tomtomwatch.WorkoutProto.RootContainer result = new net.studioblueplanet.tomtomwatch.WorkoutProto.RootContainer(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) != 0)) {
          if (metadataBuilder_ == null) {
            result.metadata_ = metadata_;
          } else {
            result.metadata_ = metadataBuilder_.build();
          }
          to_bitField0_ |= 0x00000001;
        }
        if (((from_bitField0_ & 0x00000002) != 0)) {
          if (dataContainerBuilder_ == null) {
            result.dataContainer_ = dataContainer_;
          } else {
            result.dataContainer_ = dataContainerBuilder_.build();
          }
          to_bitField0_ |= 0x00000002;
        }
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof net.studioblueplanet.tomtomwatch.WorkoutProto.RootContainer) {
          return mergeFrom((net.studioblueplanet.tomtomwatch.WorkoutProto.RootContainer)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(net.studioblueplanet.tomtomwatch.WorkoutProto.RootContainer other) {
        if (other == net.studioblueplanet.tomtomwatch.WorkoutProto.RootContainer.getDefaultInstance()) return this;
        if (other.hasMetadata()) {
          mergeMetadata(other.getMetadata());
        }
        if (other.hasDataContainer()) {
          mergeDataContainer(other.getDataContainer());
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        if (hasMetadata()) {
          if (!getMetadata().isInitialized()) {
            return false;
          }
        }
        if (hasDataContainer()) {
          if (!getDataContainer().isInitialized()) {
            return false;
          }
        }
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        net.studioblueplanet.tomtomwatch.WorkoutProto.RootContainer parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (net.studioblueplanet.tomtomwatch.WorkoutProto.RootContainer) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private net.studioblueplanet.tomtomwatch.WorkoutProto.Metadata metadata_;
      private com.google.protobuf.SingleFieldBuilderV3<
          net.studioblueplanet.tomtomwatch.WorkoutProto.Metadata, net.studioblueplanet.tomtomwatch.WorkoutProto.Metadata.Builder, net.studioblueplanet.tomtomwatch.WorkoutProto.MetadataOrBuilder> metadataBuilder_;
      /**
       * <code>optional .tutorial.Metadata metadata = 7;</code>
       */
      public boolean hasMetadata() {
        return ((bitField0_ & 0x00000001) != 0);
      }
      /**
       * <code>optional .tutorial.Metadata metadata = 7;</code>
       */
      public net.studioblueplanet.tomtomwatch.WorkoutProto.Metadata getMetadata() {
        if (metadataBuilder_ == null) {
          return metadata_ == null ? net.studioblueplanet.tomtomwatch.WorkoutProto.Metadata.getDefaultInstance() : metadata_;
        } else {
          return metadataBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .tutorial.Metadata metadata = 7;</code>
       */
      public Builder setMetadata(net.studioblueplanet.tomtomwatch.WorkoutProto.Metadata value) {
        if (metadataBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          metadata_ = value;
          onChanged();
        } else {
          metadataBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000001;
        return this;
      }
      /**
       * <code>optional .tutorial.Metadata metadata = 7;</code>
       */
      public Builder setMetadata(
          net.studioblueplanet.tomtomwatch.WorkoutProto.Metadata.Builder builderForValue) {
        if (metadataBuilder_ == null) {
          metadata_ = builderForValue.build();
          onChanged();
        } else {
          metadataBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000001;
        return this;
      }
      /**
       * <code>optional .tutorial.Metadata metadata = 7;</code>
       */
      public Builder mergeMetadata(net.studioblueplanet.tomtomwatch.WorkoutProto.Metadata value) {
        if (metadataBuilder_ == null) {
          if (((bitField0_ & 0x00000001) != 0) &&
              metadata_ != null &&
              metadata_ != net.studioblueplanet.tomtomwatch.WorkoutProto.Metadata.getDefaultInstance()) {
            metadata_ =
              net.studioblueplanet.tomtomwatch.WorkoutProto.Metadata.newBuilder(metadata_).mergeFrom(value).buildPartial();
          } else {
            metadata_ = value;
          }
          onChanged();
        } else {
          metadataBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000001;
        return this;
      }
      /**
       * <code>optional .tutorial.Metadata metadata = 7;</code>
       */
      public Builder clearMetadata() {
        if (metadataBuilder_ == null) {
          metadata_ = null;
          onChanged();
        } else {
          metadataBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000001);
        return this;
      }
      /**
       * <code>optional .tutorial.Metadata metadata = 7;</code>
       */
      public net.studioblueplanet.tomtomwatch.WorkoutProto.Metadata.Builder getMetadataBuilder() {
        bitField0_ |= 0x00000001;
        onChanged();
        return getMetadataFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .tutorial.Metadata metadata = 7;</code>
       */
      public net.studioblueplanet.tomtomwatch.WorkoutProto.MetadataOrBuilder getMetadataOrBuilder() {
        if (metadataBuilder_ != null) {
          return metadataBuilder_.getMessageOrBuilder();
        } else {
          return metadata_ == null ?
              net.studioblueplanet.tomtomwatch.WorkoutProto.Metadata.getDefaultInstance() : metadata_;
        }
      }
      /**
       * <code>optional .tutorial.Metadata metadata = 7;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          net.studioblueplanet.tomtomwatch.WorkoutProto.Metadata, net.studioblueplanet.tomtomwatch.WorkoutProto.Metadata.Builder, net.studioblueplanet.tomtomwatch.WorkoutProto.MetadataOrBuilder> 
          getMetadataFieldBuilder() {
        if (metadataBuilder_ == null) {
          metadataBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              net.studioblueplanet.tomtomwatch.WorkoutProto.Metadata, net.studioblueplanet.tomtomwatch.WorkoutProto.Metadata.Builder, net.studioblueplanet.tomtomwatch.WorkoutProto.MetadataOrBuilder>(
                  getMetadata(),
                  getParentForChildren(),
                  isClean());
          metadata_ = null;
        }
        return metadataBuilder_;
      }

      private net.studioblueplanet.tomtomwatch.WorkoutProto.DataContainer dataContainer_;
      private com.google.protobuf.SingleFieldBuilderV3<
          net.studioblueplanet.tomtomwatch.WorkoutProto.DataContainer, net.studioblueplanet.tomtomwatch.WorkoutProto.DataContainer.Builder, net.studioblueplanet.tomtomwatch.WorkoutProto.DataContainerOrBuilder> dataContainerBuilder_;
      /**
       * <code>optional .tutorial.DataContainer dataContainer = 8;</code>
       */
      public boolean hasDataContainer() {
        return ((bitField0_ & 0x00000002) != 0);
      }
      /**
       * <code>optional .tutorial.DataContainer dataContainer = 8;</code>
       */
      public net.studioblueplanet.tomtomwatch.WorkoutProto.DataContainer getDataContainer() {
        if (dataContainerBuilder_ == null) {
          return dataContainer_ == null ? net.studioblueplanet.tomtomwatch.WorkoutProto.DataContainer.getDefaultInstance() : dataContainer_;
        } else {
          return dataContainerBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .tutorial.DataContainer dataContainer = 8;</code>
       */
      public Builder setDataContainer(net.studioblueplanet.tomtomwatch.WorkoutProto.DataContainer value) {
        if (dataContainerBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          dataContainer_ = value;
          onChanged();
        } else {
          dataContainerBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000002;
        return this;
      }
      /**
       * <code>optional .tutorial.DataContainer dataContainer = 8;</code>
       */
      public Builder setDataContainer(
          net.studioblueplanet.tomtomwatch.WorkoutProto.DataContainer.Builder builderForValue) {
        if (dataContainerBuilder_ == null) {
          dataContainer_ = builderForValue.build();
          onChanged();
        } else {
          dataContainerBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000002;
        return this;
      }
      /**
       * <code>optional .tutorial.DataContainer dataContainer = 8;</code>
       */
      public Builder mergeDataContainer(net.studioblueplanet.tomtomwatch.WorkoutProto.DataContainer value) {
        if (dataContainerBuilder_ == null) {
          if (((bitField0_ & 0x00000002) != 0) &&
              dataContainer_ != null &&
              dataContainer_ != net.studioblueplanet.tomtomwatch.WorkoutProto.DataContainer.getDefaultInstance()) {
            dataContainer_ =
              net.studioblueplanet.tomtomwatch.WorkoutProto.DataContainer.newBuilder(dataContainer_).mergeFrom(value).buildPartial();
          } else {
            dataContainer_ = value;
          }
          onChanged();
        } else {
          dataContainerBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000002;
        return this;
      }
      /**
       * <code>optional .tutorial.DataContainer dataContainer = 8;</code>
       */
      public Builder clearDataContainer() {
        if (dataContainerBuilder_ == null) {
          dataContainer_ = null;
          onChanged();
        } else {
          dataContainerBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000002);
        return this;
      }
      /**
       * <code>optional .tutorial.DataContainer dataContainer = 8;</code>
       */
      public net.studioblueplanet.tomtomwatch.WorkoutProto.DataContainer.Builder getDataContainerBuilder() {
        bitField0_ |= 0x00000002;
        onChanged();
        return getDataContainerFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .tutorial.DataContainer dataContainer = 8;</code>
       */
      public net.studioblueplanet.tomtomwatch.WorkoutProto.DataContainerOrBuilder getDataContainerOrBuilder() {
        if (dataContainerBuilder_ != null) {
          return dataContainerBuilder_.getMessageOrBuilder();
        } else {
          return dataContainer_ == null ?
              net.studioblueplanet.tomtomwatch.WorkoutProto.DataContainer.getDefaultInstance() : dataContainer_;
        }
      }
      /**
       * <code>optional .tutorial.DataContainer dataContainer = 8;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          net.studioblueplanet.tomtomwatch.WorkoutProto.DataContainer, net.studioblueplanet.tomtomwatch.WorkoutProto.DataContainer.Builder, net.studioblueplanet.tomtomwatch.WorkoutProto.DataContainerOrBuilder> 
          getDataContainerFieldBuilder() {
        if (dataContainerBuilder_ == null) {
          dataContainerBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              net.studioblueplanet.tomtomwatch.WorkoutProto.DataContainer, net.studioblueplanet.tomtomwatch.WorkoutProto.DataContainer.Builder, net.studioblueplanet.tomtomwatch.WorkoutProto.DataContainerOrBuilder>(
                  getDataContainer(),
                  getParentForChildren(),
                  isClean());
          dataContainer_ = null;
        }
        return dataContainerBuilder_;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:tutorial.RootContainer)
    }

    // @@protoc_insertion_point(class_scope:tutorial.RootContainer)
    private static final net.studioblueplanet.tomtomwatch.WorkoutProto.RootContainer DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new net.studioblueplanet.tomtomwatch.WorkoutProto.RootContainer();
    }

    public static net.studioblueplanet.tomtomwatch.WorkoutProto.RootContainer getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    @java.lang.Deprecated public static final com.google.protobuf.Parser<RootContainer>
        PARSER = new com.google.protobuf.AbstractParser<RootContainer>() {
      @java.lang.Override
      public RootContainer parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new RootContainer(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<RootContainer> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<RootContainer> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public net.studioblueplanet.tomtomwatch.WorkoutProto.RootContainer getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface MetadataOrBuilder extends
      // @@protoc_insertion_point(interface_extends:tutorial.Metadata)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     * always 0x1234DAEB
     * </pre>
     *
     * <code>required fixed32 manufacturer = 1;</code>
     */
    boolean hasManufacturer();
    /**
     * <pre>
     * always 0x1234DAEB
     * </pre>
     *
     * <code>required fixed32 manufacturer = 1;</code>
     */
    int getManufacturer();

    /**
     * <pre>
     * always 0x00090100 for 0x00BEnnnn
     * </pre>
     *
     * <code>required fixed32 fileType = 2;</code>
     */
    boolean hasFileType();
    /**
     * <pre>
     * always 0x00090100 for 0x00BEnnnn
     * </pre>
     *
     * <code>required fixed32 fileType = 2;</code>
     */
    int getFileType();
  }
  /**
   * Protobuf type {@code tutorial.Metadata}
   */
  public  static final class Metadata extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:tutorial.Metadata)
      MetadataOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use Metadata.newBuilder() to construct.
    private Metadata(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private Metadata() {
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new Metadata();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private Metadata(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 13: {
              bitField0_ |= 0x00000001;
              manufacturer_ = input.readFixed32();
              break;
            }
            case 21: {
              bitField0_ |= 0x00000002;
              fileType_ = input.readFixed32();
              break;
            }
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return net.studioblueplanet.tomtomwatch.WorkoutProto.internal_static_tutorial_Metadata_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return net.studioblueplanet.tomtomwatch.WorkoutProto.internal_static_tutorial_Metadata_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              net.studioblueplanet.tomtomwatch.WorkoutProto.Metadata.class, net.studioblueplanet.tomtomwatch.WorkoutProto.Metadata.Builder.class);
    }

    private int bitField0_;
    public static final int MANUFACTURER_FIELD_NUMBER = 1;
    private int manufacturer_;
    /**
     * <pre>
     * always 0x1234DAEB
     * </pre>
     *
     * <code>required fixed32 manufacturer = 1;</code>
     */
    public boolean hasManufacturer() {
      return ((bitField0_ & 0x00000001) != 0);
    }
    /**
     * <pre>
     * always 0x1234DAEB
     * </pre>
     *
     * <code>required fixed32 manufacturer = 1;</code>
     */
    public int getManufacturer() {
      return manufacturer_;
    }

    public static final int FILETYPE_FIELD_NUMBER = 2;
    private int fileType_;
    /**
     * <pre>
     * always 0x00090100 for 0x00BEnnnn
     * </pre>
     *
     * <code>required fixed32 fileType = 2;</code>
     */
    public boolean hasFileType() {
      return ((bitField0_ & 0x00000002) != 0);
    }
    /**
     * <pre>
     * always 0x00090100 for 0x00BEnnnn
     * </pre>
     *
     * <code>required fixed32 fileType = 2;</code>
     */
    public int getFileType() {
      return fileType_;
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      if (!hasManufacturer()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasFileType()) {
        memoizedIsInitialized = 0;
        return false;
      }
      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (((bitField0_ & 0x00000001) != 0)) {
        output.writeFixed32(1, manufacturer_);
      }
      if (((bitField0_ & 0x00000002) != 0)) {
        output.writeFixed32(2, fileType_);
      }
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeFixed32Size(1, manufacturer_);
      }
      if (((bitField0_ & 0x00000002) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeFixed32Size(2, fileType_);
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof net.studioblueplanet.tomtomwatch.WorkoutProto.Metadata)) {
        return super.equals(obj);
      }
      net.studioblueplanet.tomtomwatch.WorkoutProto.Metadata other = (net.studioblueplanet.tomtomwatch.WorkoutProto.Metadata) obj;

      if (hasManufacturer() != other.hasManufacturer()) return false;
      if (hasManufacturer()) {
        if (getManufacturer()
            != other.getManufacturer()) return false;
      }
      if (hasFileType() != other.hasFileType()) return false;
      if (hasFileType()) {
        if (getFileType()
            != other.getFileType()) return false;
      }
      if (!unknownFields.equals(other.unknownFields)) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (hasManufacturer()) {
        hash = (37 * hash) + MANUFACTURER_FIELD_NUMBER;
        hash = (53 * hash) + getManufacturer();
      }
      if (hasFileType()) {
        hash = (37 * hash) + FILETYPE_FIELD_NUMBER;
        hash = (53 * hash) + getFileType();
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static net.studioblueplanet.tomtomwatch.WorkoutProto.Metadata parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static net.studioblueplanet.tomtomwatch.WorkoutProto.Metadata parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static net.studioblueplanet.tomtomwatch.WorkoutProto.Metadata parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static net.studioblueplanet.tomtomwatch.WorkoutProto.Metadata parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static net.studioblueplanet.tomtomwatch.WorkoutProto.Metadata parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static net.studioblueplanet.tomtomwatch.WorkoutProto.Metadata parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static net.studioblueplanet.tomtomwatch.WorkoutProto.Metadata parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static net.studioblueplanet.tomtomwatch.WorkoutProto.Metadata parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static net.studioblueplanet.tomtomwatch.WorkoutProto.Metadata parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static net.studioblueplanet.tomtomwatch.WorkoutProto.Metadata parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static net.studioblueplanet.tomtomwatch.WorkoutProto.Metadata parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static net.studioblueplanet.tomtomwatch.WorkoutProto.Metadata parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(net.studioblueplanet.tomtomwatch.WorkoutProto.Metadata prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code tutorial.Metadata}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:tutorial.Metadata)
        net.studioblueplanet.tomtomwatch.WorkoutProto.MetadataOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return net.studioblueplanet.tomtomwatch.WorkoutProto.internal_static_tutorial_Metadata_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return net.studioblueplanet.tomtomwatch.WorkoutProto.internal_static_tutorial_Metadata_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                net.studioblueplanet.tomtomwatch.WorkoutProto.Metadata.class, net.studioblueplanet.tomtomwatch.WorkoutProto.Metadata.Builder.class);
      }

      // Construct using net.studioblueplanet.tomtomwatch.WorkoutProto.Metadata.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        manufacturer_ = 0;
        bitField0_ = (bitField0_ & ~0x00000001);
        fileType_ = 0;
        bitField0_ = (bitField0_ & ~0x00000002);
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return net.studioblueplanet.tomtomwatch.WorkoutProto.internal_static_tutorial_Metadata_descriptor;
      }

      @java.lang.Override
      public net.studioblueplanet.tomtomwatch.WorkoutProto.Metadata getDefaultInstanceForType() {
        return net.studioblueplanet.tomtomwatch.WorkoutProto.Metadata.getDefaultInstance();
      }

      @java.lang.Override
      public net.studioblueplanet.tomtomwatch.WorkoutProto.Metadata build() {
        net.studioblueplanet.tomtomwatch.WorkoutProto.Metadata result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public net.studioblueplanet.tomtomwatch.WorkoutProto.Metadata buildPartial() {
        net.studioblueplanet.tomtomwatch.WorkoutProto.Metadata result = new net.studioblueplanet.tomtomwatch.WorkoutProto.Metadata(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) != 0)) {
          result.manufacturer_ = manufacturer_;
          to_bitField0_ |= 0x00000001;
        }
        if (((from_bitField0_ & 0x00000002) != 0)) {
          result.fileType_ = fileType_;
          to_bitField0_ |= 0x00000002;
        }
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof net.studioblueplanet.tomtomwatch.WorkoutProto.Metadata) {
          return mergeFrom((net.studioblueplanet.tomtomwatch.WorkoutProto.Metadata)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(net.studioblueplanet.tomtomwatch.WorkoutProto.Metadata other) {
        if (other == net.studioblueplanet.tomtomwatch.WorkoutProto.Metadata.getDefaultInstance()) return this;
        if (other.hasManufacturer()) {
          setManufacturer(other.getManufacturer());
        }
        if (other.hasFileType()) {
          setFileType(other.getFileType());
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        if (!hasManufacturer()) {
          return false;
        }
        if (!hasFileType()) {
          return false;
        }
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        net.studioblueplanet.tomtomwatch.WorkoutProto.Metadata parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (net.studioblueplanet.tomtomwatch.WorkoutProto.Metadata) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private int manufacturer_ ;
      /**
       * <pre>
       * always 0x1234DAEB
       * </pre>
       *
       * <code>required fixed32 manufacturer = 1;</code>
       */
      public boolean hasManufacturer() {
        return ((bitField0_ & 0x00000001) != 0);
      }
      /**
       * <pre>
       * always 0x1234DAEB
       * </pre>
       *
       * <code>required fixed32 manufacturer = 1;</code>
       */
      public int getManufacturer() {
        return manufacturer_;
      }
      /**
       * <pre>
       * always 0x1234DAEB
       * </pre>
       *
       * <code>required fixed32 manufacturer = 1;</code>
       */
      public Builder setManufacturer(int value) {
        bitField0_ |= 0x00000001;
        manufacturer_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * always 0x1234DAEB
       * </pre>
       *
       * <code>required fixed32 manufacturer = 1;</code>
       */
      public Builder clearManufacturer() {
        bitField0_ = (bitField0_ & ~0x00000001);
        manufacturer_ = 0;
        onChanged();
        return this;
      }

      private int fileType_ ;
      /**
       * <pre>
       * always 0x00090100 for 0x00BEnnnn
       * </pre>
       *
       * <code>required fixed32 fileType = 2;</code>
       */
      public boolean hasFileType() {
        return ((bitField0_ & 0x00000002) != 0);
      }
      /**
       * <pre>
       * always 0x00090100 for 0x00BEnnnn
       * </pre>
       *
       * <code>required fixed32 fileType = 2;</code>
       */
      public int getFileType() {
        return fileType_;
      }
      /**
       * <pre>
       * always 0x00090100 for 0x00BEnnnn
       * </pre>
       *
       * <code>required fixed32 fileType = 2;</code>
       */
      public Builder setFileType(int value) {
        bitField0_ |= 0x00000002;
        fileType_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * always 0x00090100 for 0x00BEnnnn
       * </pre>
       *
       * <code>required fixed32 fileType = 2;</code>
       */
      public Builder clearFileType() {
        bitField0_ = (bitField0_ & ~0x00000002);
        fileType_ = 0;
        onChanged();
        return this;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:tutorial.Metadata)
    }

    // @@protoc_insertion_point(class_scope:tutorial.Metadata)
    private static final net.studioblueplanet.tomtomwatch.WorkoutProto.Metadata DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new net.studioblueplanet.tomtomwatch.WorkoutProto.Metadata();
    }

    public static net.studioblueplanet.tomtomwatch.WorkoutProto.Metadata getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    @java.lang.Deprecated public static final com.google.protobuf.Parser<Metadata>
        PARSER = new com.google.protobuf.AbstractParser<Metadata>() {
      @java.lang.Override
      public Metadata parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new Metadata(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<Metadata> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<Metadata> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public net.studioblueplanet.tomtomwatch.WorkoutProto.Metadata getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface DataContainerOrBuilder extends
      // @@protoc_insertion_point(interface_extends:tutorial.DataContainer)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>required .tutorial.SubDataContainer subDataContainer = 1;</code>
     */
    boolean hasSubDataContainer();
    /**
     * <code>required .tutorial.SubDataContainer subDataContainer = 1;</code>
     */
    net.studioblueplanet.tomtomwatch.WorkoutProto.SubDataContainer getSubDataContainer();
    /**
     * <code>required .tutorial.SubDataContainer subDataContainer = 1;</code>
     */
    net.studioblueplanet.tomtomwatch.WorkoutProto.SubDataContainerOrBuilder getSubDataContainerOrBuilder();
  }
  /**
   * Protobuf type {@code tutorial.DataContainer}
   */
  public  static final class DataContainer extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:tutorial.DataContainer)
      DataContainerOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use DataContainer.newBuilder() to construct.
    private DataContainer(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private DataContainer() {
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new DataContainer();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private DataContainer(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 10: {
              net.studioblueplanet.tomtomwatch.WorkoutProto.SubDataContainer.Builder subBuilder = null;
              if (((bitField0_ & 0x00000001) != 0)) {
                subBuilder = subDataContainer_.toBuilder();
              }
              subDataContainer_ = input.readMessage(net.studioblueplanet.tomtomwatch.WorkoutProto.SubDataContainer.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(subDataContainer_);
                subDataContainer_ = subBuilder.buildPartial();
              }
              bitField0_ |= 0x00000001;
              break;
            }
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return net.studioblueplanet.tomtomwatch.WorkoutProto.internal_static_tutorial_DataContainer_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return net.studioblueplanet.tomtomwatch.WorkoutProto.internal_static_tutorial_DataContainer_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              net.studioblueplanet.tomtomwatch.WorkoutProto.DataContainer.class, net.studioblueplanet.tomtomwatch.WorkoutProto.DataContainer.Builder.class);
    }

    private int bitField0_;
    public static final int SUBDATACONTAINER_FIELD_NUMBER = 1;
    private net.studioblueplanet.tomtomwatch.WorkoutProto.SubDataContainer subDataContainer_;
    /**
     * <code>required .tutorial.SubDataContainer subDataContainer = 1;</code>
     */
    public boolean hasSubDataContainer() {
      return ((bitField0_ & 0x00000001) != 0);
    }
    /**
     * <code>required .tutorial.SubDataContainer subDataContainer = 1;</code>
     */
    public net.studioblueplanet.tomtomwatch.WorkoutProto.SubDataContainer getSubDataContainer() {
      return subDataContainer_ == null ? net.studioblueplanet.tomtomwatch.WorkoutProto.SubDataContainer.getDefaultInstance() : subDataContainer_;
    }
    /**
     * <code>required .tutorial.SubDataContainer subDataContainer = 1;</code>
     */
    public net.studioblueplanet.tomtomwatch.WorkoutProto.SubDataContainerOrBuilder getSubDataContainerOrBuilder() {
      return subDataContainer_ == null ? net.studioblueplanet.tomtomwatch.WorkoutProto.SubDataContainer.getDefaultInstance() : subDataContainer_;
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      if (!hasSubDataContainer()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!getSubDataContainer().isInitialized()) {
        memoizedIsInitialized = 0;
        return false;
      }
      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (((bitField0_ & 0x00000001) != 0)) {
        output.writeMessage(1, getSubDataContainer());
      }
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, getSubDataContainer());
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof net.studioblueplanet.tomtomwatch.WorkoutProto.DataContainer)) {
        return super.equals(obj);
      }
      net.studioblueplanet.tomtomwatch.WorkoutProto.DataContainer other = (net.studioblueplanet.tomtomwatch.WorkoutProto.DataContainer) obj;

      if (hasSubDataContainer() != other.hasSubDataContainer()) return false;
      if (hasSubDataContainer()) {
        if (!getSubDataContainer()
            .equals(other.getSubDataContainer())) return false;
      }
      if (!unknownFields.equals(other.unknownFields)) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (hasSubDataContainer()) {
        hash = (37 * hash) + SUBDATACONTAINER_FIELD_NUMBER;
        hash = (53 * hash) + getSubDataContainer().hashCode();
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static net.studioblueplanet.tomtomwatch.WorkoutProto.DataContainer parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static net.studioblueplanet.tomtomwatch.WorkoutProto.DataContainer parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static net.studioblueplanet.tomtomwatch.WorkoutProto.DataContainer parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static net.studioblueplanet.tomtomwatch.WorkoutProto.DataContainer parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static net.studioblueplanet.tomtomwatch.WorkoutProto.DataContainer parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static net.studioblueplanet.tomtomwatch.WorkoutProto.DataContainer parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static net.studioblueplanet.tomtomwatch.WorkoutProto.DataContainer parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static net.studioblueplanet.tomtomwatch.WorkoutProto.DataContainer parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static net.studioblueplanet.tomtomwatch.WorkoutProto.DataContainer parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static net.studioblueplanet.tomtomwatch.WorkoutProto.DataContainer parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static net.studioblueplanet.tomtomwatch.WorkoutProto.DataContainer parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static net.studioblueplanet.tomtomwatch.WorkoutProto.DataContainer parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(net.studioblueplanet.tomtomwatch.WorkoutProto.DataContainer prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code tutorial.DataContainer}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:tutorial.DataContainer)
        net.studioblueplanet.tomtomwatch.WorkoutProto.DataContainerOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return net.studioblueplanet.tomtomwatch.WorkoutProto.internal_static_tutorial_DataContainer_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return net.studioblueplanet.tomtomwatch.WorkoutProto.internal_static_tutorial_DataContainer_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                net.studioblueplanet.tomtomwatch.WorkoutProto.DataContainer.class, net.studioblueplanet.tomtomwatch.WorkoutProto.DataContainer.Builder.class);
      }

      // Construct using net.studioblueplanet.tomtomwatch.WorkoutProto.DataContainer.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
          getSubDataContainerFieldBuilder();
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        if (subDataContainerBuilder_ == null) {
          subDataContainer_ = null;
        } else {
          subDataContainerBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000001);
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return net.studioblueplanet.tomtomwatch.WorkoutProto.internal_static_tutorial_DataContainer_descriptor;
      }

      @java.lang.Override
      public net.studioblueplanet.tomtomwatch.WorkoutProto.DataContainer getDefaultInstanceForType() {
        return net.studioblueplanet.tomtomwatch.WorkoutProto.DataContainer.getDefaultInstance();
      }

      @java.lang.Override
      public net.studioblueplanet.tomtomwatch.WorkoutProto.DataContainer build() {
        net.studioblueplanet.tomtomwatch.WorkoutProto.DataContainer result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public net.studioblueplanet.tomtomwatch.WorkoutProto.DataContainer buildPartial() {
        net.studioblueplanet.tomtomwatch.WorkoutProto.DataContainer result = new net.studioblueplanet.tomtomwatch.WorkoutProto.DataContainer(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) != 0)) {
          if (subDataContainerBuilder_ == null) {
            result.subDataContainer_ = subDataContainer_;
          } else {
            result.subDataContainer_ = subDataContainerBuilder_.build();
          }
          to_bitField0_ |= 0x00000001;
        }
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof net.studioblueplanet.tomtomwatch.WorkoutProto.DataContainer) {
          return mergeFrom((net.studioblueplanet.tomtomwatch.WorkoutProto.DataContainer)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(net.studioblueplanet.tomtomwatch.WorkoutProto.DataContainer other) {
        if (other == net.studioblueplanet.tomtomwatch.WorkoutProto.DataContainer.getDefaultInstance()) return this;
        if (other.hasSubDataContainer()) {
          mergeSubDataContainer(other.getSubDataContainer());
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        if (!hasSubDataContainer()) {
          return false;
        }
        if (!getSubDataContainer().isInitialized()) {
          return false;
        }
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        net.studioblueplanet.tomtomwatch.WorkoutProto.DataContainer parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (net.studioblueplanet.tomtomwatch.WorkoutProto.DataContainer) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private net.studioblueplanet.tomtomwatch.WorkoutProto.SubDataContainer subDataContainer_;
      private com.google.protobuf.SingleFieldBuilderV3<
          net.studioblueplanet.tomtomwatch.WorkoutProto.SubDataContainer, net.studioblueplanet.tomtomwatch.WorkoutProto.SubDataContainer.Builder, net.studioblueplanet.tomtomwatch.WorkoutProto.SubDataContainerOrBuilder> subDataContainerBuilder_;
      /**
       * <code>required .tutorial.SubDataContainer subDataContainer = 1;</code>
       */
      public boolean hasSubDataContainer() {
        return ((bitField0_ & 0x00000001) != 0);
      }
      /**
       * <code>required .tutorial.SubDataContainer subDataContainer = 1;</code>
       */
      public net.studioblueplanet.tomtomwatch.WorkoutProto.SubDataContainer getSubDataContainer() {
        if (subDataContainerBuilder_ == null) {
          return subDataContainer_ == null ? net.studioblueplanet.tomtomwatch.WorkoutProto.SubDataContainer.getDefaultInstance() : subDataContainer_;
        } else {
          return subDataContainerBuilder_.getMessage();
        }
      }
      /**
       * <code>required .tutorial.SubDataContainer subDataContainer = 1;</code>
       */
      public Builder setSubDataContainer(net.studioblueplanet.tomtomwatch.WorkoutProto.SubDataContainer value) {
        if (subDataContainerBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          subDataContainer_ = value;
          onChanged();
        } else {
          subDataContainerBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000001;
        return this;
      }
      /**
       * <code>required .tutorial.SubDataContainer subDataContainer = 1;</code>
       */
      public Builder setSubDataContainer(
          net.studioblueplanet.tomtomwatch.WorkoutProto.SubDataContainer.Builder builderForValue) {
        if (subDataContainerBuilder_ == null) {
          subDataContainer_ = builderForValue.build();
          onChanged();
        } else {
          subDataContainerBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000001;
        return this;
      }
      /**
       * <code>required .tutorial.SubDataContainer subDataContainer = 1;</code>
       */
      public Builder mergeSubDataContainer(net.studioblueplanet.tomtomwatch.WorkoutProto.SubDataContainer value) {
        if (subDataContainerBuilder_ == null) {
          if (((bitField0_ & 0x00000001) != 0) &&
              subDataContainer_ != null &&
              subDataContainer_ != net.studioblueplanet.tomtomwatch.WorkoutProto.SubDataContainer.getDefaultInstance()) {
            subDataContainer_ =
              net.studioblueplanet.tomtomwatch.WorkoutProto.SubDataContainer.newBuilder(subDataContainer_).mergeFrom(value).buildPartial();
          } else {
            subDataContainer_ = value;
          }
          onChanged();
        } else {
          subDataContainerBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000001;
        return this;
      }
      /**
       * <code>required .tutorial.SubDataContainer subDataContainer = 1;</code>
       */
      public Builder clearSubDataContainer() {
        if (subDataContainerBuilder_ == null) {
          subDataContainer_ = null;
          onChanged();
        } else {
          subDataContainerBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000001);
        return this;
      }
      /**
       * <code>required .tutorial.SubDataContainer subDataContainer = 1;</code>
       */
      public net.studioblueplanet.tomtomwatch.WorkoutProto.SubDataContainer.Builder getSubDataContainerBuilder() {
        bitField0_ |= 0x00000001;
        onChanged();
        return getSubDataContainerFieldBuilder().getBuilder();
      }
      /**
       * <code>required .tutorial.SubDataContainer subDataContainer = 1;</code>
       */
      public net.studioblueplanet.tomtomwatch.WorkoutProto.SubDataContainerOrBuilder getSubDataContainerOrBuilder() {
        if (subDataContainerBuilder_ != null) {
          return subDataContainerBuilder_.getMessageOrBuilder();
        } else {
          return subDataContainer_ == null ?
              net.studioblueplanet.tomtomwatch.WorkoutProto.SubDataContainer.getDefaultInstance() : subDataContainer_;
        }
      }
      /**
       * <code>required .tutorial.SubDataContainer subDataContainer = 1;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          net.studioblueplanet.tomtomwatch.WorkoutProto.SubDataContainer, net.studioblueplanet.tomtomwatch.WorkoutProto.SubDataContainer.Builder, net.studioblueplanet.tomtomwatch.WorkoutProto.SubDataContainerOrBuilder> 
          getSubDataContainerFieldBuilder() {
        if (subDataContainerBuilder_ == null) {
          subDataContainerBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              net.studioblueplanet.tomtomwatch.WorkoutProto.SubDataContainer, net.studioblueplanet.tomtomwatch.WorkoutProto.SubDataContainer.Builder, net.studioblueplanet.tomtomwatch.WorkoutProto.SubDataContainerOrBuilder>(
                  getSubDataContainer(),
                  getParentForChildren(),
                  isClean());
          subDataContainer_ = null;
        }
        return subDataContainerBuilder_;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:tutorial.DataContainer)
    }

    // @@protoc_insertion_point(class_scope:tutorial.DataContainer)
    private static final net.studioblueplanet.tomtomwatch.WorkoutProto.DataContainer DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new net.studioblueplanet.tomtomwatch.WorkoutProto.DataContainer();
    }

    public static net.studioblueplanet.tomtomwatch.WorkoutProto.DataContainer getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    @java.lang.Deprecated public static final com.google.protobuf.Parser<DataContainer>
        PARSER = new com.google.protobuf.AbstractParser<DataContainer>() {
      @java.lang.Override
      public DataContainer parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new DataContainer(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<DataContainer> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<DataContainer> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public net.studioblueplanet.tomtomwatch.WorkoutProto.DataContainer getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface SubDataContainerOrBuilder extends
      // @@protoc_insertion_point(interface_extends:tutorial.SubDataContainer)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>repeated .tutorial.Description description = 4;</code>
     */
    java.util.List<net.studioblueplanet.tomtomwatch.WorkoutProto.Description> 
        getDescriptionList();
    /**
     * <code>repeated .tutorial.Description description = 4;</code>
     */
    net.studioblueplanet.tomtomwatch.WorkoutProto.Description getDescription(int index);
    /**
     * <code>repeated .tutorial.Description description = 4;</code>
     */
    int getDescriptionCount();
    /**
     * <code>repeated .tutorial.Description description = 4;</code>
     */
    java.util.List<? extends net.studioblueplanet.tomtomwatch.WorkoutProto.DescriptionOrBuilder> 
        getDescriptionOrBuilderList();
    /**
     * <code>repeated .tutorial.Description description = 4;</code>
     */
    net.studioblueplanet.tomtomwatch.WorkoutProto.DescriptionOrBuilder getDescriptionOrBuilder(
        int index);

    /**
     * <code>required .tutorial.Program program = 7;</code>
     */
    boolean hasProgram();
    /**
     * <code>required .tutorial.Program program = 7;</code>
     */
    net.studioblueplanet.tomtomwatch.WorkoutProto.Program getProgram();
    /**
     * <code>required .tutorial.Program program = 7;</code>
     */
    net.studioblueplanet.tomtomwatch.WorkoutProto.ProgramOrBuilder getProgramOrBuilder();
  }
  /**
   * Protobuf type {@code tutorial.SubDataContainer}
   */
  public  static final class SubDataContainer extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:tutorial.SubDataContainer)
      SubDataContainerOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use SubDataContainer.newBuilder() to construct.
    private SubDataContainer(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private SubDataContainer() {
      description_ = java.util.Collections.emptyList();
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new SubDataContainer();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private SubDataContainer(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 34: {
              if (!((mutable_bitField0_ & 0x00000001) != 0)) {
                description_ = new java.util.ArrayList<net.studioblueplanet.tomtomwatch.WorkoutProto.Description>();
                mutable_bitField0_ |= 0x00000001;
              }
              description_.add(
                  input.readMessage(net.studioblueplanet.tomtomwatch.WorkoutProto.Description.PARSER, extensionRegistry));
              break;
            }
            case 58: {
              net.studioblueplanet.tomtomwatch.WorkoutProto.Program.Builder subBuilder = null;
              if (((bitField0_ & 0x00000001) != 0)) {
                subBuilder = program_.toBuilder();
              }
              program_ = input.readMessage(net.studioblueplanet.tomtomwatch.WorkoutProto.Program.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(program_);
                program_ = subBuilder.buildPartial();
              }
              bitField0_ |= 0x00000001;
              break;
            }
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000001) != 0)) {
          description_ = java.util.Collections.unmodifiableList(description_);
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return net.studioblueplanet.tomtomwatch.WorkoutProto.internal_static_tutorial_SubDataContainer_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return net.studioblueplanet.tomtomwatch.WorkoutProto.internal_static_tutorial_SubDataContainer_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              net.studioblueplanet.tomtomwatch.WorkoutProto.SubDataContainer.class, net.studioblueplanet.tomtomwatch.WorkoutProto.SubDataContainer.Builder.class);
    }

    private int bitField0_;
    public static final int DESCRIPTION_FIELD_NUMBER = 4;
    private java.util.List<net.studioblueplanet.tomtomwatch.WorkoutProto.Description> description_;
    /**
     * <code>repeated .tutorial.Description description = 4;</code>
     */
    public java.util.List<net.studioblueplanet.tomtomwatch.WorkoutProto.Description> getDescriptionList() {
      return description_;
    }
    /**
     * <code>repeated .tutorial.Description description = 4;</code>
     */
    public java.util.List<? extends net.studioblueplanet.tomtomwatch.WorkoutProto.DescriptionOrBuilder> 
        getDescriptionOrBuilderList() {
      return description_;
    }
    /**
     * <code>repeated .tutorial.Description description = 4;</code>
     */
    public int getDescriptionCount() {
      return description_.size();
    }
    /**
     * <code>repeated .tutorial.Description description = 4;</code>
     */
    public net.studioblueplanet.tomtomwatch.WorkoutProto.Description getDescription(int index) {
      return description_.get(index);
    }
    /**
     * <code>repeated .tutorial.Description description = 4;</code>
     */
    public net.studioblueplanet.tomtomwatch.WorkoutProto.DescriptionOrBuilder getDescriptionOrBuilder(
        int index) {
      return description_.get(index);
    }

    public static final int PROGRAM_FIELD_NUMBER = 7;
    private net.studioblueplanet.tomtomwatch.WorkoutProto.Program program_;
    /**
     * <code>required .tutorial.Program program = 7;</code>
     */
    public boolean hasProgram() {
      return ((bitField0_ & 0x00000001) != 0);
    }
    /**
     * <code>required .tutorial.Program program = 7;</code>
     */
    public net.studioblueplanet.tomtomwatch.WorkoutProto.Program getProgram() {
      return program_ == null ? net.studioblueplanet.tomtomwatch.WorkoutProto.Program.getDefaultInstance() : program_;
    }
    /**
     * <code>required .tutorial.Program program = 7;</code>
     */
    public net.studioblueplanet.tomtomwatch.WorkoutProto.ProgramOrBuilder getProgramOrBuilder() {
      return program_ == null ? net.studioblueplanet.tomtomwatch.WorkoutProto.Program.getDefaultInstance() : program_;
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      if (!hasProgram()) {
        memoizedIsInitialized = 0;
        return false;
      }
      for (int i = 0; i < getDescriptionCount(); i++) {
        if (!getDescription(i).isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      if (!getProgram().isInitialized()) {
        memoizedIsInitialized = 0;
        return false;
      }
      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      for (int i = 0; i < description_.size(); i++) {
        output.writeMessage(4, description_.get(i));
      }
      if (((bitField0_ & 0x00000001) != 0)) {
        output.writeMessage(7, getProgram());
      }
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      for (int i = 0; i < description_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(4, description_.get(i));
      }
      if (((bitField0_ & 0x00000001) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(7, getProgram());
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof net.studioblueplanet.tomtomwatch.WorkoutProto.SubDataContainer)) {
        return super.equals(obj);
      }
      net.studioblueplanet.tomtomwatch.WorkoutProto.SubDataContainer other = (net.studioblueplanet.tomtomwatch.WorkoutProto.SubDataContainer) obj;

      if (!getDescriptionList()
          .equals(other.getDescriptionList())) return false;
      if (hasProgram() != other.hasProgram()) return false;
      if (hasProgram()) {
        if (!getProgram()
            .equals(other.getProgram())) return false;
      }
      if (!unknownFields.equals(other.unknownFields)) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (getDescriptionCount() > 0) {
        hash = (37 * hash) + DESCRIPTION_FIELD_NUMBER;
        hash = (53 * hash) + getDescriptionList().hashCode();
      }
      if (hasProgram()) {
        hash = (37 * hash) + PROGRAM_FIELD_NUMBER;
        hash = (53 * hash) + getProgram().hashCode();
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static net.studioblueplanet.tomtomwatch.WorkoutProto.SubDataContainer parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static net.studioblueplanet.tomtomwatch.WorkoutProto.SubDataContainer parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static net.studioblueplanet.tomtomwatch.WorkoutProto.SubDataContainer parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static net.studioblueplanet.tomtomwatch.WorkoutProto.SubDataContainer parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static net.studioblueplanet.tomtomwatch.WorkoutProto.SubDataContainer parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static net.studioblueplanet.tomtomwatch.WorkoutProto.SubDataContainer parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static net.studioblueplanet.tomtomwatch.WorkoutProto.SubDataContainer parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static net.studioblueplanet.tomtomwatch.WorkoutProto.SubDataContainer parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static net.studioblueplanet.tomtomwatch.WorkoutProto.SubDataContainer parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static net.studioblueplanet.tomtomwatch.WorkoutProto.SubDataContainer parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static net.studioblueplanet.tomtomwatch.WorkoutProto.SubDataContainer parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static net.studioblueplanet.tomtomwatch.WorkoutProto.SubDataContainer parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(net.studioblueplanet.tomtomwatch.WorkoutProto.SubDataContainer prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code tutorial.SubDataContainer}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:tutorial.SubDataContainer)
        net.studioblueplanet.tomtomwatch.WorkoutProto.SubDataContainerOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return net.studioblueplanet.tomtomwatch.WorkoutProto.internal_static_tutorial_SubDataContainer_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return net.studioblueplanet.tomtomwatch.WorkoutProto.internal_static_tutorial_SubDataContainer_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                net.studioblueplanet.tomtomwatch.WorkoutProto.SubDataContainer.class, net.studioblueplanet.tomtomwatch.WorkoutProto.SubDataContainer.Builder.class);
      }

      // Construct using net.studioblueplanet.tomtomwatch.WorkoutProto.SubDataContainer.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
          getDescriptionFieldBuilder();
          getProgramFieldBuilder();
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        if (descriptionBuilder_ == null) {
          description_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000001);
        } else {
          descriptionBuilder_.clear();
        }
        if (programBuilder_ == null) {
          program_ = null;
        } else {
          programBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000002);
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return net.studioblueplanet.tomtomwatch.WorkoutProto.internal_static_tutorial_SubDataContainer_descriptor;
      }

      @java.lang.Override
      public net.studioblueplanet.tomtomwatch.WorkoutProto.SubDataContainer getDefaultInstanceForType() {
        return net.studioblueplanet.tomtomwatch.WorkoutProto.SubDataContainer.getDefaultInstance();
      }

      @java.lang.Override
      public net.studioblueplanet.tomtomwatch.WorkoutProto.SubDataContainer build() {
        net.studioblueplanet.tomtomwatch.WorkoutProto.SubDataContainer result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public net.studioblueplanet.tomtomwatch.WorkoutProto.SubDataContainer buildPartial() {
        net.studioblueplanet.tomtomwatch.WorkoutProto.SubDataContainer result = new net.studioblueplanet.tomtomwatch.WorkoutProto.SubDataContainer(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (descriptionBuilder_ == null) {
          if (((bitField0_ & 0x00000001) != 0)) {
            description_ = java.util.Collections.unmodifiableList(description_);
            bitField0_ = (bitField0_ & ~0x00000001);
          }
          result.description_ = description_;
        } else {
          result.description_ = descriptionBuilder_.build();
        }
        if (((from_bitField0_ & 0x00000002) != 0)) {
          if (programBuilder_ == null) {
            result.program_ = program_;
          } else {
            result.program_ = programBuilder_.build();
          }
          to_bitField0_ |= 0x00000001;
        }
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof net.studioblueplanet.tomtomwatch.WorkoutProto.SubDataContainer) {
          return mergeFrom((net.studioblueplanet.tomtomwatch.WorkoutProto.SubDataContainer)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(net.studioblueplanet.tomtomwatch.WorkoutProto.SubDataContainer other) {
        if (other == net.studioblueplanet.tomtomwatch.WorkoutProto.SubDataContainer.getDefaultInstance()) return this;
        if (descriptionBuilder_ == null) {
          if (!other.description_.isEmpty()) {
            if (description_.isEmpty()) {
              description_ = other.description_;
              bitField0_ = (bitField0_ & ~0x00000001);
            } else {
              ensureDescriptionIsMutable();
              description_.addAll(other.description_);
            }
            onChanged();
          }
        } else {
          if (!other.description_.isEmpty()) {
            if (descriptionBuilder_.isEmpty()) {
              descriptionBuilder_.dispose();
              descriptionBuilder_ = null;
              description_ = other.description_;
              bitField0_ = (bitField0_ & ~0x00000001);
              descriptionBuilder_ = 
                com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                   getDescriptionFieldBuilder() : null;
            } else {
              descriptionBuilder_.addAllMessages(other.description_);
            }
          }
        }
        if (other.hasProgram()) {
          mergeProgram(other.getProgram());
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        if (!hasProgram()) {
          return false;
        }
        for (int i = 0; i < getDescriptionCount(); i++) {
          if (!getDescription(i).isInitialized()) {
            return false;
          }
        }
        if (!getProgram().isInitialized()) {
          return false;
        }
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        net.studioblueplanet.tomtomwatch.WorkoutProto.SubDataContainer parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (net.studioblueplanet.tomtomwatch.WorkoutProto.SubDataContainer) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private java.util.List<net.studioblueplanet.tomtomwatch.WorkoutProto.Description> description_ =
        java.util.Collections.emptyList();
      private void ensureDescriptionIsMutable() {
        if (!((bitField0_ & 0x00000001) != 0)) {
          description_ = new java.util.ArrayList<net.studioblueplanet.tomtomwatch.WorkoutProto.Description>(description_);
          bitField0_ |= 0x00000001;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilderV3<
          net.studioblueplanet.tomtomwatch.WorkoutProto.Description, net.studioblueplanet.tomtomwatch.WorkoutProto.Description.Builder, net.studioblueplanet.tomtomwatch.WorkoutProto.DescriptionOrBuilder> descriptionBuilder_;

      /**
       * <code>repeated .tutorial.Description description = 4;</code>
       */
      public java.util.List<net.studioblueplanet.tomtomwatch.WorkoutProto.Description> getDescriptionList() {
        if (descriptionBuilder_ == null) {
          return java.util.Collections.unmodifiableList(description_);
        } else {
          return descriptionBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .tutorial.Description description = 4;</code>
       */
      public int getDescriptionCount() {
        if (descriptionBuilder_ == null) {
          return description_.size();
        } else {
          return descriptionBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .tutorial.Description description = 4;</code>
       */
      public net.studioblueplanet.tomtomwatch.WorkoutProto.Description getDescription(int index) {
        if (descriptionBuilder_ == null) {
          return description_.get(index);
        } else {
          return descriptionBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .tutorial.Description description = 4;</code>
       */
      public Builder setDescription(
          int index, net.studioblueplanet.tomtomwatch.WorkoutProto.Description value) {
        if (descriptionBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureDescriptionIsMutable();
          description_.set(index, value);
          onChanged();
        } else {
          descriptionBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .tutorial.Description description = 4;</code>
       */
      public Builder setDescription(
          int index, net.studioblueplanet.tomtomwatch.WorkoutProto.Description.Builder builderForValue) {
        if (descriptionBuilder_ == null) {
          ensureDescriptionIsMutable();
          description_.set(index, builderForValue.build());
          onChanged();
        } else {
          descriptionBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .tutorial.Description description = 4;</code>
       */
      public Builder addDescription(net.studioblueplanet.tomtomwatch.WorkoutProto.Description value) {
        if (descriptionBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureDescriptionIsMutable();
          description_.add(value);
          onChanged();
        } else {
          descriptionBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .tutorial.Description description = 4;</code>
       */
      public Builder addDescription(
          int index, net.studioblueplanet.tomtomwatch.WorkoutProto.Description value) {
        if (descriptionBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureDescriptionIsMutable();
          description_.add(index, value);
          onChanged();
        } else {
          descriptionBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .tutorial.Description description = 4;</code>
       */
      public Builder addDescription(
          net.studioblueplanet.tomtomwatch.WorkoutProto.Description.Builder builderForValue) {
        if (descriptionBuilder_ == null) {
          ensureDescriptionIsMutable();
          description_.add(builderForValue.build());
          onChanged();
        } else {
          descriptionBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .tutorial.Description description = 4;</code>
       */
      public Builder addDescription(
          int index, net.studioblueplanet.tomtomwatch.WorkoutProto.Description.Builder builderForValue) {
        if (descriptionBuilder_ == null) {
          ensureDescriptionIsMutable();
          description_.add(index, builderForValue.build());
          onChanged();
        } else {
          descriptionBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .tutorial.Description description = 4;</code>
       */
      public Builder addAllDescription(
          java.lang.Iterable<? extends net.studioblueplanet.tomtomwatch.WorkoutProto.Description> values) {
        if (descriptionBuilder_ == null) {
          ensureDescriptionIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, description_);
          onChanged();
        } else {
          descriptionBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .tutorial.Description description = 4;</code>
       */
      public Builder clearDescription() {
        if (descriptionBuilder_ == null) {
          description_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000001);
          onChanged();
        } else {
          descriptionBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .tutorial.Description description = 4;</code>
       */
      public Builder removeDescription(int index) {
        if (descriptionBuilder_ == null) {
          ensureDescriptionIsMutable();
          description_.remove(index);
          onChanged();
        } else {
          descriptionBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .tutorial.Description description = 4;</code>
       */
      public net.studioblueplanet.tomtomwatch.WorkoutProto.Description.Builder getDescriptionBuilder(
          int index) {
        return getDescriptionFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .tutorial.Description description = 4;</code>
       */
      public net.studioblueplanet.tomtomwatch.WorkoutProto.DescriptionOrBuilder getDescriptionOrBuilder(
          int index) {
        if (descriptionBuilder_ == null) {
          return description_.get(index);  } else {
          return descriptionBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .tutorial.Description description = 4;</code>
       */
      public java.util.List<? extends net.studioblueplanet.tomtomwatch.WorkoutProto.DescriptionOrBuilder> 
           getDescriptionOrBuilderList() {
        if (descriptionBuilder_ != null) {
          return descriptionBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(description_);
        }
      }
      /**
       * <code>repeated .tutorial.Description description = 4;</code>
       */
      public net.studioblueplanet.tomtomwatch.WorkoutProto.Description.Builder addDescriptionBuilder() {
        return getDescriptionFieldBuilder().addBuilder(
            net.studioblueplanet.tomtomwatch.WorkoutProto.Description.getDefaultInstance());
      }
      /**
       * <code>repeated .tutorial.Description description = 4;</code>
       */
      public net.studioblueplanet.tomtomwatch.WorkoutProto.Description.Builder addDescriptionBuilder(
          int index) {
        return getDescriptionFieldBuilder().addBuilder(
            index, net.studioblueplanet.tomtomwatch.WorkoutProto.Description.getDefaultInstance());
      }
      /**
       * <code>repeated .tutorial.Description description = 4;</code>
       */
      public java.util.List<net.studioblueplanet.tomtomwatch.WorkoutProto.Description.Builder> 
           getDescriptionBuilderList() {
        return getDescriptionFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilderV3<
          net.studioblueplanet.tomtomwatch.WorkoutProto.Description, net.studioblueplanet.tomtomwatch.WorkoutProto.Description.Builder, net.studioblueplanet.tomtomwatch.WorkoutProto.DescriptionOrBuilder> 
          getDescriptionFieldBuilder() {
        if (descriptionBuilder_ == null) {
          descriptionBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
              net.studioblueplanet.tomtomwatch.WorkoutProto.Description, net.studioblueplanet.tomtomwatch.WorkoutProto.Description.Builder, net.studioblueplanet.tomtomwatch.WorkoutProto.DescriptionOrBuilder>(
                  description_,
                  ((bitField0_ & 0x00000001) != 0),
                  getParentForChildren(),
                  isClean());
          description_ = null;
        }
        return descriptionBuilder_;
      }

      private net.studioblueplanet.tomtomwatch.WorkoutProto.Program program_;
      private com.google.protobuf.SingleFieldBuilderV3<
          net.studioblueplanet.tomtomwatch.WorkoutProto.Program, net.studioblueplanet.tomtomwatch.WorkoutProto.Program.Builder, net.studioblueplanet.tomtomwatch.WorkoutProto.ProgramOrBuilder> programBuilder_;
      /**
       * <code>required .tutorial.Program program = 7;</code>
       */
      public boolean hasProgram() {
        return ((bitField0_ & 0x00000002) != 0);
      }
      /**
       * <code>required .tutorial.Program program = 7;</code>
       */
      public net.studioblueplanet.tomtomwatch.WorkoutProto.Program getProgram() {
        if (programBuilder_ == null) {
          return program_ == null ? net.studioblueplanet.tomtomwatch.WorkoutProto.Program.getDefaultInstance() : program_;
        } else {
          return programBuilder_.getMessage();
        }
      }
      /**
       * <code>required .tutorial.Program program = 7;</code>
       */
      public Builder setProgram(net.studioblueplanet.tomtomwatch.WorkoutProto.Program value) {
        if (programBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          program_ = value;
          onChanged();
        } else {
          programBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000002;
        return this;
      }
      /**
       * <code>required .tutorial.Program program = 7;</code>
       */
      public Builder setProgram(
          net.studioblueplanet.tomtomwatch.WorkoutProto.Program.Builder builderForValue) {
        if (programBuilder_ == null) {
          program_ = builderForValue.build();
          onChanged();
        } else {
          programBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000002;
        return this;
      }
      /**
       * <code>required .tutorial.Program program = 7;</code>
       */
      public Builder mergeProgram(net.studioblueplanet.tomtomwatch.WorkoutProto.Program value) {
        if (programBuilder_ == null) {
          if (((bitField0_ & 0x00000002) != 0) &&
              program_ != null &&
              program_ != net.studioblueplanet.tomtomwatch.WorkoutProto.Program.getDefaultInstance()) {
            program_ =
              net.studioblueplanet.tomtomwatch.WorkoutProto.Program.newBuilder(program_).mergeFrom(value).buildPartial();
          } else {
            program_ = value;
          }
          onChanged();
        } else {
          programBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000002;
        return this;
      }
      /**
       * <code>required .tutorial.Program program = 7;</code>
       */
      public Builder clearProgram() {
        if (programBuilder_ == null) {
          program_ = null;
          onChanged();
        } else {
          programBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000002);
        return this;
      }
      /**
       * <code>required .tutorial.Program program = 7;</code>
       */
      public net.studioblueplanet.tomtomwatch.WorkoutProto.Program.Builder getProgramBuilder() {
        bitField0_ |= 0x00000002;
        onChanged();
        return getProgramFieldBuilder().getBuilder();
      }
      /**
       * <code>required .tutorial.Program program = 7;</code>
       */
      public net.studioblueplanet.tomtomwatch.WorkoutProto.ProgramOrBuilder getProgramOrBuilder() {
        if (programBuilder_ != null) {
          return programBuilder_.getMessageOrBuilder();
        } else {
          return program_ == null ?
              net.studioblueplanet.tomtomwatch.WorkoutProto.Program.getDefaultInstance() : program_;
        }
      }
      /**
       * <code>required .tutorial.Program program = 7;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          net.studioblueplanet.tomtomwatch.WorkoutProto.Program, net.studioblueplanet.tomtomwatch.WorkoutProto.Program.Builder, net.studioblueplanet.tomtomwatch.WorkoutProto.ProgramOrBuilder> 
          getProgramFieldBuilder() {
        if (programBuilder_ == null) {
          programBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              net.studioblueplanet.tomtomwatch.WorkoutProto.Program, net.studioblueplanet.tomtomwatch.WorkoutProto.Program.Builder, net.studioblueplanet.tomtomwatch.WorkoutProto.ProgramOrBuilder>(
                  getProgram(),
                  getParentForChildren(),
                  isClean());
          program_ = null;
        }
        return programBuilder_;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:tutorial.SubDataContainer)
    }

    // @@protoc_insertion_point(class_scope:tutorial.SubDataContainer)
    private static final net.studioblueplanet.tomtomwatch.WorkoutProto.SubDataContainer DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new net.studioblueplanet.tomtomwatch.WorkoutProto.SubDataContainer();
    }

    public static net.studioblueplanet.tomtomwatch.WorkoutProto.SubDataContainer getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    @java.lang.Deprecated public static final com.google.protobuf.Parser<SubDataContainer>
        PARSER = new com.google.protobuf.AbstractParser<SubDataContainer>() {
      @java.lang.Override
      public SubDataContainer parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new SubDataContainer(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<SubDataContainer> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<SubDataContainer> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public net.studioblueplanet.tomtomwatch.WorkoutProto.SubDataContainer getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface DescriptionOrBuilder extends
      // @@protoc_insertion_point(interface_extends:tutorial.Description)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     * 0=workout name, 1=workout description, &gt;=2 are stages referred to from the program
     * </pre>
     *
     * <code>required int32 id = 1;</code>
     */
    boolean hasId();
    /**
     * <pre>
     * 0=workout name, 1=workout description, &gt;=2 are stages referred to from the program
     * </pre>
     *
     * <code>required int32 id = 1;</code>
     */
    int getId();

    /**
     * <pre>
     * Name/description of the workout/stage
     * </pre>
     *
     * <code>required string description = 2;</code>
     */
    boolean hasDescription();
    /**
     * <pre>
     * Name/description of the workout/stage
     * </pre>
     *
     * <code>required string description = 2;</code>
     */
    java.lang.String getDescription();
    /**
     * <pre>
     * Name/description of the workout/stage
     * </pre>
     *
     * <code>required string description = 2;</code>
     */
    com.google.protobuf.ByteString
        getDescriptionBytes();
  }
  /**
   * <pre>
   *#################################################################################################
   * 4th level: descriptions used in the program
   *#################################################################################################
   * </pre>
   *
   * Protobuf type {@code tutorial.Description}
   */
  public  static final class Description extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:tutorial.Description)
      DescriptionOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use Description.newBuilder() to construct.
    private Description(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private Description() {
      description_ = "";
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new Description();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private Description(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 8: {
              bitField0_ |= 0x00000001;
              id_ = input.readInt32();
              break;
            }
            case 18: {
              com.google.protobuf.ByteString bs = input.readBytes();
              bitField0_ |= 0x00000002;
              description_ = bs;
              break;
            }
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return net.studioblueplanet.tomtomwatch.WorkoutProto.internal_static_tutorial_Description_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return net.studioblueplanet.tomtomwatch.WorkoutProto.internal_static_tutorial_Description_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              net.studioblueplanet.tomtomwatch.WorkoutProto.Description.class, net.studioblueplanet.tomtomwatch.WorkoutProto.Description.Builder.class);
    }

    private int bitField0_;
    public static final int ID_FIELD_NUMBER = 1;
    private int id_;
    /**
     * <pre>
     * 0=workout name, 1=workout description, &gt;=2 are stages referred to from the program
     * </pre>
     *
     * <code>required int32 id = 1;</code>
     */
    public boolean hasId() {
      return ((bitField0_ & 0x00000001) != 0);
    }
    /**
     * <pre>
     * 0=workout name, 1=workout description, &gt;=2 are stages referred to from the program
     * </pre>
     *
     * <code>required int32 id = 1;</code>
     */
    public int getId() {
      return id_;
    }

    public static final int DESCRIPTION_FIELD_NUMBER = 2;
    private volatile java.lang.Object description_;
    /**
     * <pre>
     * Name/description of the workout/stage
     * </pre>
     *
     * <code>required string description = 2;</code>
     */
    public boolean hasDescription() {
      return ((bitField0_ & 0x00000002) != 0);
    }
    /**
     * <pre>
     * Name/description of the workout/stage
     * </pre>
     *
     * <code>required string description = 2;</code>
     */
    public java.lang.String getDescription() {
      java.lang.Object ref = description_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          description_ = s;
        }
        return s;
      }
    }
    /**
     * <pre>
     * Name/description of the workout/stage
     * </pre>
     *
     * <code>required string description = 2;</code>
     */
    public com.google.protobuf.ByteString
        getDescriptionBytes() {
      java.lang.Object ref = description_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        description_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      if (!hasId()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasDescription()) {
        memoizedIsInitialized = 0;
        return false;
      }
      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (((bitField0_ & 0x00000001) != 0)) {
        output.writeInt32(1, id_);
      }
      if (((bitField0_ & 0x00000002) != 0)) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 2, description_);
      }
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(1, id_);
      }
      if (((bitField0_ & 0x00000002) != 0)) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(2, description_);
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof net.studioblueplanet.tomtomwatch.WorkoutProto.Description)) {
        return super.equals(obj);
      }
      net.studioblueplanet.tomtomwatch.WorkoutProto.Description other = (net.studioblueplanet.tomtomwatch.WorkoutProto.Description) obj;

      if (hasId() != other.hasId()) return false;
      if (hasId()) {
        if (getId()
            != other.getId()) return false;
      }
      if (hasDescription() != other.hasDescription()) return false;
      if (hasDescription()) {
        if (!getDescription()
            .equals(other.getDescription())) return false;
      }
      if (!unknownFields.equals(other.unknownFields)) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (hasId()) {
        hash = (37 * hash) + ID_FIELD_NUMBER;
        hash = (53 * hash) + getId();
      }
      if (hasDescription()) {
        hash = (37 * hash) + DESCRIPTION_FIELD_NUMBER;
        hash = (53 * hash) + getDescription().hashCode();
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static net.studioblueplanet.tomtomwatch.WorkoutProto.Description parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static net.studioblueplanet.tomtomwatch.WorkoutProto.Description parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static net.studioblueplanet.tomtomwatch.WorkoutProto.Description parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static net.studioblueplanet.tomtomwatch.WorkoutProto.Description parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static net.studioblueplanet.tomtomwatch.WorkoutProto.Description parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static net.studioblueplanet.tomtomwatch.WorkoutProto.Description parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static net.studioblueplanet.tomtomwatch.WorkoutProto.Description parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static net.studioblueplanet.tomtomwatch.WorkoutProto.Description parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static net.studioblueplanet.tomtomwatch.WorkoutProto.Description parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static net.studioblueplanet.tomtomwatch.WorkoutProto.Description parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static net.studioblueplanet.tomtomwatch.WorkoutProto.Description parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static net.studioblueplanet.tomtomwatch.WorkoutProto.Description parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(net.studioblueplanet.tomtomwatch.WorkoutProto.Description prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     *#################################################################################################
     * 4th level: descriptions used in the program
     *#################################################################################################
     * </pre>
     *
     * Protobuf type {@code tutorial.Description}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:tutorial.Description)
        net.studioblueplanet.tomtomwatch.WorkoutProto.DescriptionOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return net.studioblueplanet.tomtomwatch.WorkoutProto.internal_static_tutorial_Description_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return net.studioblueplanet.tomtomwatch.WorkoutProto.internal_static_tutorial_Description_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                net.studioblueplanet.tomtomwatch.WorkoutProto.Description.class, net.studioblueplanet.tomtomwatch.WorkoutProto.Description.Builder.class);
      }

      // Construct using net.studioblueplanet.tomtomwatch.WorkoutProto.Description.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        id_ = 0;
        bitField0_ = (bitField0_ & ~0x00000001);
        description_ = "";
        bitField0_ = (bitField0_ & ~0x00000002);
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return net.studioblueplanet.tomtomwatch.WorkoutProto.internal_static_tutorial_Description_descriptor;
      }

      @java.lang.Override
      public net.studioblueplanet.tomtomwatch.WorkoutProto.Description getDefaultInstanceForType() {
        return net.studioblueplanet.tomtomwatch.WorkoutProto.Description.getDefaultInstance();
      }

      @java.lang.Override
      public net.studioblueplanet.tomtomwatch.WorkoutProto.Description build() {
        net.studioblueplanet.tomtomwatch.WorkoutProto.Description result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public net.studioblueplanet.tomtomwatch.WorkoutProto.Description buildPartial() {
        net.studioblueplanet.tomtomwatch.WorkoutProto.Description result = new net.studioblueplanet.tomtomwatch.WorkoutProto.Description(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) != 0)) {
          result.id_ = id_;
          to_bitField0_ |= 0x00000001;
        }
        if (((from_bitField0_ & 0x00000002) != 0)) {
          to_bitField0_ |= 0x00000002;
        }
        result.description_ = description_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof net.studioblueplanet.tomtomwatch.WorkoutProto.Description) {
          return mergeFrom((net.studioblueplanet.tomtomwatch.WorkoutProto.Description)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(net.studioblueplanet.tomtomwatch.WorkoutProto.Description other) {
        if (other == net.studioblueplanet.tomtomwatch.WorkoutProto.Description.getDefaultInstance()) return this;
        if (other.hasId()) {
          setId(other.getId());
        }
        if (other.hasDescription()) {
          bitField0_ |= 0x00000002;
          description_ = other.description_;
          onChanged();
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        if (!hasId()) {
          return false;
        }
        if (!hasDescription()) {
          return false;
        }
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        net.studioblueplanet.tomtomwatch.WorkoutProto.Description parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (net.studioblueplanet.tomtomwatch.WorkoutProto.Description) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private int id_ ;
      /**
       * <pre>
       * 0=workout name, 1=workout description, &gt;=2 are stages referred to from the program
       * </pre>
       *
       * <code>required int32 id = 1;</code>
       */
      public boolean hasId() {
        return ((bitField0_ & 0x00000001) != 0);
      }
      /**
       * <pre>
       * 0=workout name, 1=workout description, &gt;=2 are stages referred to from the program
       * </pre>
       *
       * <code>required int32 id = 1;</code>
       */
      public int getId() {
        return id_;
      }
      /**
       * <pre>
       * 0=workout name, 1=workout description, &gt;=2 are stages referred to from the program
       * </pre>
       *
       * <code>required int32 id = 1;</code>
       */
      public Builder setId(int value) {
        bitField0_ |= 0x00000001;
        id_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * 0=workout name, 1=workout description, &gt;=2 are stages referred to from the program
       * </pre>
       *
       * <code>required int32 id = 1;</code>
       */
      public Builder clearId() {
        bitField0_ = (bitField0_ & ~0x00000001);
        id_ = 0;
        onChanged();
        return this;
      }

      private java.lang.Object description_ = "";
      /**
       * <pre>
       * Name/description of the workout/stage
       * </pre>
       *
       * <code>required string description = 2;</code>
       */
      public boolean hasDescription() {
        return ((bitField0_ & 0x00000002) != 0);
      }
      /**
       * <pre>
       * Name/description of the workout/stage
       * </pre>
       *
       * <code>required string description = 2;</code>
       */
      public java.lang.String getDescription() {
        java.lang.Object ref = description_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          if (bs.isValidUtf8()) {
            description_ = s;
          }
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       * Name/description of the workout/stage
       * </pre>
       *
       * <code>required string description = 2;</code>
       */
      public com.google.protobuf.ByteString
          getDescriptionBytes() {
        java.lang.Object ref = description_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          description_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       * Name/description of the workout/stage
       * </pre>
       *
       * <code>required string description = 2;</code>
       */
      public Builder setDescription(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000002;
        description_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Name/description of the workout/stage
       * </pre>
       *
       * <code>required string description = 2;</code>
       */
      public Builder clearDescription() {
        bitField0_ = (bitField0_ & ~0x00000002);
        description_ = getDefaultInstance().getDescription();
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Name/description of the workout/stage
       * </pre>
       *
       * <code>required string description = 2;</code>
       */
      public Builder setDescriptionBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000002;
        description_ = value;
        onChanged();
        return this;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:tutorial.Description)
    }

    // @@protoc_insertion_point(class_scope:tutorial.Description)
    private static final net.studioblueplanet.tomtomwatch.WorkoutProto.Description DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new net.studioblueplanet.tomtomwatch.WorkoutProto.Description();
    }

    public static net.studioblueplanet.tomtomwatch.WorkoutProto.Description getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    @java.lang.Deprecated public static final com.google.protobuf.Parser<Description>
        PARSER = new com.google.protobuf.AbstractParser<Description>() {
      @java.lang.Override
      public Description parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new Description(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<Description> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<Description> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public net.studioblueplanet.tomtomwatch.WorkoutProto.Description getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface ProgramOrBuilder extends
      // @@protoc_insertion_point(interface_extends:tutorial.Program)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     * value 0
     * </pre>
     *
     * <code>required int32 unknown2 = 2;</code>
     */
    boolean hasUnknown2();
    /**
     * <pre>
     * value 0
     * </pre>
     *
     * <code>required int32 unknown2 = 2;</code>
     */
    int getUnknown2();

    /**
     * <pre>
     * value 0 or 1; only for run!?
     * </pre>
     *
     * <code>required int32 unknown3 = 3;</code>
     */
    boolean hasUnknown3();
    /**
     * <pre>
     * value 0 or 1; only for run!?
     * </pre>
     *
     * <code>required int32 unknown3 = 3;</code>
     */
    int getUnknown3();

    /**
     * <pre>
     * 16 bytes
     * </pre>
     *
     * <code>required bytes unknown4 = 4;</code>
     */
    boolean hasUnknown4();
    /**
     * <pre>
     * 16 bytes
     * </pre>
     *
     * <code>required bytes unknown4 = 4;</code>
     */
    com.google.protobuf.ByteString getUnknown4();

    /**
     * <pre>
     * 1: Fat burn, 2: Endurance, 3: Fitness, 4: Speed, 5: Power, 6: Custom 
     * </pre>
     *
     * <code>required int32 Type = 10;</code>
     */
    boolean hasType();
    /**
     * <pre>
     * 1: Fat burn, 2: Endurance, 3: Fitness, 4: Speed, 5: Power, 6: Custom 
     * </pre>
     *
     * <code>required int32 Type = 10;</code>
     */
    int getType();

    /**
     * <pre>
     * value 2
     * </pre>
     *
     * <code>required int32 unknown11 = 11;</code>
     */
    boolean hasUnknown11();
    /**
     * <pre>
     * value 2
     * </pre>
     *
     * <code>required int32 unknown11 = 11;</code>
     */
    int getUnknown11();

    /**
     * <pre>
     * Steps that make up the workout
     * </pre>
     *
     * <code>repeated .tutorial.ProgramStep step = 12;</code>
     */
    java.util.List<net.studioblueplanet.tomtomwatch.WorkoutProto.ProgramStep> 
        getStepList();
    /**
     * <pre>
     * Steps that make up the workout
     * </pre>
     *
     * <code>repeated .tutorial.ProgramStep step = 12;</code>
     */
    net.studioblueplanet.tomtomwatch.WorkoutProto.ProgramStep getStep(int index);
    /**
     * <pre>
     * Steps that make up the workout
     * </pre>
     *
     * <code>repeated .tutorial.ProgramStep step = 12;</code>
     */
    int getStepCount();
    /**
     * <pre>
     * Steps that make up the workout
     * </pre>
     *
     * <code>repeated .tutorial.ProgramStep step = 12;</code>
     */
    java.util.List<? extends net.studioblueplanet.tomtomwatch.WorkoutProto.ProgramStepOrBuilder> 
        getStepOrBuilderList();
    /**
     * <pre>
     * Steps that make up the workout
     * </pre>
     *
     * <code>repeated .tutorial.ProgramStep step = 12;</code>
     */
    net.studioblueplanet.tomtomwatch.WorkoutProto.ProgramStepOrBuilder getStepOrBuilder(
        int index);
  }
  /**
   * <pre>
   *#################################################################################################
   * 4th level: the program as list of steps
   *#################################################################################################
   * </pre>
   *
   * Protobuf type {@code tutorial.Program}
   */
  public  static final class Program extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:tutorial.Program)
      ProgramOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use Program.newBuilder() to construct.
    private Program(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private Program() {
      unknown4_ = com.google.protobuf.ByteString.EMPTY;
      step_ = java.util.Collections.emptyList();
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new Program();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private Program(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 16: {
              bitField0_ |= 0x00000001;
              unknown2_ = input.readInt32();
              break;
            }
            case 24: {
              bitField0_ |= 0x00000002;
              unknown3_ = input.readInt32();
              break;
            }
            case 34: {
              bitField0_ |= 0x00000004;
              unknown4_ = input.readBytes();
              break;
            }
            case 80: {
              bitField0_ |= 0x00000008;
              type_ = input.readInt32();
              break;
            }
            case 88: {
              bitField0_ |= 0x00000010;
              unknown11_ = input.readInt32();
              break;
            }
            case 98: {
              if (!((mutable_bitField0_ & 0x00000020) != 0)) {
                step_ = new java.util.ArrayList<net.studioblueplanet.tomtomwatch.WorkoutProto.ProgramStep>();
                mutable_bitField0_ |= 0x00000020;
              }
              step_.add(
                  input.readMessage(net.studioblueplanet.tomtomwatch.WorkoutProto.ProgramStep.PARSER, extensionRegistry));
              break;
            }
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000020) != 0)) {
          step_ = java.util.Collections.unmodifiableList(step_);
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return net.studioblueplanet.tomtomwatch.WorkoutProto.internal_static_tutorial_Program_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return net.studioblueplanet.tomtomwatch.WorkoutProto.internal_static_tutorial_Program_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              net.studioblueplanet.tomtomwatch.WorkoutProto.Program.class, net.studioblueplanet.tomtomwatch.WorkoutProto.Program.Builder.class);
    }

    private int bitField0_;
    public static final int UNKNOWN2_FIELD_NUMBER = 2;
    private int unknown2_;
    /**
     * <pre>
     * value 0
     * </pre>
     *
     * <code>required int32 unknown2 = 2;</code>
     */
    public boolean hasUnknown2() {
      return ((bitField0_ & 0x00000001) != 0);
    }
    /**
     * <pre>
     * value 0
     * </pre>
     *
     * <code>required int32 unknown2 = 2;</code>
     */
    public int getUnknown2() {
      return unknown2_;
    }

    public static final int UNKNOWN3_FIELD_NUMBER = 3;
    private int unknown3_;
    /**
     * <pre>
     * value 0 or 1; only for run!?
     * </pre>
     *
     * <code>required int32 unknown3 = 3;</code>
     */
    public boolean hasUnknown3() {
      return ((bitField0_ & 0x00000002) != 0);
    }
    /**
     * <pre>
     * value 0 or 1; only for run!?
     * </pre>
     *
     * <code>required int32 unknown3 = 3;</code>
     */
    public int getUnknown3() {
      return unknown3_;
    }

    public static final int UNKNOWN4_FIELD_NUMBER = 4;
    private com.google.protobuf.ByteString unknown4_;
    /**
     * <pre>
     * 16 bytes
     * </pre>
     *
     * <code>required bytes unknown4 = 4;</code>
     */
    public boolean hasUnknown4() {
      return ((bitField0_ & 0x00000004) != 0);
    }
    /**
     * <pre>
     * 16 bytes
     * </pre>
     *
     * <code>required bytes unknown4 = 4;</code>
     */
    public com.google.protobuf.ByteString getUnknown4() {
      return unknown4_;
    }

    public static final int TYPE_FIELD_NUMBER = 10;
    private int type_;
    /**
     * <pre>
     * 1: Fat burn, 2: Endurance, 3: Fitness, 4: Speed, 5: Power, 6: Custom 
     * </pre>
     *
     * <code>required int32 Type = 10;</code>
     */
    public boolean hasType() {
      return ((bitField0_ & 0x00000008) != 0);
    }
    /**
     * <pre>
     * 1: Fat burn, 2: Endurance, 3: Fitness, 4: Speed, 5: Power, 6: Custom 
     * </pre>
     *
     * <code>required int32 Type = 10;</code>
     */
    public int getType() {
      return type_;
    }

    public static final int UNKNOWN11_FIELD_NUMBER = 11;
    private int unknown11_;
    /**
     * <pre>
     * value 2
     * </pre>
     *
     * <code>required int32 unknown11 = 11;</code>
     */
    public boolean hasUnknown11() {
      return ((bitField0_ & 0x00000010) != 0);
    }
    /**
     * <pre>
     * value 2
     * </pre>
     *
     * <code>required int32 unknown11 = 11;</code>
     */
    public int getUnknown11() {
      return unknown11_;
    }

    public static final int STEP_FIELD_NUMBER = 12;
    private java.util.List<net.studioblueplanet.tomtomwatch.WorkoutProto.ProgramStep> step_;
    /**
     * <pre>
     * Steps that make up the workout
     * </pre>
     *
     * <code>repeated .tutorial.ProgramStep step = 12;</code>
     */
    public java.util.List<net.studioblueplanet.tomtomwatch.WorkoutProto.ProgramStep> getStepList() {
      return step_;
    }
    /**
     * <pre>
     * Steps that make up the workout
     * </pre>
     *
     * <code>repeated .tutorial.ProgramStep step = 12;</code>
     */
    public java.util.List<? extends net.studioblueplanet.tomtomwatch.WorkoutProto.ProgramStepOrBuilder> 
        getStepOrBuilderList() {
      return step_;
    }
    /**
     * <pre>
     * Steps that make up the workout
     * </pre>
     *
     * <code>repeated .tutorial.ProgramStep step = 12;</code>
     */
    public int getStepCount() {
      return step_.size();
    }
    /**
     * <pre>
     * Steps that make up the workout
     * </pre>
     *
     * <code>repeated .tutorial.ProgramStep step = 12;</code>
     */
    public net.studioblueplanet.tomtomwatch.WorkoutProto.ProgramStep getStep(int index) {
      return step_.get(index);
    }
    /**
     * <pre>
     * Steps that make up the workout
     * </pre>
     *
     * <code>repeated .tutorial.ProgramStep step = 12;</code>
     */
    public net.studioblueplanet.tomtomwatch.WorkoutProto.ProgramStepOrBuilder getStepOrBuilder(
        int index) {
      return step_.get(index);
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      if (!hasUnknown2()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasUnknown3()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasUnknown4()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasType()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasUnknown11()) {
        memoizedIsInitialized = 0;
        return false;
      }
      for (int i = 0; i < getStepCount(); i++) {
        if (!getStep(i).isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (((bitField0_ & 0x00000001) != 0)) {
        output.writeInt32(2, unknown2_);
      }
      if (((bitField0_ & 0x00000002) != 0)) {
        output.writeInt32(3, unknown3_);
      }
      if (((bitField0_ & 0x00000004) != 0)) {
        output.writeBytes(4, unknown4_);
      }
      if (((bitField0_ & 0x00000008) != 0)) {
        output.writeInt32(10, type_);
      }
      if (((bitField0_ & 0x00000010) != 0)) {
        output.writeInt32(11, unknown11_);
      }
      for (int i = 0; i < step_.size(); i++) {
        output.writeMessage(12, step_.get(i));
      }
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(2, unknown2_);
      }
      if (((bitField0_ & 0x00000002) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(3, unknown3_);
      }
      if (((bitField0_ & 0x00000004) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(4, unknown4_);
      }
      if (((bitField0_ & 0x00000008) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(10, type_);
      }
      if (((bitField0_ & 0x00000010) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(11, unknown11_);
      }
      for (int i = 0; i < step_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(12, step_.get(i));
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof net.studioblueplanet.tomtomwatch.WorkoutProto.Program)) {
        return super.equals(obj);
      }
      net.studioblueplanet.tomtomwatch.WorkoutProto.Program other = (net.studioblueplanet.tomtomwatch.WorkoutProto.Program) obj;

      if (hasUnknown2() != other.hasUnknown2()) return false;
      if (hasUnknown2()) {
        if (getUnknown2()
            != other.getUnknown2()) return false;
      }
      if (hasUnknown3() != other.hasUnknown3()) return false;
      if (hasUnknown3()) {
        if (getUnknown3()
            != other.getUnknown3()) return false;
      }
      if (hasUnknown4() != other.hasUnknown4()) return false;
      if (hasUnknown4()) {
        if (!getUnknown4()
            .equals(other.getUnknown4())) return false;
      }
      if (hasType() != other.hasType()) return false;
      if (hasType()) {
        if (getType()
            != other.getType()) return false;
      }
      if (hasUnknown11() != other.hasUnknown11()) return false;
      if (hasUnknown11()) {
        if (getUnknown11()
            != other.getUnknown11()) return false;
      }
      if (!getStepList()
          .equals(other.getStepList())) return false;
      if (!unknownFields.equals(other.unknownFields)) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (hasUnknown2()) {
        hash = (37 * hash) + UNKNOWN2_FIELD_NUMBER;
        hash = (53 * hash) + getUnknown2();
      }
      if (hasUnknown3()) {
        hash = (37 * hash) + UNKNOWN3_FIELD_NUMBER;
        hash = (53 * hash) + getUnknown3();
      }
      if (hasUnknown4()) {
        hash = (37 * hash) + UNKNOWN4_FIELD_NUMBER;
        hash = (53 * hash) + getUnknown4().hashCode();
      }
      if (hasType()) {
        hash = (37 * hash) + TYPE_FIELD_NUMBER;
        hash = (53 * hash) + getType();
      }
      if (hasUnknown11()) {
        hash = (37 * hash) + UNKNOWN11_FIELD_NUMBER;
        hash = (53 * hash) + getUnknown11();
      }
      if (getStepCount() > 0) {
        hash = (37 * hash) + STEP_FIELD_NUMBER;
        hash = (53 * hash) + getStepList().hashCode();
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static net.studioblueplanet.tomtomwatch.WorkoutProto.Program parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static net.studioblueplanet.tomtomwatch.WorkoutProto.Program parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static net.studioblueplanet.tomtomwatch.WorkoutProto.Program parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static net.studioblueplanet.tomtomwatch.WorkoutProto.Program parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static net.studioblueplanet.tomtomwatch.WorkoutProto.Program parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static net.studioblueplanet.tomtomwatch.WorkoutProto.Program parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static net.studioblueplanet.tomtomwatch.WorkoutProto.Program parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static net.studioblueplanet.tomtomwatch.WorkoutProto.Program parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static net.studioblueplanet.tomtomwatch.WorkoutProto.Program parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static net.studioblueplanet.tomtomwatch.WorkoutProto.Program parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static net.studioblueplanet.tomtomwatch.WorkoutProto.Program parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static net.studioblueplanet.tomtomwatch.WorkoutProto.Program parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(net.studioblueplanet.tomtomwatch.WorkoutProto.Program prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     *#################################################################################################
     * 4th level: the program as list of steps
     *#################################################################################################
     * </pre>
     *
     * Protobuf type {@code tutorial.Program}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:tutorial.Program)
        net.studioblueplanet.tomtomwatch.WorkoutProto.ProgramOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return net.studioblueplanet.tomtomwatch.WorkoutProto.internal_static_tutorial_Program_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return net.studioblueplanet.tomtomwatch.WorkoutProto.internal_static_tutorial_Program_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                net.studioblueplanet.tomtomwatch.WorkoutProto.Program.class, net.studioblueplanet.tomtomwatch.WorkoutProto.Program.Builder.class);
      }

      // Construct using net.studioblueplanet.tomtomwatch.WorkoutProto.Program.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
          getStepFieldBuilder();
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        unknown2_ = 0;
        bitField0_ = (bitField0_ & ~0x00000001);
        unknown3_ = 0;
        bitField0_ = (bitField0_ & ~0x00000002);
        unknown4_ = com.google.protobuf.ByteString.EMPTY;
        bitField0_ = (bitField0_ & ~0x00000004);
        type_ = 0;
        bitField0_ = (bitField0_ & ~0x00000008);
        unknown11_ = 0;
        bitField0_ = (bitField0_ & ~0x00000010);
        if (stepBuilder_ == null) {
          step_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000020);
        } else {
          stepBuilder_.clear();
        }
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return net.studioblueplanet.tomtomwatch.WorkoutProto.internal_static_tutorial_Program_descriptor;
      }

      @java.lang.Override
      public net.studioblueplanet.tomtomwatch.WorkoutProto.Program getDefaultInstanceForType() {
        return net.studioblueplanet.tomtomwatch.WorkoutProto.Program.getDefaultInstance();
      }

      @java.lang.Override
      public net.studioblueplanet.tomtomwatch.WorkoutProto.Program build() {
        net.studioblueplanet.tomtomwatch.WorkoutProto.Program result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public net.studioblueplanet.tomtomwatch.WorkoutProto.Program buildPartial() {
        net.studioblueplanet.tomtomwatch.WorkoutProto.Program result = new net.studioblueplanet.tomtomwatch.WorkoutProto.Program(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) != 0)) {
          result.unknown2_ = unknown2_;
          to_bitField0_ |= 0x00000001;
        }
        if (((from_bitField0_ & 0x00000002) != 0)) {
          result.unknown3_ = unknown3_;
          to_bitField0_ |= 0x00000002;
        }
        if (((from_bitField0_ & 0x00000004) != 0)) {
          to_bitField0_ |= 0x00000004;
        }
        result.unknown4_ = unknown4_;
        if (((from_bitField0_ & 0x00000008) != 0)) {
          result.type_ = type_;
          to_bitField0_ |= 0x00000008;
        }
        if (((from_bitField0_ & 0x00000010) != 0)) {
          result.unknown11_ = unknown11_;
          to_bitField0_ |= 0x00000010;
        }
        if (stepBuilder_ == null) {
          if (((bitField0_ & 0x00000020) != 0)) {
            step_ = java.util.Collections.unmodifiableList(step_);
            bitField0_ = (bitField0_ & ~0x00000020);
          }
          result.step_ = step_;
        } else {
          result.step_ = stepBuilder_.build();
        }
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof net.studioblueplanet.tomtomwatch.WorkoutProto.Program) {
          return mergeFrom((net.studioblueplanet.tomtomwatch.WorkoutProto.Program)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(net.studioblueplanet.tomtomwatch.WorkoutProto.Program other) {
        if (other == net.studioblueplanet.tomtomwatch.WorkoutProto.Program.getDefaultInstance()) return this;
        if (other.hasUnknown2()) {
          setUnknown2(other.getUnknown2());
        }
        if (other.hasUnknown3()) {
          setUnknown3(other.getUnknown3());
        }
        if (other.hasUnknown4()) {
          setUnknown4(other.getUnknown4());
        }
        if (other.hasType()) {
          setType(other.getType());
        }
        if (other.hasUnknown11()) {
          setUnknown11(other.getUnknown11());
        }
        if (stepBuilder_ == null) {
          if (!other.step_.isEmpty()) {
            if (step_.isEmpty()) {
              step_ = other.step_;
              bitField0_ = (bitField0_ & ~0x00000020);
            } else {
              ensureStepIsMutable();
              step_.addAll(other.step_);
            }
            onChanged();
          }
        } else {
          if (!other.step_.isEmpty()) {
            if (stepBuilder_.isEmpty()) {
              stepBuilder_.dispose();
              stepBuilder_ = null;
              step_ = other.step_;
              bitField0_ = (bitField0_ & ~0x00000020);
              stepBuilder_ = 
                com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                   getStepFieldBuilder() : null;
            } else {
              stepBuilder_.addAllMessages(other.step_);
            }
          }
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        if (!hasUnknown2()) {
          return false;
        }
        if (!hasUnknown3()) {
          return false;
        }
        if (!hasUnknown4()) {
          return false;
        }
        if (!hasType()) {
          return false;
        }
        if (!hasUnknown11()) {
          return false;
        }
        for (int i = 0; i < getStepCount(); i++) {
          if (!getStep(i).isInitialized()) {
            return false;
          }
        }
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        net.studioblueplanet.tomtomwatch.WorkoutProto.Program parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (net.studioblueplanet.tomtomwatch.WorkoutProto.Program) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private int unknown2_ ;
      /**
       * <pre>
       * value 0
       * </pre>
       *
       * <code>required int32 unknown2 = 2;</code>
       */
      public boolean hasUnknown2() {
        return ((bitField0_ & 0x00000001) != 0);
      }
      /**
       * <pre>
       * value 0
       * </pre>
       *
       * <code>required int32 unknown2 = 2;</code>
       */
      public int getUnknown2() {
        return unknown2_;
      }
      /**
       * <pre>
       * value 0
       * </pre>
       *
       * <code>required int32 unknown2 = 2;</code>
       */
      public Builder setUnknown2(int value) {
        bitField0_ |= 0x00000001;
        unknown2_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * value 0
       * </pre>
       *
       * <code>required int32 unknown2 = 2;</code>
       */
      public Builder clearUnknown2() {
        bitField0_ = (bitField0_ & ~0x00000001);
        unknown2_ = 0;
        onChanged();
        return this;
      }

      private int unknown3_ ;
      /**
       * <pre>
       * value 0 or 1; only for run!?
       * </pre>
       *
       * <code>required int32 unknown3 = 3;</code>
       */
      public boolean hasUnknown3() {
        return ((bitField0_ & 0x00000002) != 0);
      }
      /**
       * <pre>
       * value 0 or 1; only for run!?
       * </pre>
       *
       * <code>required int32 unknown3 = 3;</code>
       */
      public int getUnknown3() {
        return unknown3_;
      }
      /**
       * <pre>
       * value 0 or 1; only for run!?
       * </pre>
       *
       * <code>required int32 unknown3 = 3;</code>
       */
      public Builder setUnknown3(int value) {
        bitField0_ |= 0x00000002;
        unknown3_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * value 0 or 1; only for run!?
       * </pre>
       *
       * <code>required int32 unknown3 = 3;</code>
       */
      public Builder clearUnknown3() {
        bitField0_ = (bitField0_ & ~0x00000002);
        unknown3_ = 0;
        onChanged();
        return this;
      }

      private com.google.protobuf.ByteString unknown4_ = com.google.protobuf.ByteString.EMPTY;
      /**
       * <pre>
       * 16 bytes
       * </pre>
       *
       * <code>required bytes unknown4 = 4;</code>
       */
      public boolean hasUnknown4() {
        return ((bitField0_ & 0x00000004) != 0);
      }
      /**
       * <pre>
       * 16 bytes
       * </pre>
       *
       * <code>required bytes unknown4 = 4;</code>
       */
      public com.google.protobuf.ByteString getUnknown4() {
        return unknown4_;
      }
      /**
       * <pre>
       * 16 bytes
       * </pre>
       *
       * <code>required bytes unknown4 = 4;</code>
       */
      public Builder setUnknown4(com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000004;
        unknown4_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * 16 bytes
       * </pre>
       *
       * <code>required bytes unknown4 = 4;</code>
       */
      public Builder clearUnknown4() {
        bitField0_ = (bitField0_ & ~0x00000004);
        unknown4_ = getDefaultInstance().getUnknown4();
        onChanged();
        return this;
      }

      private int type_ ;
      /**
       * <pre>
       * 1: Fat burn, 2: Endurance, 3: Fitness, 4: Speed, 5: Power, 6: Custom 
       * </pre>
       *
       * <code>required int32 Type = 10;</code>
       */
      public boolean hasType() {
        return ((bitField0_ & 0x00000008) != 0);
      }
      /**
       * <pre>
       * 1: Fat burn, 2: Endurance, 3: Fitness, 4: Speed, 5: Power, 6: Custom 
       * </pre>
       *
       * <code>required int32 Type = 10;</code>
       */
      public int getType() {
        return type_;
      }
      /**
       * <pre>
       * 1: Fat burn, 2: Endurance, 3: Fitness, 4: Speed, 5: Power, 6: Custom 
       * </pre>
       *
       * <code>required int32 Type = 10;</code>
       */
      public Builder setType(int value) {
        bitField0_ |= 0x00000008;
        type_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * 1: Fat burn, 2: Endurance, 3: Fitness, 4: Speed, 5: Power, 6: Custom 
       * </pre>
       *
       * <code>required int32 Type = 10;</code>
       */
      public Builder clearType() {
        bitField0_ = (bitField0_ & ~0x00000008);
        type_ = 0;
        onChanged();
        return this;
      }

      private int unknown11_ ;
      /**
       * <pre>
       * value 2
       * </pre>
       *
       * <code>required int32 unknown11 = 11;</code>
       */
      public boolean hasUnknown11() {
        return ((bitField0_ & 0x00000010) != 0);
      }
      /**
       * <pre>
       * value 2
       * </pre>
       *
       * <code>required int32 unknown11 = 11;</code>
       */
      public int getUnknown11() {
        return unknown11_;
      }
      /**
       * <pre>
       * value 2
       * </pre>
       *
       * <code>required int32 unknown11 = 11;</code>
       */
      public Builder setUnknown11(int value) {
        bitField0_ |= 0x00000010;
        unknown11_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * value 2
       * </pre>
       *
       * <code>required int32 unknown11 = 11;</code>
       */
      public Builder clearUnknown11() {
        bitField0_ = (bitField0_ & ~0x00000010);
        unknown11_ = 0;
        onChanged();
        return this;
      }

      private java.util.List<net.studioblueplanet.tomtomwatch.WorkoutProto.ProgramStep> step_ =
        java.util.Collections.emptyList();
      private void ensureStepIsMutable() {
        if (!((bitField0_ & 0x00000020) != 0)) {
          step_ = new java.util.ArrayList<net.studioblueplanet.tomtomwatch.WorkoutProto.ProgramStep>(step_);
          bitField0_ |= 0x00000020;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilderV3<
          net.studioblueplanet.tomtomwatch.WorkoutProto.ProgramStep, net.studioblueplanet.tomtomwatch.WorkoutProto.ProgramStep.Builder, net.studioblueplanet.tomtomwatch.WorkoutProto.ProgramStepOrBuilder> stepBuilder_;

      /**
       * <pre>
       * Steps that make up the workout
       * </pre>
       *
       * <code>repeated .tutorial.ProgramStep step = 12;</code>
       */
      public java.util.List<net.studioblueplanet.tomtomwatch.WorkoutProto.ProgramStep> getStepList() {
        if (stepBuilder_ == null) {
          return java.util.Collections.unmodifiableList(step_);
        } else {
          return stepBuilder_.getMessageList();
        }
      }
      /**
       * <pre>
       * Steps that make up the workout
       * </pre>
       *
       * <code>repeated .tutorial.ProgramStep step = 12;</code>
       */
      public int getStepCount() {
        if (stepBuilder_ == null) {
          return step_.size();
        } else {
          return stepBuilder_.getCount();
        }
      }
      /**
       * <pre>
       * Steps that make up the workout
       * </pre>
       *
       * <code>repeated .tutorial.ProgramStep step = 12;</code>
       */
      public net.studioblueplanet.tomtomwatch.WorkoutProto.ProgramStep getStep(int index) {
        if (stepBuilder_ == null) {
          return step_.get(index);
        } else {
          return stepBuilder_.getMessage(index);
        }
      }
      /**
       * <pre>
       * Steps that make up the workout
       * </pre>
       *
       * <code>repeated .tutorial.ProgramStep step = 12;</code>
       */
      public Builder setStep(
          int index, net.studioblueplanet.tomtomwatch.WorkoutProto.ProgramStep value) {
        if (stepBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureStepIsMutable();
          step_.set(index, value);
          onChanged();
        } else {
          stepBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <pre>
       * Steps that make up the workout
       * </pre>
       *
       * <code>repeated .tutorial.ProgramStep step = 12;</code>
       */
      public Builder setStep(
          int index, net.studioblueplanet.tomtomwatch.WorkoutProto.ProgramStep.Builder builderForValue) {
        if (stepBuilder_ == null) {
          ensureStepIsMutable();
          step_.set(index, builderForValue.build());
          onChanged();
        } else {
          stepBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * Steps that make up the workout
       * </pre>
       *
       * <code>repeated .tutorial.ProgramStep step = 12;</code>
       */
      public Builder addStep(net.studioblueplanet.tomtomwatch.WorkoutProto.ProgramStep value) {
        if (stepBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureStepIsMutable();
          step_.add(value);
          onChanged();
        } else {
          stepBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <pre>
       * Steps that make up the workout
       * </pre>
       *
       * <code>repeated .tutorial.ProgramStep step = 12;</code>
       */
      public Builder addStep(
          int index, net.studioblueplanet.tomtomwatch.WorkoutProto.ProgramStep value) {
        if (stepBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureStepIsMutable();
          step_.add(index, value);
          onChanged();
        } else {
          stepBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <pre>
       * Steps that make up the workout
       * </pre>
       *
       * <code>repeated .tutorial.ProgramStep step = 12;</code>
       */
      public Builder addStep(
          net.studioblueplanet.tomtomwatch.WorkoutProto.ProgramStep.Builder builderForValue) {
        if (stepBuilder_ == null) {
          ensureStepIsMutable();
          step_.add(builderForValue.build());
          onChanged();
        } else {
          stepBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * Steps that make up the workout
       * </pre>
       *
       * <code>repeated .tutorial.ProgramStep step = 12;</code>
       */
      public Builder addStep(
          int index, net.studioblueplanet.tomtomwatch.WorkoutProto.ProgramStep.Builder builderForValue) {
        if (stepBuilder_ == null) {
          ensureStepIsMutable();
          step_.add(index, builderForValue.build());
          onChanged();
        } else {
          stepBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * Steps that make up the workout
       * </pre>
       *
       * <code>repeated .tutorial.ProgramStep step = 12;</code>
       */
      public Builder addAllStep(
          java.lang.Iterable<? extends net.studioblueplanet.tomtomwatch.WorkoutProto.ProgramStep> values) {
        if (stepBuilder_ == null) {
          ensureStepIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, step_);
          onChanged();
        } else {
          stepBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <pre>
       * Steps that make up the workout
       * </pre>
       *
       * <code>repeated .tutorial.ProgramStep step = 12;</code>
       */
      public Builder clearStep() {
        if (stepBuilder_ == null) {
          step_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000020);
          onChanged();
        } else {
          stepBuilder_.clear();
        }
        return this;
      }
      /**
       * <pre>
       * Steps that make up the workout
       * </pre>
       *
       * <code>repeated .tutorial.ProgramStep step = 12;</code>
       */
      public Builder removeStep(int index) {
        if (stepBuilder_ == null) {
          ensureStepIsMutable();
          step_.remove(index);
          onChanged();
        } else {
          stepBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <pre>
       * Steps that make up the workout
       * </pre>
       *
       * <code>repeated .tutorial.ProgramStep step = 12;</code>
       */
      public net.studioblueplanet.tomtomwatch.WorkoutProto.ProgramStep.Builder getStepBuilder(
          int index) {
        return getStepFieldBuilder().getBuilder(index);
      }
      /**
       * <pre>
       * Steps that make up the workout
       * </pre>
       *
       * <code>repeated .tutorial.ProgramStep step = 12;</code>
       */
      public net.studioblueplanet.tomtomwatch.WorkoutProto.ProgramStepOrBuilder getStepOrBuilder(
          int index) {
        if (stepBuilder_ == null) {
          return step_.get(index);  } else {
          return stepBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <pre>
       * Steps that make up the workout
       * </pre>
       *
       * <code>repeated .tutorial.ProgramStep step = 12;</code>
       */
      public java.util.List<? extends net.studioblueplanet.tomtomwatch.WorkoutProto.ProgramStepOrBuilder> 
           getStepOrBuilderList() {
        if (stepBuilder_ != null) {
          return stepBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(step_);
        }
      }
      /**
       * <pre>
       * Steps that make up the workout
       * </pre>
       *
       * <code>repeated .tutorial.ProgramStep step = 12;</code>
       */
      public net.studioblueplanet.tomtomwatch.WorkoutProto.ProgramStep.Builder addStepBuilder() {
        return getStepFieldBuilder().addBuilder(
            net.studioblueplanet.tomtomwatch.WorkoutProto.ProgramStep.getDefaultInstance());
      }
      /**
       * <pre>
       * Steps that make up the workout
       * </pre>
       *
       * <code>repeated .tutorial.ProgramStep step = 12;</code>
       */
      public net.studioblueplanet.tomtomwatch.WorkoutProto.ProgramStep.Builder addStepBuilder(
          int index) {
        return getStepFieldBuilder().addBuilder(
            index, net.studioblueplanet.tomtomwatch.WorkoutProto.ProgramStep.getDefaultInstance());
      }
      /**
       * <pre>
       * Steps that make up the workout
       * </pre>
       *
       * <code>repeated .tutorial.ProgramStep step = 12;</code>
       */
      public java.util.List<net.studioblueplanet.tomtomwatch.WorkoutProto.ProgramStep.Builder> 
           getStepBuilderList() {
        return getStepFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilderV3<
          net.studioblueplanet.tomtomwatch.WorkoutProto.ProgramStep, net.studioblueplanet.tomtomwatch.WorkoutProto.ProgramStep.Builder, net.studioblueplanet.tomtomwatch.WorkoutProto.ProgramStepOrBuilder> 
          getStepFieldBuilder() {
        if (stepBuilder_ == null) {
          stepBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
              net.studioblueplanet.tomtomwatch.WorkoutProto.ProgramStep, net.studioblueplanet.tomtomwatch.WorkoutProto.ProgramStep.Builder, net.studioblueplanet.tomtomwatch.WorkoutProto.ProgramStepOrBuilder>(
                  step_,
                  ((bitField0_ & 0x00000020) != 0),
                  getParentForChildren(),
                  isClean());
          step_ = null;
        }
        return stepBuilder_;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:tutorial.Program)
    }

    // @@protoc_insertion_point(class_scope:tutorial.Program)
    private static final net.studioblueplanet.tomtomwatch.WorkoutProto.Program DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new net.studioblueplanet.tomtomwatch.WorkoutProto.Program();
    }

    public static net.studioblueplanet.tomtomwatch.WorkoutProto.Program getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    @java.lang.Deprecated public static final com.google.protobuf.Parser<Program>
        PARSER = new com.google.protobuf.AbstractParser<Program>() {
      @java.lang.Override
      public Program parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new Program(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<Program> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<Program> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public net.studioblueplanet.tomtomwatch.WorkoutProto.Program getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface ProgramStepOrBuilder extends
      // @@protoc_insertion_point(interface_extends:tutorial.ProgramStep)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>required .tutorial.ProgramStepSub stepSub = 8;</code>
     */
    boolean hasStepSub();
    /**
     * <code>required .tutorial.ProgramStepSub stepSub = 8;</code>
     */
    net.studioblueplanet.tomtomwatch.WorkoutProto.ProgramStepSub getStepSub();
    /**
     * <code>required .tutorial.ProgramStepSub stepSub = 8;</code>
     */
    net.studioblueplanet.tomtomwatch.WorkoutProto.ProgramStepSubOrBuilder getStepSubOrBuilder();
  }
  /**
   * <pre>
   *#################################################################################################
   * 5th level: Program step
   *#################################################################################################
   * </pre>
   *
   * Protobuf type {@code tutorial.ProgramStep}
   */
  public  static final class ProgramStep extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:tutorial.ProgramStep)
      ProgramStepOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use ProgramStep.newBuilder() to construct.
    private ProgramStep(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private ProgramStep() {
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new ProgramStep();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private ProgramStep(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 66: {
              net.studioblueplanet.tomtomwatch.WorkoutProto.ProgramStepSub.Builder subBuilder = null;
              if (((bitField0_ & 0x00000001) != 0)) {
                subBuilder = stepSub_.toBuilder();
              }
              stepSub_ = input.readMessage(net.studioblueplanet.tomtomwatch.WorkoutProto.ProgramStepSub.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(stepSub_);
                stepSub_ = subBuilder.buildPartial();
              }
              bitField0_ |= 0x00000001;
              break;
            }
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return net.studioblueplanet.tomtomwatch.WorkoutProto.internal_static_tutorial_ProgramStep_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return net.studioblueplanet.tomtomwatch.WorkoutProto.internal_static_tutorial_ProgramStep_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              net.studioblueplanet.tomtomwatch.WorkoutProto.ProgramStep.class, net.studioblueplanet.tomtomwatch.WorkoutProto.ProgramStep.Builder.class);
    }

    private int bitField0_;
    public static final int STEPSUB_FIELD_NUMBER = 8;
    private net.studioblueplanet.tomtomwatch.WorkoutProto.ProgramStepSub stepSub_;
    /**
     * <code>required .tutorial.ProgramStepSub stepSub = 8;</code>
     */
    public boolean hasStepSub() {
      return ((bitField0_ & 0x00000001) != 0);
    }
    /**
     * <code>required .tutorial.ProgramStepSub stepSub = 8;</code>
     */
    public net.studioblueplanet.tomtomwatch.WorkoutProto.ProgramStepSub getStepSub() {
      return stepSub_ == null ? net.studioblueplanet.tomtomwatch.WorkoutProto.ProgramStepSub.getDefaultInstance() : stepSub_;
    }
    /**
     * <code>required .tutorial.ProgramStepSub stepSub = 8;</code>
     */
    public net.studioblueplanet.tomtomwatch.WorkoutProto.ProgramStepSubOrBuilder getStepSubOrBuilder() {
      return stepSub_ == null ? net.studioblueplanet.tomtomwatch.WorkoutProto.ProgramStepSub.getDefaultInstance() : stepSub_;
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      if (!hasStepSub()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!getStepSub().isInitialized()) {
        memoizedIsInitialized = 0;
        return false;
      }
      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (((bitField0_ & 0x00000001) != 0)) {
        output.writeMessage(8, getStepSub());
      }
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(8, getStepSub());
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof net.studioblueplanet.tomtomwatch.WorkoutProto.ProgramStep)) {
        return super.equals(obj);
      }
      net.studioblueplanet.tomtomwatch.WorkoutProto.ProgramStep other = (net.studioblueplanet.tomtomwatch.WorkoutProto.ProgramStep) obj;

      if (hasStepSub() != other.hasStepSub()) return false;
      if (hasStepSub()) {
        if (!getStepSub()
            .equals(other.getStepSub())) return false;
      }
      if (!unknownFields.equals(other.unknownFields)) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (hasStepSub()) {
        hash = (37 * hash) + STEPSUB_FIELD_NUMBER;
        hash = (53 * hash) + getStepSub().hashCode();
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static net.studioblueplanet.tomtomwatch.WorkoutProto.ProgramStep parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static net.studioblueplanet.tomtomwatch.WorkoutProto.ProgramStep parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static net.studioblueplanet.tomtomwatch.WorkoutProto.ProgramStep parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static net.studioblueplanet.tomtomwatch.WorkoutProto.ProgramStep parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static net.studioblueplanet.tomtomwatch.WorkoutProto.ProgramStep parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static net.studioblueplanet.tomtomwatch.WorkoutProto.ProgramStep parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static net.studioblueplanet.tomtomwatch.WorkoutProto.ProgramStep parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static net.studioblueplanet.tomtomwatch.WorkoutProto.ProgramStep parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static net.studioblueplanet.tomtomwatch.WorkoutProto.ProgramStep parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static net.studioblueplanet.tomtomwatch.WorkoutProto.ProgramStep parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static net.studioblueplanet.tomtomwatch.WorkoutProto.ProgramStep parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static net.studioblueplanet.tomtomwatch.WorkoutProto.ProgramStep parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(net.studioblueplanet.tomtomwatch.WorkoutProto.ProgramStep prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     *#################################################################################################
     * 5th level: Program step
     *#################################################################################################
     * </pre>
     *
     * Protobuf type {@code tutorial.ProgramStep}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:tutorial.ProgramStep)
        net.studioblueplanet.tomtomwatch.WorkoutProto.ProgramStepOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return net.studioblueplanet.tomtomwatch.WorkoutProto.internal_static_tutorial_ProgramStep_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return net.studioblueplanet.tomtomwatch.WorkoutProto.internal_static_tutorial_ProgramStep_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                net.studioblueplanet.tomtomwatch.WorkoutProto.ProgramStep.class, net.studioblueplanet.tomtomwatch.WorkoutProto.ProgramStep.Builder.class);
      }

      // Construct using net.studioblueplanet.tomtomwatch.WorkoutProto.ProgramStep.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
          getStepSubFieldBuilder();
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        if (stepSubBuilder_ == null) {
          stepSub_ = null;
        } else {
          stepSubBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000001);
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return net.studioblueplanet.tomtomwatch.WorkoutProto.internal_static_tutorial_ProgramStep_descriptor;
      }

      @java.lang.Override
      public net.studioblueplanet.tomtomwatch.WorkoutProto.ProgramStep getDefaultInstanceForType() {
        return net.studioblueplanet.tomtomwatch.WorkoutProto.ProgramStep.getDefaultInstance();
      }

      @java.lang.Override
      public net.studioblueplanet.tomtomwatch.WorkoutProto.ProgramStep build() {
        net.studioblueplanet.tomtomwatch.WorkoutProto.ProgramStep result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public net.studioblueplanet.tomtomwatch.WorkoutProto.ProgramStep buildPartial() {
        net.studioblueplanet.tomtomwatch.WorkoutProto.ProgramStep result = new net.studioblueplanet.tomtomwatch.WorkoutProto.ProgramStep(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) != 0)) {
          if (stepSubBuilder_ == null) {
            result.stepSub_ = stepSub_;
          } else {
            result.stepSub_ = stepSubBuilder_.build();
          }
          to_bitField0_ |= 0x00000001;
        }
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof net.studioblueplanet.tomtomwatch.WorkoutProto.ProgramStep) {
          return mergeFrom((net.studioblueplanet.tomtomwatch.WorkoutProto.ProgramStep)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(net.studioblueplanet.tomtomwatch.WorkoutProto.ProgramStep other) {
        if (other == net.studioblueplanet.tomtomwatch.WorkoutProto.ProgramStep.getDefaultInstance()) return this;
        if (other.hasStepSub()) {
          mergeStepSub(other.getStepSub());
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        if (!hasStepSub()) {
          return false;
        }
        if (!getStepSub().isInitialized()) {
          return false;
        }
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        net.studioblueplanet.tomtomwatch.WorkoutProto.ProgramStep parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (net.studioblueplanet.tomtomwatch.WorkoutProto.ProgramStep) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private net.studioblueplanet.tomtomwatch.WorkoutProto.ProgramStepSub stepSub_;
      private com.google.protobuf.SingleFieldBuilderV3<
          net.studioblueplanet.tomtomwatch.WorkoutProto.ProgramStepSub, net.studioblueplanet.tomtomwatch.WorkoutProto.ProgramStepSub.Builder, net.studioblueplanet.tomtomwatch.WorkoutProto.ProgramStepSubOrBuilder> stepSubBuilder_;
      /**
       * <code>required .tutorial.ProgramStepSub stepSub = 8;</code>
       */
      public boolean hasStepSub() {
        return ((bitField0_ & 0x00000001) != 0);
      }
      /**
       * <code>required .tutorial.ProgramStepSub stepSub = 8;</code>
       */
      public net.studioblueplanet.tomtomwatch.WorkoutProto.ProgramStepSub getStepSub() {
        if (stepSubBuilder_ == null) {
          return stepSub_ == null ? net.studioblueplanet.tomtomwatch.WorkoutProto.ProgramStepSub.getDefaultInstance() : stepSub_;
        } else {
          return stepSubBuilder_.getMessage();
        }
      }
      /**
       * <code>required .tutorial.ProgramStepSub stepSub = 8;</code>
       */
      public Builder setStepSub(net.studioblueplanet.tomtomwatch.WorkoutProto.ProgramStepSub value) {
        if (stepSubBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          stepSub_ = value;
          onChanged();
        } else {
          stepSubBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000001;
        return this;
      }
      /**
       * <code>required .tutorial.ProgramStepSub stepSub = 8;</code>
       */
      public Builder setStepSub(
          net.studioblueplanet.tomtomwatch.WorkoutProto.ProgramStepSub.Builder builderForValue) {
        if (stepSubBuilder_ == null) {
          stepSub_ = builderForValue.build();
          onChanged();
        } else {
          stepSubBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000001;
        return this;
      }
      /**
       * <code>required .tutorial.ProgramStepSub stepSub = 8;</code>
       */
      public Builder mergeStepSub(net.studioblueplanet.tomtomwatch.WorkoutProto.ProgramStepSub value) {
        if (stepSubBuilder_ == null) {
          if (((bitField0_ & 0x00000001) != 0) &&
              stepSub_ != null &&
              stepSub_ != net.studioblueplanet.tomtomwatch.WorkoutProto.ProgramStepSub.getDefaultInstance()) {
            stepSub_ =
              net.studioblueplanet.tomtomwatch.WorkoutProto.ProgramStepSub.newBuilder(stepSub_).mergeFrom(value).buildPartial();
          } else {
            stepSub_ = value;
          }
          onChanged();
        } else {
          stepSubBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000001;
        return this;
      }
      /**
       * <code>required .tutorial.ProgramStepSub stepSub = 8;</code>
       */
      public Builder clearStepSub() {
        if (stepSubBuilder_ == null) {
          stepSub_ = null;
          onChanged();
        } else {
          stepSubBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000001);
        return this;
      }
      /**
       * <code>required .tutorial.ProgramStepSub stepSub = 8;</code>
       */
      public net.studioblueplanet.tomtomwatch.WorkoutProto.ProgramStepSub.Builder getStepSubBuilder() {
        bitField0_ |= 0x00000001;
        onChanged();
        return getStepSubFieldBuilder().getBuilder();
      }
      /**
       * <code>required .tutorial.ProgramStepSub stepSub = 8;</code>
       */
      public net.studioblueplanet.tomtomwatch.WorkoutProto.ProgramStepSubOrBuilder getStepSubOrBuilder() {
        if (stepSubBuilder_ != null) {
          return stepSubBuilder_.getMessageOrBuilder();
        } else {
          return stepSub_ == null ?
              net.studioblueplanet.tomtomwatch.WorkoutProto.ProgramStepSub.getDefaultInstance() : stepSub_;
        }
      }
      /**
       * <code>required .tutorial.ProgramStepSub stepSub = 8;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          net.studioblueplanet.tomtomwatch.WorkoutProto.ProgramStepSub, net.studioblueplanet.tomtomwatch.WorkoutProto.ProgramStepSub.Builder, net.studioblueplanet.tomtomwatch.WorkoutProto.ProgramStepSubOrBuilder> 
          getStepSubFieldBuilder() {
        if (stepSubBuilder_ == null) {
          stepSubBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              net.studioblueplanet.tomtomwatch.WorkoutProto.ProgramStepSub, net.studioblueplanet.tomtomwatch.WorkoutProto.ProgramStepSub.Builder, net.studioblueplanet.tomtomwatch.WorkoutProto.ProgramStepSubOrBuilder>(
                  getStepSub(),
                  getParentForChildren(),
                  isClean());
          stepSub_ = null;
        }
        return stepSubBuilder_;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:tutorial.ProgramStep)
    }

    // @@protoc_insertion_point(class_scope:tutorial.ProgramStep)
    private static final net.studioblueplanet.tomtomwatch.WorkoutProto.ProgramStep DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new net.studioblueplanet.tomtomwatch.WorkoutProto.ProgramStep();
    }

    public static net.studioblueplanet.tomtomwatch.WorkoutProto.ProgramStep getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    @java.lang.Deprecated public static final com.google.protobuf.Parser<ProgramStep>
        PARSER = new com.google.protobuf.AbstractParser<ProgramStep>() {
      @java.lang.Override
      public ProgramStep parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new ProgramStep(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<ProgramStep> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<ProgramStep> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public net.studioblueplanet.tomtomwatch.WorkoutProto.ProgramStep getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface ProgramStepSubOrBuilder extends
      // @@protoc_insertion_point(interface_extends:tutorial.ProgramStepSub)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     * refers to a description ID (e.g. 'warm up', 'work')
     * </pre>
     *
     * <code>required int32 stepName = 1;</code>
     */
    boolean hasStepName();
    /**
     * <pre>
     * refers to a description ID (e.g. 'warm up', 'work')
     * </pre>
     *
     * <code>required int32 stepName = 1;</code>
     */
    int getStepName();

    /**
     * <pre>
     * refers to a description ID (e.g. 'Get into the Fat Burn HR zone')
     * </pre>
     *
     * <code>required int32 stepDescription = 2;</code>
     */
    boolean hasStepDescription();
    /**
     * <pre>
     * refers to a description ID (e.g. 'Get into the Fat Burn HR zone')
     * </pre>
     *
     * <code>required int32 stepDescription = 2;</code>
     */
    int getStepDescription();

    /**
     * <pre>
     * 0, 1, 2, 3,...
     * </pre>
     *
     * <code>required int32 stepNumber = 4;</code>
     */
    boolean hasStepNumber();
    /**
     * <pre>
     * 0, 1, 2, 3,...
     * </pre>
     *
     * <code>required int32 stepNumber = 4;</code>
     */
    int getStepNumber();

    /**
     * <pre>
     * 1: warm up, 2: work, 3: rest, 4: ?, 5: cool down
     * </pre>
     *
     * <code>required int32 stepType = 6;</code>
     */
    boolean hasStepType();
    /**
     * <pre>
     * 1: warm up, 2: work, 3: rest, 4: ?, 5: cool down
     * </pre>
     *
     * <code>required int32 stepType = 6;</code>
     */
    int getStepType();

    /**
     * <pre>
     * Duration or distance (called Length by TomTom)
     * </pre>
     *
     * <code>optional .tutorial.Size stepSize = 7;</code>
     */
    boolean hasStepSize();
    /**
     * <pre>
     * Duration or distance (called Length by TomTom)
     * </pre>
     *
     * <code>optional .tutorial.Size stepSize = 7;</code>
     */
    net.studioblueplanet.tomtomwatch.WorkoutProto.Size getStepSize();
    /**
     * <pre>
     * Duration or distance (called Length by TomTom)
     * </pre>
     *
     * <code>optional .tutorial.Size stepSize = 7;</code>
     */
    net.studioblueplanet.tomtomwatch.WorkoutProto.SizeOrBuilder getStepSizeOrBuilder();

    /**
     * <pre>
     * Intensity goal (HR zone, pace, speed) of the step; optional
     * </pre>
     *
     * <code>optional .tutorial.Intensity intensity = 8;</code>
     */
    boolean hasIntensity();
    /**
     * <pre>
     * Intensity goal (HR zone, pace, speed) of the step; optional
     * </pre>
     *
     * <code>optional .tutorial.Intensity intensity = 8;</code>
     */
    net.studioblueplanet.tomtomwatch.WorkoutProto.Intensity getIntensity();
    /**
     * <pre>
     * Intensity goal (HR zone, pace, speed) of the step; optional
     * </pre>
     *
     * <code>optional .tutorial.Intensity intensity = 8;</code>
     */
    net.studioblueplanet.tomtomwatch.WorkoutProto.IntensityOrBuilder getIntensityOrBuilder();
  }
  /**
   * <pre>
   *#################################################################################################
   * 6th level: Program step sub
   *#################################################################################################
   * </pre>
   *
   * Protobuf type {@code tutorial.ProgramStepSub}
   */
  public  static final class ProgramStepSub extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:tutorial.ProgramStepSub)
      ProgramStepSubOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use ProgramStepSub.newBuilder() to construct.
    private ProgramStepSub(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private ProgramStepSub() {
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new ProgramStepSub();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private ProgramStepSub(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 8: {
              bitField0_ |= 0x00000001;
              stepName_ = input.readInt32();
              break;
            }
            case 16: {
              bitField0_ |= 0x00000002;
              stepDescription_ = input.readInt32();
              break;
            }
            case 32: {
              bitField0_ |= 0x00000004;
              stepNumber_ = input.readInt32();
              break;
            }
            case 48: {
              bitField0_ |= 0x00000008;
              stepType_ = input.readInt32();
              break;
            }
            case 58: {
              net.studioblueplanet.tomtomwatch.WorkoutProto.Size.Builder subBuilder = null;
              if (((bitField0_ & 0x00000010) != 0)) {
                subBuilder = stepSize_.toBuilder();
              }
              stepSize_ = input.readMessage(net.studioblueplanet.tomtomwatch.WorkoutProto.Size.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(stepSize_);
                stepSize_ = subBuilder.buildPartial();
              }
              bitField0_ |= 0x00000010;
              break;
            }
            case 66: {
              net.studioblueplanet.tomtomwatch.WorkoutProto.Intensity.Builder subBuilder = null;
              if (((bitField0_ & 0x00000020) != 0)) {
                subBuilder = intensity_.toBuilder();
              }
              intensity_ = input.readMessage(net.studioblueplanet.tomtomwatch.WorkoutProto.Intensity.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(intensity_);
                intensity_ = subBuilder.buildPartial();
              }
              bitField0_ |= 0x00000020;
              break;
            }
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return net.studioblueplanet.tomtomwatch.WorkoutProto.internal_static_tutorial_ProgramStepSub_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return net.studioblueplanet.tomtomwatch.WorkoutProto.internal_static_tutorial_ProgramStepSub_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              net.studioblueplanet.tomtomwatch.WorkoutProto.ProgramStepSub.class, net.studioblueplanet.tomtomwatch.WorkoutProto.ProgramStepSub.Builder.class);
    }

    private int bitField0_;
    public static final int STEPNAME_FIELD_NUMBER = 1;
    private int stepName_;
    /**
     * <pre>
     * refers to a description ID (e.g. 'warm up', 'work')
     * </pre>
     *
     * <code>required int32 stepName = 1;</code>
     */
    public boolean hasStepName() {
      return ((bitField0_ & 0x00000001) != 0);
    }
    /**
     * <pre>
     * refers to a description ID (e.g. 'warm up', 'work')
     * </pre>
     *
     * <code>required int32 stepName = 1;</code>
     */
    public int getStepName() {
      return stepName_;
    }

    public static final int STEPDESCRIPTION_FIELD_NUMBER = 2;
    private int stepDescription_;
    /**
     * <pre>
     * refers to a description ID (e.g. 'Get into the Fat Burn HR zone')
     * </pre>
     *
     * <code>required int32 stepDescription = 2;</code>
     */
    public boolean hasStepDescription() {
      return ((bitField0_ & 0x00000002) != 0);
    }
    /**
     * <pre>
     * refers to a description ID (e.g. 'Get into the Fat Burn HR zone')
     * </pre>
     *
     * <code>required int32 stepDescription = 2;</code>
     */
    public int getStepDescription() {
      return stepDescription_;
    }

    public static final int STEPNUMBER_FIELD_NUMBER = 4;
    private int stepNumber_;
    /**
     * <pre>
     * 0, 1, 2, 3,...
     * </pre>
     *
     * <code>required int32 stepNumber = 4;</code>
     */
    public boolean hasStepNumber() {
      return ((bitField0_ & 0x00000004) != 0);
    }
    /**
     * <pre>
     * 0, 1, 2, 3,...
     * </pre>
     *
     * <code>required int32 stepNumber = 4;</code>
     */
    public int getStepNumber() {
      return stepNumber_;
    }

    public static final int STEPTYPE_FIELD_NUMBER = 6;
    private int stepType_;
    /**
     * <pre>
     * 1: warm up, 2: work, 3: rest, 4: ?, 5: cool down
     * </pre>
     *
     * <code>required int32 stepType = 6;</code>
     */
    public boolean hasStepType() {
      return ((bitField0_ & 0x00000008) != 0);
    }
    /**
     * <pre>
     * 1: warm up, 2: work, 3: rest, 4: ?, 5: cool down
     * </pre>
     *
     * <code>required int32 stepType = 6;</code>
     */
    public int getStepType() {
      return stepType_;
    }

    public static final int STEPSIZE_FIELD_NUMBER = 7;
    private net.studioblueplanet.tomtomwatch.WorkoutProto.Size stepSize_;
    /**
     * <pre>
     * Duration or distance (called Length by TomTom)
     * </pre>
     *
     * <code>optional .tutorial.Size stepSize = 7;</code>
     */
    public boolean hasStepSize() {
      return ((bitField0_ & 0x00000010) != 0);
    }
    /**
     * <pre>
     * Duration or distance (called Length by TomTom)
     * </pre>
     *
     * <code>optional .tutorial.Size stepSize = 7;</code>
     */
    public net.studioblueplanet.tomtomwatch.WorkoutProto.Size getStepSize() {
      return stepSize_ == null ? net.studioblueplanet.tomtomwatch.WorkoutProto.Size.getDefaultInstance() : stepSize_;
    }
    /**
     * <pre>
     * Duration or distance (called Length by TomTom)
     * </pre>
     *
     * <code>optional .tutorial.Size stepSize = 7;</code>
     */
    public net.studioblueplanet.tomtomwatch.WorkoutProto.SizeOrBuilder getStepSizeOrBuilder() {
      return stepSize_ == null ? net.studioblueplanet.tomtomwatch.WorkoutProto.Size.getDefaultInstance() : stepSize_;
    }

    public static final int INTENSITY_FIELD_NUMBER = 8;
    private net.studioblueplanet.tomtomwatch.WorkoutProto.Intensity intensity_;
    /**
     * <pre>
     * Intensity goal (HR zone, pace, speed) of the step; optional
     * </pre>
     *
     * <code>optional .tutorial.Intensity intensity = 8;</code>
     */
    public boolean hasIntensity() {
      return ((bitField0_ & 0x00000020) != 0);
    }
    /**
     * <pre>
     * Intensity goal (HR zone, pace, speed) of the step; optional
     * </pre>
     *
     * <code>optional .tutorial.Intensity intensity = 8;</code>
     */
    public net.studioblueplanet.tomtomwatch.WorkoutProto.Intensity getIntensity() {
      return intensity_ == null ? net.studioblueplanet.tomtomwatch.WorkoutProto.Intensity.getDefaultInstance() : intensity_;
    }
    /**
     * <pre>
     * Intensity goal (HR zone, pace, speed) of the step; optional
     * </pre>
     *
     * <code>optional .tutorial.Intensity intensity = 8;</code>
     */
    public net.studioblueplanet.tomtomwatch.WorkoutProto.IntensityOrBuilder getIntensityOrBuilder() {
      return intensity_ == null ? net.studioblueplanet.tomtomwatch.WorkoutProto.Intensity.getDefaultInstance() : intensity_;
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      if (!hasStepName()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasStepDescription()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasStepNumber()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasStepType()) {
        memoizedIsInitialized = 0;
        return false;
      }
      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (((bitField0_ & 0x00000001) != 0)) {
        output.writeInt32(1, stepName_);
      }
      if (((bitField0_ & 0x00000002) != 0)) {
        output.writeInt32(2, stepDescription_);
      }
      if (((bitField0_ & 0x00000004) != 0)) {
        output.writeInt32(4, stepNumber_);
      }
      if (((bitField0_ & 0x00000008) != 0)) {
        output.writeInt32(6, stepType_);
      }
      if (((bitField0_ & 0x00000010) != 0)) {
        output.writeMessage(7, getStepSize());
      }
      if (((bitField0_ & 0x00000020) != 0)) {
        output.writeMessage(8, getIntensity());
      }
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(1, stepName_);
      }
      if (((bitField0_ & 0x00000002) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(2, stepDescription_);
      }
      if (((bitField0_ & 0x00000004) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(4, stepNumber_);
      }
      if (((bitField0_ & 0x00000008) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(6, stepType_);
      }
      if (((bitField0_ & 0x00000010) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(7, getStepSize());
      }
      if (((bitField0_ & 0x00000020) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(8, getIntensity());
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof net.studioblueplanet.tomtomwatch.WorkoutProto.ProgramStepSub)) {
        return super.equals(obj);
      }
      net.studioblueplanet.tomtomwatch.WorkoutProto.ProgramStepSub other = (net.studioblueplanet.tomtomwatch.WorkoutProto.ProgramStepSub) obj;

      if (hasStepName() != other.hasStepName()) return false;
      if (hasStepName()) {
        if (getStepName()
            != other.getStepName()) return false;
      }
      if (hasStepDescription() != other.hasStepDescription()) return false;
      if (hasStepDescription()) {
        if (getStepDescription()
            != other.getStepDescription()) return false;
      }
      if (hasStepNumber() != other.hasStepNumber()) return false;
      if (hasStepNumber()) {
        if (getStepNumber()
            != other.getStepNumber()) return false;
      }
      if (hasStepType() != other.hasStepType()) return false;
      if (hasStepType()) {
        if (getStepType()
            != other.getStepType()) return false;
      }
      if (hasStepSize() != other.hasStepSize()) return false;
      if (hasStepSize()) {
        if (!getStepSize()
            .equals(other.getStepSize())) return false;
      }
      if (hasIntensity() != other.hasIntensity()) return false;
      if (hasIntensity()) {
        if (!getIntensity()
            .equals(other.getIntensity())) return false;
      }
      if (!unknownFields.equals(other.unknownFields)) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (hasStepName()) {
        hash = (37 * hash) + STEPNAME_FIELD_NUMBER;
        hash = (53 * hash) + getStepName();
      }
      if (hasStepDescription()) {
        hash = (37 * hash) + STEPDESCRIPTION_FIELD_NUMBER;
        hash = (53 * hash) + getStepDescription();
      }
      if (hasStepNumber()) {
        hash = (37 * hash) + STEPNUMBER_FIELD_NUMBER;
        hash = (53 * hash) + getStepNumber();
      }
      if (hasStepType()) {
        hash = (37 * hash) + STEPTYPE_FIELD_NUMBER;
        hash = (53 * hash) + getStepType();
      }
      if (hasStepSize()) {
        hash = (37 * hash) + STEPSIZE_FIELD_NUMBER;
        hash = (53 * hash) + getStepSize().hashCode();
      }
      if (hasIntensity()) {
        hash = (37 * hash) + INTENSITY_FIELD_NUMBER;
        hash = (53 * hash) + getIntensity().hashCode();
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static net.studioblueplanet.tomtomwatch.WorkoutProto.ProgramStepSub parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static net.studioblueplanet.tomtomwatch.WorkoutProto.ProgramStepSub parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static net.studioblueplanet.tomtomwatch.WorkoutProto.ProgramStepSub parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static net.studioblueplanet.tomtomwatch.WorkoutProto.ProgramStepSub parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static net.studioblueplanet.tomtomwatch.WorkoutProto.ProgramStepSub parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static net.studioblueplanet.tomtomwatch.WorkoutProto.ProgramStepSub parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static net.studioblueplanet.tomtomwatch.WorkoutProto.ProgramStepSub parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static net.studioblueplanet.tomtomwatch.WorkoutProto.ProgramStepSub parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static net.studioblueplanet.tomtomwatch.WorkoutProto.ProgramStepSub parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static net.studioblueplanet.tomtomwatch.WorkoutProto.ProgramStepSub parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static net.studioblueplanet.tomtomwatch.WorkoutProto.ProgramStepSub parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static net.studioblueplanet.tomtomwatch.WorkoutProto.ProgramStepSub parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(net.studioblueplanet.tomtomwatch.WorkoutProto.ProgramStepSub prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     *#################################################################################################
     * 6th level: Program step sub
     *#################################################################################################
     * </pre>
     *
     * Protobuf type {@code tutorial.ProgramStepSub}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:tutorial.ProgramStepSub)
        net.studioblueplanet.tomtomwatch.WorkoutProto.ProgramStepSubOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return net.studioblueplanet.tomtomwatch.WorkoutProto.internal_static_tutorial_ProgramStepSub_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return net.studioblueplanet.tomtomwatch.WorkoutProto.internal_static_tutorial_ProgramStepSub_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                net.studioblueplanet.tomtomwatch.WorkoutProto.ProgramStepSub.class, net.studioblueplanet.tomtomwatch.WorkoutProto.ProgramStepSub.Builder.class);
      }

      // Construct using net.studioblueplanet.tomtomwatch.WorkoutProto.ProgramStepSub.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
          getStepSizeFieldBuilder();
          getIntensityFieldBuilder();
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        stepName_ = 0;
        bitField0_ = (bitField0_ & ~0x00000001);
        stepDescription_ = 0;
        bitField0_ = (bitField0_ & ~0x00000002);
        stepNumber_ = 0;
        bitField0_ = (bitField0_ & ~0x00000004);
        stepType_ = 0;
        bitField0_ = (bitField0_ & ~0x00000008);
        if (stepSizeBuilder_ == null) {
          stepSize_ = null;
        } else {
          stepSizeBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000010);
        if (intensityBuilder_ == null) {
          intensity_ = null;
        } else {
          intensityBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000020);
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return net.studioblueplanet.tomtomwatch.WorkoutProto.internal_static_tutorial_ProgramStepSub_descriptor;
      }

      @java.lang.Override
      public net.studioblueplanet.tomtomwatch.WorkoutProto.ProgramStepSub getDefaultInstanceForType() {
        return net.studioblueplanet.tomtomwatch.WorkoutProto.ProgramStepSub.getDefaultInstance();
      }

      @java.lang.Override
      public net.studioblueplanet.tomtomwatch.WorkoutProto.ProgramStepSub build() {
        net.studioblueplanet.tomtomwatch.WorkoutProto.ProgramStepSub result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public net.studioblueplanet.tomtomwatch.WorkoutProto.ProgramStepSub buildPartial() {
        net.studioblueplanet.tomtomwatch.WorkoutProto.ProgramStepSub result = new net.studioblueplanet.tomtomwatch.WorkoutProto.ProgramStepSub(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) != 0)) {
          result.stepName_ = stepName_;
          to_bitField0_ |= 0x00000001;
        }
        if (((from_bitField0_ & 0x00000002) != 0)) {
          result.stepDescription_ = stepDescription_;
          to_bitField0_ |= 0x00000002;
        }
        if (((from_bitField0_ & 0x00000004) != 0)) {
          result.stepNumber_ = stepNumber_;
          to_bitField0_ |= 0x00000004;
        }
        if (((from_bitField0_ & 0x00000008) != 0)) {
          result.stepType_ = stepType_;
          to_bitField0_ |= 0x00000008;
        }
        if (((from_bitField0_ & 0x00000010) != 0)) {
          if (stepSizeBuilder_ == null) {
            result.stepSize_ = stepSize_;
          } else {
            result.stepSize_ = stepSizeBuilder_.build();
          }
          to_bitField0_ |= 0x00000010;
        }
        if (((from_bitField0_ & 0x00000020) != 0)) {
          if (intensityBuilder_ == null) {
            result.intensity_ = intensity_;
          } else {
            result.intensity_ = intensityBuilder_.build();
          }
          to_bitField0_ |= 0x00000020;
        }
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof net.studioblueplanet.tomtomwatch.WorkoutProto.ProgramStepSub) {
          return mergeFrom((net.studioblueplanet.tomtomwatch.WorkoutProto.ProgramStepSub)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(net.studioblueplanet.tomtomwatch.WorkoutProto.ProgramStepSub other) {
        if (other == net.studioblueplanet.tomtomwatch.WorkoutProto.ProgramStepSub.getDefaultInstance()) return this;
        if (other.hasStepName()) {
          setStepName(other.getStepName());
        }
        if (other.hasStepDescription()) {
          setStepDescription(other.getStepDescription());
        }
        if (other.hasStepNumber()) {
          setStepNumber(other.getStepNumber());
        }
        if (other.hasStepType()) {
          setStepType(other.getStepType());
        }
        if (other.hasStepSize()) {
          mergeStepSize(other.getStepSize());
        }
        if (other.hasIntensity()) {
          mergeIntensity(other.getIntensity());
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        if (!hasStepName()) {
          return false;
        }
        if (!hasStepDescription()) {
          return false;
        }
        if (!hasStepNumber()) {
          return false;
        }
        if (!hasStepType()) {
          return false;
        }
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        net.studioblueplanet.tomtomwatch.WorkoutProto.ProgramStepSub parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (net.studioblueplanet.tomtomwatch.WorkoutProto.ProgramStepSub) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private int stepName_ ;
      /**
       * <pre>
       * refers to a description ID (e.g. 'warm up', 'work')
       * </pre>
       *
       * <code>required int32 stepName = 1;</code>
       */
      public boolean hasStepName() {
        return ((bitField0_ & 0x00000001) != 0);
      }
      /**
       * <pre>
       * refers to a description ID (e.g. 'warm up', 'work')
       * </pre>
       *
       * <code>required int32 stepName = 1;</code>
       */
      public int getStepName() {
        return stepName_;
      }
      /**
       * <pre>
       * refers to a description ID (e.g. 'warm up', 'work')
       * </pre>
       *
       * <code>required int32 stepName = 1;</code>
       */
      public Builder setStepName(int value) {
        bitField0_ |= 0x00000001;
        stepName_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * refers to a description ID (e.g. 'warm up', 'work')
       * </pre>
       *
       * <code>required int32 stepName = 1;</code>
       */
      public Builder clearStepName() {
        bitField0_ = (bitField0_ & ~0x00000001);
        stepName_ = 0;
        onChanged();
        return this;
      }

      private int stepDescription_ ;
      /**
       * <pre>
       * refers to a description ID (e.g. 'Get into the Fat Burn HR zone')
       * </pre>
       *
       * <code>required int32 stepDescription = 2;</code>
       */
      public boolean hasStepDescription() {
        return ((bitField0_ & 0x00000002) != 0);
      }
      /**
       * <pre>
       * refers to a description ID (e.g. 'Get into the Fat Burn HR zone')
       * </pre>
       *
       * <code>required int32 stepDescription = 2;</code>
       */
      public int getStepDescription() {
        return stepDescription_;
      }
      /**
       * <pre>
       * refers to a description ID (e.g. 'Get into the Fat Burn HR zone')
       * </pre>
       *
       * <code>required int32 stepDescription = 2;</code>
       */
      public Builder setStepDescription(int value) {
        bitField0_ |= 0x00000002;
        stepDescription_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * refers to a description ID (e.g. 'Get into the Fat Burn HR zone')
       * </pre>
       *
       * <code>required int32 stepDescription = 2;</code>
       */
      public Builder clearStepDescription() {
        bitField0_ = (bitField0_ & ~0x00000002);
        stepDescription_ = 0;
        onChanged();
        return this;
      }

      private int stepNumber_ ;
      /**
       * <pre>
       * 0, 1, 2, 3,...
       * </pre>
       *
       * <code>required int32 stepNumber = 4;</code>
       */
      public boolean hasStepNumber() {
        return ((bitField0_ & 0x00000004) != 0);
      }
      /**
       * <pre>
       * 0, 1, 2, 3,...
       * </pre>
       *
       * <code>required int32 stepNumber = 4;</code>
       */
      public int getStepNumber() {
        return stepNumber_;
      }
      /**
       * <pre>
       * 0, 1, 2, 3,...
       * </pre>
       *
       * <code>required int32 stepNumber = 4;</code>
       */
      public Builder setStepNumber(int value) {
        bitField0_ |= 0x00000004;
        stepNumber_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * 0, 1, 2, 3,...
       * </pre>
       *
       * <code>required int32 stepNumber = 4;</code>
       */
      public Builder clearStepNumber() {
        bitField0_ = (bitField0_ & ~0x00000004);
        stepNumber_ = 0;
        onChanged();
        return this;
      }

      private int stepType_ ;
      /**
       * <pre>
       * 1: warm up, 2: work, 3: rest, 4: ?, 5: cool down
       * </pre>
       *
       * <code>required int32 stepType = 6;</code>
       */
      public boolean hasStepType() {
        return ((bitField0_ & 0x00000008) != 0);
      }
      /**
       * <pre>
       * 1: warm up, 2: work, 3: rest, 4: ?, 5: cool down
       * </pre>
       *
       * <code>required int32 stepType = 6;</code>
       */
      public int getStepType() {
        return stepType_;
      }
      /**
       * <pre>
       * 1: warm up, 2: work, 3: rest, 4: ?, 5: cool down
       * </pre>
       *
       * <code>required int32 stepType = 6;</code>
       */
      public Builder setStepType(int value) {
        bitField0_ |= 0x00000008;
        stepType_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * 1: warm up, 2: work, 3: rest, 4: ?, 5: cool down
       * </pre>
       *
       * <code>required int32 stepType = 6;</code>
       */
      public Builder clearStepType() {
        bitField0_ = (bitField0_ & ~0x00000008);
        stepType_ = 0;
        onChanged();
        return this;
      }

      private net.studioblueplanet.tomtomwatch.WorkoutProto.Size stepSize_;
      private com.google.protobuf.SingleFieldBuilderV3<
          net.studioblueplanet.tomtomwatch.WorkoutProto.Size, net.studioblueplanet.tomtomwatch.WorkoutProto.Size.Builder, net.studioblueplanet.tomtomwatch.WorkoutProto.SizeOrBuilder> stepSizeBuilder_;
      /**
       * <pre>
       * Duration or distance (called Length by TomTom)
       * </pre>
       *
       * <code>optional .tutorial.Size stepSize = 7;</code>
       */
      public boolean hasStepSize() {
        return ((bitField0_ & 0x00000010) != 0);
      }
      /**
       * <pre>
       * Duration or distance (called Length by TomTom)
       * </pre>
       *
       * <code>optional .tutorial.Size stepSize = 7;</code>
       */
      public net.studioblueplanet.tomtomwatch.WorkoutProto.Size getStepSize() {
        if (stepSizeBuilder_ == null) {
          return stepSize_ == null ? net.studioblueplanet.tomtomwatch.WorkoutProto.Size.getDefaultInstance() : stepSize_;
        } else {
          return stepSizeBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       * Duration or distance (called Length by TomTom)
       * </pre>
       *
       * <code>optional .tutorial.Size stepSize = 7;</code>
       */
      public Builder setStepSize(net.studioblueplanet.tomtomwatch.WorkoutProto.Size value) {
        if (stepSizeBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          stepSize_ = value;
          onChanged();
        } else {
          stepSizeBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000010;
        return this;
      }
      /**
       * <pre>
       * Duration or distance (called Length by TomTom)
       * </pre>
       *
       * <code>optional .tutorial.Size stepSize = 7;</code>
       */
      public Builder setStepSize(
          net.studioblueplanet.tomtomwatch.WorkoutProto.Size.Builder builderForValue) {
        if (stepSizeBuilder_ == null) {
          stepSize_ = builderForValue.build();
          onChanged();
        } else {
          stepSizeBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000010;
        return this;
      }
      /**
       * <pre>
       * Duration or distance (called Length by TomTom)
       * </pre>
       *
       * <code>optional .tutorial.Size stepSize = 7;</code>
       */
      public Builder mergeStepSize(net.studioblueplanet.tomtomwatch.WorkoutProto.Size value) {
        if (stepSizeBuilder_ == null) {
          if (((bitField0_ & 0x00000010) != 0) &&
              stepSize_ != null &&
              stepSize_ != net.studioblueplanet.tomtomwatch.WorkoutProto.Size.getDefaultInstance()) {
            stepSize_ =
              net.studioblueplanet.tomtomwatch.WorkoutProto.Size.newBuilder(stepSize_).mergeFrom(value).buildPartial();
          } else {
            stepSize_ = value;
          }
          onChanged();
        } else {
          stepSizeBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000010;
        return this;
      }
      /**
       * <pre>
       * Duration or distance (called Length by TomTom)
       * </pre>
       *
       * <code>optional .tutorial.Size stepSize = 7;</code>
       */
      public Builder clearStepSize() {
        if (stepSizeBuilder_ == null) {
          stepSize_ = null;
          onChanged();
        } else {
          stepSizeBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000010);
        return this;
      }
      /**
       * <pre>
       * Duration or distance (called Length by TomTom)
       * </pre>
       *
       * <code>optional .tutorial.Size stepSize = 7;</code>
       */
      public net.studioblueplanet.tomtomwatch.WorkoutProto.Size.Builder getStepSizeBuilder() {
        bitField0_ |= 0x00000010;
        onChanged();
        return getStepSizeFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       * Duration or distance (called Length by TomTom)
       * </pre>
       *
       * <code>optional .tutorial.Size stepSize = 7;</code>
       */
      public net.studioblueplanet.tomtomwatch.WorkoutProto.SizeOrBuilder getStepSizeOrBuilder() {
        if (stepSizeBuilder_ != null) {
          return stepSizeBuilder_.getMessageOrBuilder();
        } else {
          return stepSize_ == null ?
              net.studioblueplanet.tomtomwatch.WorkoutProto.Size.getDefaultInstance() : stepSize_;
        }
      }
      /**
       * <pre>
       * Duration or distance (called Length by TomTom)
       * </pre>
       *
       * <code>optional .tutorial.Size stepSize = 7;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          net.studioblueplanet.tomtomwatch.WorkoutProto.Size, net.studioblueplanet.tomtomwatch.WorkoutProto.Size.Builder, net.studioblueplanet.tomtomwatch.WorkoutProto.SizeOrBuilder> 
          getStepSizeFieldBuilder() {
        if (stepSizeBuilder_ == null) {
          stepSizeBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              net.studioblueplanet.tomtomwatch.WorkoutProto.Size, net.studioblueplanet.tomtomwatch.WorkoutProto.Size.Builder, net.studioblueplanet.tomtomwatch.WorkoutProto.SizeOrBuilder>(
                  getStepSize(),
                  getParentForChildren(),
                  isClean());
          stepSize_ = null;
        }
        return stepSizeBuilder_;
      }

      private net.studioblueplanet.tomtomwatch.WorkoutProto.Intensity intensity_;
      private com.google.protobuf.SingleFieldBuilderV3<
          net.studioblueplanet.tomtomwatch.WorkoutProto.Intensity, net.studioblueplanet.tomtomwatch.WorkoutProto.Intensity.Builder, net.studioblueplanet.tomtomwatch.WorkoutProto.IntensityOrBuilder> intensityBuilder_;
      /**
       * <pre>
       * Intensity goal (HR zone, pace, speed) of the step; optional
       * </pre>
       *
       * <code>optional .tutorial.Intensity intensity = 8;</code>
       */
      public boolean hasIntensity() {
        return ((bitField0_ & 0x00000020) != 0);
      }
      /**
       * <pre>
       * Intensity goal (HR zone, pace, speed) of the step; optional
       * </pre>
       *
       * <code>optional .tutorial.Intensity intensity = 8;</code>
       */
      public net.studioblueplanet.tomtomwatch.WorkoutProto.Intensity getIntensity() {
        if (intensityBuilder_ == null) {
          return intensity_ == null ? net.studioblueplanet.tomtomwatch.WorkoutProto.Intensity.getDefaultInstance() : intensity_;
        } else {
          return intensityBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       * Intensity goal (HR zone, pace, speed) of the step; optional
       * </pre>
       *
       * <code>optional .tutorial.Intensity intensity = 8;</code>
       */
      public Builder setIntensity(net.studioblueplanet.tomtomwatch.WorkoutProto.Intensity value) {
        if (intensityBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          intensity_ = value;
          onChanged();
        } else {
          intensityBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000020;
        return this;
      }
      /**
       * <pre>
       * Intensity goal (HR zone, pace, speed) of the step; optional
       * </pre>
       *
       * <code>optional .tutorial.Intensity intensity = 8;</code>
       */
      public Builder setIntensity(
          net.studioblueplanet.tomtomwatch.WorkoutProto.Intensity.Builder builderForValue) {
        if (intensityBuilder_ == null) {
          intensity_ = builderForValue.build();
          onChanged();
        } else {
          intensityBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000020;
        return this;
      }
      /**
       * <pre>
       * Intensity goal (HR zone, pace, speed) of the step; optional
       * </pre>
       *
       * <code>optional .tutorial.Intensity intensity = 8;</code>
       */
      public Builder mergeIntensity(net.studioblueplanet.tomtomwatch.WorkoutProto.Intensity value) {
        if (intensityBuilder_ == null) {
          if (((bitField0_ & 0x00000020) != 0) &&
              intensity_ != null &&
              intensity_ != net.studioblueplanet.tomtomwatch.WorkoutProto.Intensity.getDefaultInstance()) {
            intensity_ =
              net.studioblueplanet.tomtomwatch.WorkoutProto.Intensity.newBuilder(intensity_).mergeFrom(value).buildPartial();
          } else {
            intensity_ = value;
          }
          onChanged();
        } else {
          intensityBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000020;
        return this;
      }
      /**
       * <pre>
       * Intensity goal (HR zone, pace, speed) of the step; optional
       * </pre>
       *
       * <code>optional .tutorial.Intensity intensity = 8;</code>
       */
      public Builder clearIntensity() {
        if (intensityBuilder_ == null) {
          intensity_ = null;
          onChanged();
        } else {
          intensityBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000020);
        return this;
      }
      /**
       * <pre>
       * Intensity goal (HR zone, pace, speed) of the step; optional
       * </pre>
       *
       * <code>optional .tutorial.Intensity intensity = 8;</code>
       */
      public net.studioblueplanet.tomtomwatch.WorkoutProto.Intensity.Builder getIntensityBuilder() {
        bitField0_ |= 0x00000020;
        onChanged();
        return getIntensityFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       * Intensity goal (HR zone, pace, speed) of the step; optional
       * </pre>
       *
       * <code>optional .tutorial.Intensity intensity = 8;</code>
       */
      public net.studioblueplanet.tomtomwatch.WorkoutProto.IntensityOrBuilder getIntensityOrBuilder() {
        if (intensityBuilder_ != null) {
          return intensityBuilder_.getMessageOrBuilder();
        } else {
          return intensity_ == null ?
              net.studioblueplanet.tomtomwatch.WorkoutProto.Intensity.getDefaultInstance() : intensity_;
        }
      }
      /**
       * <pre>
       * Intensity goal (HR zone, pace, speed) of the step; optional
       * </pre>
       *
       * <code>optional .tutorial.Intensity intensity = 8;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          net.studioblueplanet.tomtomwatch.WorkoutProto.Intensity, net.studioblueplanet.tomtomwatch.WorkoutProto.Intensity.Builder, net.studioblueplanet.tomtomwatch.WorkoutProto.IntensityOrBuilder> 
          getIntensityFieldBuilder() {
        if (intensityBuilder_ == null) {
          intensityBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              net.studioblueplanet.tomtomwatch.WorkoutProto.Intensity, net.studioblueplanet.tomtomwatch.WorkoutProto.Intensity.Builder, net.studioblueplanet.tomtomwatch.WorkoutProto.IntensityOrBuilder>(
                  getIntensity(),
                  getParentForChildren(),
                  isClean());
          intensity_ = null;
        }
        return intensityBuilder_;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:tutorial.ProgramStepSub)
    }

    // @@protoc_insertion_point(class_scope:tutorial.ProgramStepSub)
    private static final net.studioblueplanet.tomtomwatch.WorkoutProto.ProgramStepSub DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new net.studioblueplanet.tomtomwatch.WorkoutProto.ProgramStepSub();
    }

    public static net.studioblueplanet.tomtomwatch.WorkoutProto.ProgramStepSub getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    @java.lang.Deprecated public static final com.google.protobuf.Parser<ProgramStepSub>
        PARSER = new com.google.protobuf.AbstractParser<ProgramStepSub>() {
      @java.lang.Override
      public ProgramStepSub parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new ProgramStepSub(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<ProgramStepSub> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<ProgramStepSub> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public net.studioblueplanet.tomtomwatch.WorkoutProto.ProgramStepSub getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface SizeOrBuilder extends
      // @@protoc_insertion_point(interface_extends:tutorial.Size)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     * duration in second
     * </pre>
     *
     * <code>optional int32 duration = 1;</code>
     */
    boolean hasDuration();
    /**
     * <pre>
     * duration in second
     * </pre>
     *
     * <code>optional int32 duration = 1;</code>
     */
    int getDuration();

    /**
     * <pre>
     * min 10000: distance in mm
     * </pre>
     *
     * <code>optional int32 distance = 2;</code>
     */
    boolean hasDistance();
    /**
     * <pre>
     * min 10000: distance in mm
     * </pre>
     *
     * <code>optional int32 distance = 2;</code>
     */
    int getDistance();

    /**
     * <pre>
     * HR zone to reach: 1: Easy 2: Fat burn, 3: Cardio, 4: Perform, 5: Peak (intensity not used)
     * </pre>
     *
     * <code>optional int32 reachZone = 4;</code>
     */
    boolean hasReachZone();
    /**
     * <pre>
     * HR zone to reach: 1: Easy 2: Fat burn, 3: Cardio, 4: Perform, 5: Peak (intensity not used)
     * </pre>
     *
     * <code>optional int32 reachZone = 4;</code>
     */
    int getReachZone();

    /**
     * <pre>
     * value is always 1
     * </pre>
     *
     * <code>optional int32 manual = 5;</code>
     */
    boolean hasManual();
    /**
     * <pre>
     * value is always 1
     * </pre>
     *
     * <code>optional int32 manual = 5;</code>
     */
    int getManual();
  }
  /**
   * <pre>
   *#################################################################################################
   * 7th level: Step size in terms of duration or distance
   *#################################################################################################
   * </pre>
   *
   * Protobuf type {@code tutorial.Size}
   */
  public  static final class Size extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:tutorial.Size)
      SizeOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use Size.newBuilder() to construct.
    private Size(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private Size() {
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new Size();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private Size(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 8: {
              bitField0_ |= 0x00000001;
              duration_ = input.readInt32();
              break;
            }
            case 16: {
              bitField0_ |= 0x00000002;
              distance_ = input.readInt32();
              break;
            }
            case 32: {
              bitField0_ |= 0x00000004;
              reachZone_ = input.readInt32();
              break;
            }
            case 40: {
              bitField0_ |= 0x00000008;
              manual_ = input.readInt32();
              break;
            }
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return net.studioblueplanet.tomtomwatch.WorkoutProto.internal_static_tutorial_Size_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return net.studioblueplanet.tomtomwatch.WorkoutProto.internal_static_tutorial_Size_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              net.studioblueplanet.tomtomwatch.WorkoutProto.Size.class, net.studioblueplanet.tomtomwatch.WorkoutProto.Size.Builder.class);
    }

    private int bitField0_;
    public static final int DURATION_FIELD_NUMBER = 1;
    private int duration_;
    /**
     * <pre>
     * duration in second
     * </pre>
     *
     * <code>optional int32 duration = 1;</code>
     */
    public boolean hasDuration() {
      return ((bitField0_ & 0x00000001) != 0);
    }
    /**
     * <pre>
     * duration in second
     * </pre>
     *
     * <code>optional int32 duration = 1;</code>
     */
    public int getDuration() {
      return duration_;
    }

    public static final int DISTANCE_FIELD_NUMBER = 2;
    private int distance_;
    /**
     * <pre>
     * min 10000: distance in mm
     * </pre>
     *
     * <code>optional int32 distance = 2;</code>
     */
    public boolean hasDistance() {
      return ((bitField0_ & 0x00000002) != 0);
    }
    /**
     * <pre>
     * min 10000: distance in mm
     * </pre>
     *
     * <code>optional int32 distance = 2;</code>
     */
    public int getDistance() {
      return distance_;
    }

    public static final int REACHZONE_FIELD_NUMBER = 4;
    private int reachZone_;
    /**
     * <pre>
     * HR zone to reach: 1: Easy 2: Fat burn, 3: Cardio, 4: Perform, 5: Peak (intensity not used)
     * </pre>
     *
     * <code>optional int32 reachZone = 4;</code>
     */
    public boolean hasReachZone() {
      return ((bitField0_ & 0x00000004) != 0);
    }
    /**
     * <pre>
     * HR zone to reach: 1: Easy 2: Fat burn, 3: Cardio, 4: Perform, 5: Peak (intensity not used)
     * </pre>
     *
     * <code>optional int32 reachZone = 4;</code>
     */
    public int getReachZone() {
      return reachZone_;
    }

    public static final int MANUAL_FIELD_NUMBER = 5;
    private int manual_;
    /**
     * <pre>
     * value is always 1
     * </pre>
     *
     * <code>optional int32 manual = 5;</code>
     */
    public boolean hasManual() {
      return ((bitField0_ & 0x00000008) != 0);
    }
    /**
     * <pre>
     * value is always 1
     * </pre>
     *
     * <code>optional int32 manual = 5;</code>
     */
    public int getManual() {
      return manual_;
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (((bitField0_ & 0x00000001) != 0)) {
        output.writeInt32(1, duration_);
      }
      if (((bitField0_ & 0x00000002) != 0)) {
        output.writeInt32(2, distance_);
      }
      if (((bitField0_ & 0x00000004) != 0)) {
        output.writeInt32(4, reachZone_);
      }
      if (((bitField0_ & 0x00000008) != 0)) {
        output.writeInt32(5, manual_);
      }
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(1, duration_);
      }
      if (((bitField0_ & 0x00000002) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(2, distance_);
      }
      if (((bitField0_ & 0x00000004) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(4, reachZone_);
      }
      if (((bitField0_ & 0x00000008) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(5, manual_);
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof net.studioblueplanet.tomtomwatch.WorkoutProto.Size)) {
        return super.equals(obj);
      }
      net.studioblueplanet.tomtomwatch.WorkoutProto.Size other = (net.studioblueplanet.tomtomwatch.WorkoutProto.Size) obj;

      if (hasDuration() != other.hasDuration()) return false;
      if (hasDuration()) {
        if (getDuration()
            != other.getDuration()) return false;
      }
      if (hasDistance() != other.hasDistance()) return false;
      if (hasDistance()) {
        if (getDistance()
            != other.getDistance()) return false;
      }
      if (hasReachZone() != other.hasReachZone()) return false;
      if (hasReachZone()) {
        if (getReachZone()
            != other.getReachZone()) return false;
      }
      if (hasManual() != other.hasManual()) return false;
      if (hasManual()) {
        if (getManual()
            != other.getManual()) return false;
      }
      if (!unknownFields.equals(other.unknownFields)) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (hasDuration()) {
        hash = (37 * hash) + DURATION_FIELD_NUMBER;
        hash = (53 * hash) + getDuration();
      }
      if (hasDistance()) {
        hash = (37 * hash) + DISTANCE_FIELD_NUMBER;
        hash = (53 * hash) + getDistance();
      }
      if (hasReachZone()) {
        hash = (37 * hash) + REACHZONE_FIELD_NUMBER;
        hash = (53 * hash) + getReachZone();
      }
      if (hasManual()) {
        hash = (37 * hash) + MANUAL_FIELD_NUMBER;
        hash = (53 * hash) + getManual();
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static net.studioblueplanet.tomtomwatch.WorkoutProto.Size parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static net.studioblueplanet.tomtomwatch.WorkoutProto.Size parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static net.studioblueplanet.tomtomwatch.WorkoutProto.Size parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static net.studioblueplanet.tomtomwatch.WorkoutProto.Size parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static net.studioblueplanet.tomtomwatch.WorkoutProto.Size parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static net.studioblueplanet.tomtomwatch.WorkoutProto.Size parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static net.studioblueplanet.tomtomwatch.WorkoutProto.Size parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static net.studioblueplanet.tomtomwatch.WorkoutProto.Size parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static net.studioblueplanet.tomtomwatch.WorkoutProto.Size parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static net.studioblueplanet.tomtomwatch.WorkoutProto.Size parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static net.studioblueplanet.tomtomwatch.WorkoutProto.Size parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static net.studioblueplanet.tomtomwatch.WorkoutProto.Size parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(net.studioblueplanet.tomtomwatch.WorkoutProto.Size prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     *#################################################################################################
     * 7th level: Step size in terms of duration or distance
     *#################################################################################################
     * </pre>
     *
     * Protobuf type {@code tutorial.Size}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:tutorial.Size)
        net.studioblueplanet.tomtomwatch.WorkoutProto.SizeOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return net.studioblueplanet.tomtomwatch.WorkoutProto.internal_static_tutorial_Size_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return net.studioblueplanet.tomtomwatch.WorkoutProto.internal_static_tutorial_Size_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                net.studioblueplanet.tomtomwatch.WorkoutProto.Size.class, net.studioblueplanet.tomtomwatch.WorkoutProto.Size.Builder.class);
      }

      // Construct using net.studioblueplanet.tomtomwatch.WorkoutProto.Size.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        duration_ = 0;
        bitField0_ = (bitField0_ & ~0x00000001);
        distance_ = 0;
        bitField0_ = (bitField0_ & ~0x00000002);
        reachZone_ = 0;
        bitField0_ = (bitField0_ & ~0x00000004);
        manual_ = 0;
        bitField0_ = (bitField0_ & ~0x00000008);
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return net.studioblueplanet.tomtomwatch.WorkoutProto.internal_static_tutorial_Size_descriptor;
      }

      @java.lang.Override
      public net.studioblueplanet.tomtomwatch.WorkoutProto.Size getDefaultInstanceForType() {
        return net.studioblueplanet.tomtomwatch.WorkoutProto.Size.getDefaultInstance();
      }

      @java.lang.Override
      public net.studioblueplanet.tomtomwatch.WorkoutProto.Size build() {
        net.studioblueplanet.tomtomwatch.WorkoutProto.Size result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public net.studioblueplanet.tomtomwatch.WorkoutProto.Size buildPartial() {
        net.studioblueplanet.tomtomwatch.WorkoutProto.Size result = new net.studioblueplanet.tomtomwatch.WorkoutProto.Size(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) != 0)) {
          result.duration_ = duration_;
          to_bitField0_ |= 0x00000001;
        }
        if (((from_bitField0_ & 0x00000002) != 0)) {
          result.distance_ = distance_;
          to_bitField0_ |= 0x00000002;
        }
        if (((from_bitField0_ & 0x00000004) != 0)) {
          result.reachZone_ = reachZone_;
          to_bitField0_ |= 0x00000004;
        }
        if (((from_bitField0_ & 0x00000008) != 0)) {
          result.manual_ = manual_;
          to_bitField0_ |= 0x00000008;
        }
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof net.studioblueplanet.tomtomwatch.WorkoutProto.Size) {
          return mergeFrom((net.studioblueplanet.tomtomwatch.WorkoutProto.Size)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(net.studioblueplanet.tomtomwatch.WorkoutProto.Size other) {
        if (other == net.studioblueplanet.tomtomwatch.WorkoutProto.Size.getDefaultInstance()) return this;
        if (other.hasDuration()) {
          setDuration(other.getDuration());
        }
        if (other.hasDistance()) {
          setDistance(other.getDistance());
        }
        if (other.hasReachZone()) {
          setReachZone(other.getReachZone());
        }
        if (other.hasManual()) {
          setManual(other.getManual());
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        net.studioblueplanet.tomtomwatch.WorkoutProto.Size parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (net.studioblueplanet.tomtomwatch.WorkoutProto.Size) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private int duration_ ;
      /**
       * <pre>
       * duration in second
       * </pre>
       *
       * <code>optional int32 duration = 1;</code>
       */
      public boolean hasDuration() {
        return ((bitField0_ & 0x00000001) != 0);
      }
      /**
       * <pre>
       * duration in second
       * </pre>
       *
       * <code>optional int32 duration = 1;</code>
       */
      public int getDuration() {
        return duration_;
      }
      /**
       * <pre>
       * duration in second
       * </pre>
       *
       * <code>optional int32 duration = 1;</code>
       */
      public Builder setDuration(int value) {
        bitField0_ |= 0x00000001;
        duration_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * duration in second
       * </pre>
       *
       * <code>optional int32 duration = 1;</code>
       */
      public Builder clearDuration() {
        bitField0_ = (bitField0_ & ~0x00000001);
        duration_ = 0;
        onChanged();
        return this;
      }

      private int distance_ ;
      /**
       * <pre>
       * min 10000: distance in mm
       * </pre>
       *
       * <code>optional int32 distance = 2;</code>
       */
      public boolean hasDistance() {
        return ((bitField0_ & 0x00000002) != 0);
      }
      /**
       * <pre>
       * min 10000: distance in mm
       * </pre>
       *
       * <code>optional int32 distance = 2;</code>
       */
      public int getDistance() {
        return distance_;
      }
      /**
       * <pre>
       * min 10000: distance in mm
       * </pre>
       *
       * <code>optional int32 distance = 2;</code>
       */
      public Builder setDistance(int value) {
        bitField0_ |= 0x00000002;
        distance_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * min 10000: distance in mm
       * </pre>
       *
       * <code>optional int32 distance = 2;</code>
       */
      public Builder clearDistance() {
        bitField0_ = (bitField0_ & ~0x00000002);
        distance_ = 0;
        onChanged();
        return this;
      }

      private int reachZone_ ;
      /**
       * <pre>
       * HR zone to reach: 1: Easy 2: Fat burn, 3: Cardio, 4: Perform, 5: Peak (intensity not used)
       * </pre>
       *
       * <code>optional int32 reachZone = 4;</code>
       */
      public boolean hasReachZone() {
        return ((bitField0_ & 0x00000004) != 0);
      }
      /**
       * <pre>
       * HR zone to reach: 1: Easy 2: Fat burn, 3: Cardio, 4: Perform, 5: Peak (intensity not used)
       * </pre>
       *
       * <code>optional int32 reachZone = 4;</code>
       */
      public int getReachZone() {
        return reachZone_;
      }
      /**
       * <pre>
       * HR zone to reach: 1: Easy 2: Fat burn, 3: Cardio, 4: Perform, 5: Peak (intensity not used)
       * </pre>
       *
       * <code>optional int32 reachZone = 4;</code>
       */
      public Builder setReachZone(int value) {
        bitField0_ |= 0x00000004;
        reachZone_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * HR zone to reach: 1: Easy 2: Fat burn, 3: Cardio, 4: Perform, 5: Peak (intensity not used)
       * </pre>
       *
       * <code>optional int32 reachZone = 4;</code>
       */
      public Builder clearReachZone() {
        bitField0_ = (bitField0_ & ~0x00000004);
        reachZone_ = 0;
        onChanged();
        return this;
      }

      private int manual_ ;
      /**
       * <pre>
       * value is always 1
       * </pre>
       *
       * <code>optional int32 manual = 5;</code>
       */
      public boolean hasManual() {
        return ((bitField0_ & 0x00000008) != 0);
      }
      /**
       * <pre>
       * value is always 1
       * </pre>
       *
       * <code>optional int32 manual = 5;</code>
       */
      public int getManual() {
        return manual_;
      }
      /**
       * <pre>
       * value is always 1
       * </pre>
       *
       * <code>optional int32 manual = 5;</code>
       */
      public Builder setManual(int value) {
        bitField0_ |= 0x00000008;
        manual_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * value is always 1
       * </pre>
       *
       * <code>optional int32 manual = 5;</code>
       */
      public Builder clearManual() {
        bitField0_ = (bitField0_ & ~0x00000008);
        manual_ = 0;
        onChanged();
        return this;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:tutorial.Size)
    }

    // @@protoc_insertion_point(class_scope:tutorial.Size)
    private static final net.studioblueplanet.tomtomwatch.WorkoutProto.Size DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new net.studioblueplanet.tomtomwatch.WorkoutProto.Size();
    }

    public static net.studioblueplanet.tomtomwatch.WorkoutProto.Size getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    @java.lang.Deprecated public static final com.google.protobuf.Parser<Size>
        PARSER = new com.google.protobuf.AbstractParser<Size>() {
      @java.lang.Override
      public Size parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new Size(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<Size> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<Size> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public net.studioblueplanet.tomtomwatch.WorkoutProto.Size getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface IntensityOrBuilder extends
      // @@protoc_insertion_point(interface_extends:tutorial.Intensity)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     * &#64;HR Zone: 1: Easy 2: Fat burn, 3: Cardio, 4: Perform, 5: Peak
     * </pre>
     *
     * <code>optional int32 heartratezone = 1;</code>
     */
    boolean hasHeartratezone();
    /**
     * <pre>
     * &#64;HR Zone: 1: Easy 2: Fat burn, 3: Cardio, 4: Perform, 5: Peak
     * </pre>
     *
     * <code>optional int32 heartratezone = 1;</code>
     */
    int getHeartratezone();

    /**
     * <pre>
     * &#64;pace in milliseconds per km e.g. 312000 = 5:12 min/km
     * </pre>
     *
     * <code>optional int32 pace = 2;</code>
     */
    boolean hasPace();
    /**
     * <pre>
     * &#64;pace in milliseconds per km e.g. 312000 = 5:12 min/km
     * </pre>
     *
     * <code>optional int32 pace = 2;</code>
     */
    int getPace();

    /**
     * <pre>
     * &#64;speed in mm/sec
     * </pre>
     *
     * <code>optional int32 speed = 3;</code>
     */
    boolean hasSpeed();
    /**
     * <pre>
     * &#64;speed in mm/sec
     * </pre>
     *
     * <code>optional int32 speed = 3;</code>
     */
    int getSpeed();
  }
  /**
   * <pre>
   *#################################################################################################
   * 7th level: Step intensity in heartrate zone or pace
   *#################################################################################################
   * </pre>
   *
   * Protobuf type {@code tutorial.Intensity}
   */
  public  static final class Intensity extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:tutorial.Intensity)
      IntensityOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use Intensity.newBuilder() to construct.
    private Intensity(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private Intensity() {
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new Intensity();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private Intensity(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 8: {
              bitField0_ |= 0x00000001;
              heartratezone_ = input.readInt32();
              break;
            }
            case 16: {
              bitField0_ |= 0x00000002;
              pace_ = input.readInt32();
              break;
            }
            case 24: {
              bitField0_ |= 0x00000004;
              speed_ = input.readInt32();
              break;
            }
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return net.studioblueplanet.tomtomwatch.WorkoutProto.internal_static_tutorial_Intensity_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return net.studioblueplanet.tomtomwatch.WorkoutProto.internal_static_tutorial_Intensity_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              net.studioblueplanet.tomtomwatch.WorkoutProto.Intensity.class, net.studioblueplanet.tomtomwatch.WorkoutProto.Intensity.Builder.class);
    }

    private int bitField0_;
    public static final int HEARTRATEZONE_FIELD_NUMBER = 1;
    private int heartratezone_;
    /**
     * <pre>
     * &#64;HR Zone: 1: Easy 2: Fat burn, 3: Cardio, 4: Perform, 5: Peak
     * </pre>
     *
     * <code>optional int32 heartratezone = 1;</code>
     */
    public boolean hasHeartratezone() {
      return ((bitField0_ & 0x00000001) != 0);
    }
    /**
     * <pre>
     * &#64;HR Zone: 1: Easy 2: Fat burn, 3: Cardio, 4: Perform, 5: Peak
     * </pre>
     *
     * <code>optional int32 heartratezone = 1;</code>
     */
    public int getHeartratezone() {
      return heartratezone_;
    }

    public static final int PACE_FIELD_NUMBER = 2;
    private int pace_;
    /**
     * <pre>
     * &#64;pace in milliseconds per km e.g. 312000 = 5:12 min/km
     * </pre>
     *
     * <code>optional int32 pace = 2;</code>
     */
    public boolean hasPace() {
      return ((bitField0_ & 0x00000002) != 0);
    }
    /**
     * <pre>
     * &#64;pace in milliseconds per km e.g. 312000 = 5:12 min/km
     * </pre>
     *
     * <code>optional int32 pace = 2;</code>
     */
    public int getPace() {
      return pace_;
    }

    public static final int SPEED_FIELD_NUMBER = 3;
    private int speed_;
    /**
     * <pre>
     * &#64;speed in mm/sec
     * </pre>
     *
     * <code>optional int32 speed = 3;</code>
     */
    public boolean hasSpeed() {
      return ((bitField0_ & 0x00000004) != 0);
    }
    /**
     * <pre>
     * &#64;speed in mm/sec
     * </pre>
     *
     * <code>optional int32 speed = 3;</code>
     */
    public int getSpeed() {
      return speed_;
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (((bitField0_ & 0x00000001) != 0)) {
        output.writeInt32(1, heartratezone_);
      }
      if (((bitField0_ & 0x00000002) != 0)) {
        output.writeInt32(2, pace_);
      }
      if (((bitField0_ & 0x00000004) != 0)) {
        output.writeInt32(3, speed_);
      }
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(1, heartratezone_);
      }
      if (((bitField0_ & 0x00000002) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(2, pace_);
      }
      if (((bitField0_ & 0x00000004) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(3, speed_);
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof net.studioblueplanet.tomtomwatch.WorkoutProto.Intensity)) {
        return super.equals(obj);
      }
      net.studioblueplanet.tomtomwatch.WorkoutProto.Intensity other = (net.studioblueplanet.tomtomwatch.WorkoutProto.Intensity) obj;

      if (hasHeartratezone() != other.hasHeartratezone()) return false;
      if (hasHeartratezone()) {
        if (getHeartratezone()
            != other.getHeartratezone()) return false;
      }
      if (hasPace() != other.hasPace()) return false;
      if (hasPace()) {
        if (getPace()
            != other.getPace()) return false;
      }
      if (hasSpeed() != other.hasSpeed()) return false;
      if (hasSpeed()) {
        if (getSpeed()
            != other.getSpeed()) return false;
      }
      if (!unknownFields.equals(other.unknownFields)) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (hasHeartratezone()) {
        hash = (37 * hash) + HEARTRATEZONE_FIELD_NUMBER;
        hash = (53 * hash) + getHeartratezone();
      }
      if (hasPace()) {
        hash = (37 * hash) + PACE_FIELD_NUMBER;
        hash = (53 * hash) + getPace();
      }
      if (hasSpeed()) {
        hash = (37 * hash) + SPEED_FIELD_NUMBER;
        hash = (53 * hash) + getSpeed();
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static net.studioblueplanet.tomtomwatch.WorkoutProto.Intensity parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static net.studioblueplanet.tomtomwatch.WorkoutProto.Intensity parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static net.studioblueplanet.tomtomwatch.WorkoutProto.Intensity parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static net.studioblueplanet.tomtomwatch.WorkoutProto.Intensity parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static net.studioblueplanet.tomtomwatch.WorkoutProto.Intensity parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static net.studioblueplanet.tomtomwatch.WorkoutProto.Intensity parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static net.studioblueplanet.tomtomwatch.WorkoutProto.Intensity parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static net.studioblueplanet.tomtomwatch.WorkoutProto.Intensity parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static net.studioblueplanet.tomtomwatch.WorkoutProto.Intensity parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static net.studioblueplanet.tomtomwatch.WorkoutProto.Intensity parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static net.studioblueplanet.tomtomwatch.WorkoutProto.Intensity parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static net.studioblueplanet.tomtomwatch.WorkoutProto.Intensity parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(net.studioblueplanet.tomtomwatch.WorkoutProto.Intensity prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     *#################################################################################################
     * 7th level: Step intensity in heartrate zone or pace
     *#################################################################################################
     * </pre>
     *
     * Protobuf type {@code tutorial.Intensity}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:tutorial.Intensity)
        net.studioblueplanet.tomtomwatch.WorkoutProto.IntensityOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return net.studioblueplanet.tomtomwatch.WorkoutProto.internal_static_tutorial_Intensity_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return net.studioblueplanet.tomtomwatch.WorkoutProto.internal_static_tutorial_Intensity_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                net.studioblueplanet.tomtomwatch.WorkoutProto.Intensity.class, net.studioblueplanet.tomtomwatch.WorkoutProto.Intensity.Builder.class);
      }

      // Construct using net.studioblueplanet.tomtomwatch.WorkoutProto.Intensity.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        heartratezone_ = 0;
        bitField0_ = (bitField0_ & ~0x00000001);
        pace_ = 0;
        bitField0_ = (bitField0_ & ~0x00000002);
        speed_ = 0;
        bitField0_ = (bitField0_ & ~0x00000004);
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return net.studioblueplanet.tomtomwatch.WorkoutProto.internal_static_tutorial_Intensity_descriptor;
      }

      @java.lang.Override
      public net.studioblueplanet.tomtomwatch.WorkoutProto.Intensity getDefaultInstanceForType() {
        return net.studioblueplanet.tomtomwatch.WorkoutProto.Intensity.getDefaultInstance();
      }

      @java.lang.Override
      public net.studioblueplanet.tomtomwatch.WorkoutProto.Intensity build() {
        net.studioblueplanet.tomtomwatch.WorkoutProto.Intensity result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public net.studioblueplanet.tomtomwatch.WorkoutProto.Intensity buildPartial() {
        net.studioblueplanet.tomtomwatch.WorkoutProto.Intensity result = new net.studioblueplanet.tomtomwatch.WorkoutProto.Intensity(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) != 0)) {
          result.heartratezone_ = heartratezone_;
          to_bitField0_ |= 0x00000001;
        }
        if (((from_bitField0_ & 0x00000002) != 0)) {
          result.pace_ = pace_;
          to_bitField0_ |= 0x00000002;
        }
        if (((from_bitField0_ & 0x00000004) != 0)) {
          result.speed_ = speed_;
          to_bitField0_ |= 0x00000004;
        }
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof net.studioblueplanet.tomtomwatch.WorkoutProto.Intensity) {
          return mergeFrom((net.studioblueplanet.tomtomwatch.WorkoutProto.Intensity)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(net.studioblueplanet.tomtomwatch.WorkoutProto.Intensity other) {
        if (other == net.studioblueplanet.tomtomwatch.WorkoutProto.Intensity.getDefaultInstance()) return this;
        if (other.hasHeartratezone()) {
          setHeartratezone(other.getHeartratezone());
        }
        if (other.hasPace()) {
          setPace(other.getPace());
        }
        if (other.hasSpeed()) {
          setSpeed(other.getSpeed());
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        net.studioblueplanet.tomtomwatch.WorkoutProto.Intensity parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (net.studioblueplanet.tomtomwatch.WorkoutProto.Intensity) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private int heartratezone_ ;
      /**
       * <pre>
       * &#64;HR Zone: 1: Easy 2: Fat burn, 3: Cardio, 4: Perform, 5: Peak
       * </pre>
       *
       * <code>optional int32 heartratezone = 1;</code>
       */
      public boolean hasHeartratezone() {
        return ((bitField0_ & 0x00000001) != 0);
      }
      /**
       * <pre>
       * &#64;HR Zone: 1: Easy 2: Fat burn, 3: Cardio, 4: Perform, 5: Peak
       * </pre>
       *
       * <code>optional int32 heartratezone = 1;</code>
       */
      public int getHeartratezone() {
        return heartratezone_;
      }
      /**
       * <pre>
       * &#64;HR Zone: 1: Easy 2: Fat burn, 3: Cardio, 4: Perform, 5: Peak
       * </pre>
       *
       * <code>optional int32 heartratezone = 1;</code>
       */
      public Builder setHeartratezone(int value) {
        bitField0_ |= 0x00000001;
        heartratezone_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * &#64;HR Zone: 1: Easy 2: Fat burn, 3: Cardio, 4: Perform, 5: Peak
       * </pre>
       *
       * <code>optional int32 heartratezone = 1;</code>
       */
      public Builder clearHeartratezone() {
        bitField0_ = (bitField0_ & ~0x00000001);
        heartratezone_ = 0;
        onChanged();
        return this;
      }

      private int pace_ ;
      /**
       * <pre>
       * &#64;pace in milliseconds per km e.g. 312000 = 5:12 min/km
       * </pre>
       *
       * <code>optional int32 pace = 2;</code>
       */
      public boolean hasPace() {
        return ((bitField0_ & 0x00000002) != 0);
      }
      /**
       * <pre>
       * &#64;pace in milliseconds per km e.g. 312000 = 5:12 min/km
       * </pre>
       *
       * <code>optional int32 pace = 2;</code>
       */
      public int getPace() {
        return pace_;
      }
      /**
       * <pre>
       * &#64;pace in milliseconds per km e.g. 312000 = 5:12 min/km
       * </pre>
       *
       * <code>optional int32 pace = 2;</code>
       */
      public Builder setPace(int value) {
        bitField0_ |= 0x00000002;
        pace_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * &#64;pace in milliseconds per km e.g. 312000 = 5:12 min/km
       * </pre>
       *
       * <code>optional int32 pace = 2;</code>
       */
      public Builder clearPace() {
        bitField0_ = (bitField0_ & ~0x00000002);
        pace_ = 0;
        onChanged();
        return this;
      }

      private int speed_ ;
      /**
       * <pre>
       * &#64;speed in mm/sec
       * </pre>
       *
       * <code>optional int32 speed = 3;</code>
       */
      public boolean hasSpeed() {
        return ((bitField0_ & 0x00000004) != 0);
      }
      /**
       * <pre>
       * &#64;speed in mm/sec
       * </pre>
       *
       * <code>optional int32 speed = 3;</code>
       */
      public int getSpeed() {
        return speed_;
      }
      /**
       * <pre>
       * &#64;speed in mm/sec
       * </pre>
       *
       * <code>optional int32 speed = 3;</code>
       */
      public Builder setSpeed(int value) {
        bitField0_ |= 0x00000004;
        speed_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * &#64;speed in mm/sec
       * </pre>
       *
       * <code>optional int32 speed = 3;</code>
       */
      public Builder clearSpeed() {
        bitField0_ = (bitField0_ & ~0x00000004);
        speed_ = 0;
        onChanged();
        return this;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:tutorial.Intensity)
    }

    // @@protoc_insertion_point(class_scope:tutorial.Intensity)
    private static final net.studioblueplanet.tomtomwatch.WorkoutProto.Intensity DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new net.studioblueplanet.tomtomwatch.WorkoutProto.Intensity();
    }

    public static net.studioblueplanet.tomtomwatch.WorkoutProto.Intensity getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    @java.lang.Deprecated public static final com.google.protobuf.Parser<Intensity>
        PARSER = new com.google.protobuf.AbstractParser<Intensity>() {
      @java.lang.Override
      public Intensity parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new Intensity(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<Intensity> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<Intensity> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public net.studioblueplanet.tomtomwatch.WorkoutProto.Intensity getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface RootOrBuilder extends
      // @@protoc_insertion_point(interface_extends:tutorial.Root)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>repeated .tutorial.RootContainer SubDataContainer = 1;</code>
     */
    java.util.List<net.studioblueplanet.tomtomwatch.WorkoutProto.RootContainer> 
        getSubDataContainerList();
    /**
     * <code>repeated .tutorial.RootContainer SubDataContainer = 1;</code>
     */
    net.studioblueplanet.tomtomwatch.WorkoutProto.RootContainer getSubDataContainer(int index);
    /**
     * <code>repeated .tutorial.RootContainer SubDataContainer = 1;</code>
     */
    int getSubDataContainerCount();
    /**
     * <code>repeated .tutorial.RootContainer SubDataContainer = 1;</code>
     */
    java.util.List<? extends net.studioblueplanet.tomtomwatch.WorkoutProto.RootContainerOrBuilder> 
        getSubDataContainerOrBuilderList();
    /**
     * <code>repeated .tutorial.RootContainer SubDataContainer = 1;</code>
     */
    net.studioblueplanet.tomtomwatch.WorkoutProto.RootContainerOrBuilder getSubDataContainerOrBuilder(
        int index);
  }
  /**
   * Protobuf type {@code tutorial.Root}
   */
  public  static final class Root extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:tutorial.Root)
      RootOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use Root.newBuilder() to construct.
    private Root(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private Root() {
      subDataContainer_ = java.util.Collections.emptyList();
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new Root();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private Root(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 10: {
              if (!((mutable_bitField0_ & 0x00000001) != 0)) {
                subDataContainer_ = new java.util.ArrayList<net.studioblueplanet.tomtomwatch.WorkoutProto.RootContainer>();
                mutable_bitField0_ |= 0x00000001;
              }
              subDataContainer_.add(
                  input.readMessage(net.studioblueplanet.tomtomwatch.WorkoutProto.RootContainer.PARSER, extensionRegistry));
              break;
            }
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000001) != 0)) {
          subDataContainer_ = java.util.Collections.unmodifiableList(subDataContainer_);
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return net.studioblueplanet.tomtomwatch.WorkoutProto.internal_static_tutorial_Root_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return net.studioblueplanet.tomtomwatch.WorkoutProto.internal_static_tutorial_Root_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              net.studioblueplanet.tomtomwatch.WorkoutProto.Root.class, net.studioblueplanet.tomtomwatch.WorkoutProto.Root.Builder.class);
    }

    public static final int SUBDATACONTAINER_FIELD_NUMBER = 1;
    private java.util.List<net.studioblueplanet.tomtomwatch.WorkoutProto.RootContainer> subDataContainer_;
    /**
     * <code>repeated .tutorial.RootContainer SubDataContainer = 1;</code>
     */
    public java.util.List<net.studioblueplanet.tomtomwatch.WorkoutProto.RootContainer> getSubDataContainerList() {
      return subDataContainer_;
    }
    /**
     * <code>repeated .tutorial.RootContainer SubDataContainer = 1;</code>
     */
    public java.util.List<? extends net.studioblueplanet.tomtomwatch.WorkoutProto.RootContainerOrBuilder> 
        getSubDataContainerOrBuilderList() {
      return subDataContainer_;
    }
    /**
     * <code>repeated .tutorial.RootContainer SubDataContainer = 1;</code>
     */
    public int getSubDataContainerCount() {
      return subDataContainer_.size();
    }
    /**
     * <code>repeated .tutorial.RootContainer SubDataContainer = 1;</code>
     */
    public net.studioblueplanet.tomtomwatch.WorkoutProto.RootContainer getSubDataContainer(int index) {
      return subDataContainer_.get(index);
    }
    /**
     * <code>repeated .tutorial.RootContainer SubDataContainer = 1;</code>
     */
    public net.studioblueplanet.tomtomwatch.WorkoutProto.RootContainerOrBuilder getSubDataContainerOrBuilder(
        int index) {
      return subDataContainer_.get(index);
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      for (int i = 0; i < getSubDataContainerCount(); i++) {
        if (!getSubDataContainer(i).isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      for (int i = 0; i < subDataContainer_.size(); i++) {
        output.writeMessage(1, subDataContainer_.get(i));
      }
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      for (int i = 0; i < subDataContainer_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, subDataContainer_.get(i));
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof net.studioblueplanet.tomtomwatch.WorkoutProto.Root)) {
        return super.equals(obj);
      }
      net.studioblueplanet.tomtomwatch.WorkoutProto.Root other = (net.studioblueplanet.tomtomwatch.WorkoutProto.Root) obj;

      if (!getSubDataContainerList()
          .equals(other.getSubDataContainerList())) return false;
      if (!unknownFields.equals(other.unknownFields)) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (getSubDataContainerCount() > 0) {
        hash = (37 * hash) + SUBDATACONTAINER_FIELD_NUMBER;
        hash = (53 * hash) + getSubDataContainerList().hashCode();
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static net.studioblueplanet.tomtomwatch.WorkoutProto.Root parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static net.studioblueplanet.tomtomwatch.WorkoutProto.Root parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static net.studioblueplanet.tomtomwatch.WorkoutProto.Root parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static net.studioblueplanet.tomtomwatch.WorkoutProto.Root parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static net.studioblueplanet.tomtomwatch.WorkoutProto.Root parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static net.studioblueplanet.tomtomwatch.WorkoutProto.Root parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static net.studioblueplanet.tomtomwatch.WorkoutProto.Root parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static net.studioblueplanet.tomtomwatch.WorkoutProto.Root parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static net.studioblueplanet.tomtomwatch.WorkoutProto.Root parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static net.studioblueplanet.tomtomwatch.WorkoutProto.Root parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static net.studioblueplanet.tomtomwatch.WorkoutProto.Root parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static net.studioblueplanet.tomtomwatch.WorkoutProto.Root parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(net.studioblueplanet.tomtomwatch.WorkoutProto.Root prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code tutorial.Root}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:tutorial.Root)
        net.studioblueplanet.tomtomwatch.WorkoutProto.RootOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return net.studioblueplanet.tomtomwatch.WorkoutProto.internal_static_tutorial_Root_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return net.studioblueplanet.tomtomwatch.WorkoutProto.internal_static_tutorial_Root_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                net.studioblueplanet.tomtomwatch.WorkoutProto.Root.class, net.studioblueplanet.tomtomwatch.WorkoutProto.Root.Builder.class);
      }

      // Construct using net.studioblueplanet.tomtomwatch.WorkoutProto.Root.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
          getSubDataContainerFieldBuilder();
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        if (subDataContainerBuilder_ == null) {
          subDataContainer_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000001);
        } else {
          subDataContainerBuilder_.clear();
        }
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return net.studioblueplanet.tomtomwatch.WorkoutProto.internal_static_tutorial_Root_descriptor;
      }

      @java.lang.Override
      public net.studioblueplanet.tomtomwatch.WorkoutProto.Root getDefaultInstanceForType() {
        return net.studioblueplanet.tomtomwatch.WorkoutProto.Root.getDefaultInstance();
      }

      @java.lang.Override
      public net.studioblueplanet.tomtomwatch.WorkoutProto.Root build() {
        net.studioblueplanet.tomtomwatch.WorkoutProto.Root result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public net.studioblueplanet.tomtomwatch.WorkoutProto.Root buildPartial() {
        net.studioblueplanet.tomtomwatch.WorkoutProto.Root result = new net.studioblueplanet.tomtomwatch.WorkoutProto.Root(this);
        int from_bitField0_ = bitField0_;
        if (subDataContainerBuilder_ == null) {
          if (((bitField0_ & 0x00000001) != 0)) {
            subDataContainer_ = java.util.Collections.unmodifiableList(subDataContainer_);
            bitField0_ = (bitField0_ & ~0x00000001);
          }
          result.subDataContainer_ = subDataContainer_;
        } else {
          result.subDataContainer_ = subDataContainerBuilder_.build();
        }
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof net.studioblueplanet.tomtomwatch.WorkoutProto.Root) {
          return mergeFrom((net.studioblueplanet.tomtomwatch.WorkoutProto.Root)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(net.studioblueplanet.tomtomwatch.WorkoutProto.Root other) {
        if (other == net.studioblueplanet.tomtomwatch.WorkoutProto.Root.getDefaultInstance()) return this;
        if (subDataContainerBuilder_ == null) {
          if (!other.subDataContainer_.isEmpty()) {
            if (subDataContainer_.isEmpty()) {
              subDataContainer_ = other.subDataContainer_;
              bitField0_ = (bitField0_ & ~0x00000001);
            } else {
              ensureSubDataContainerIsMutable();
              subDataContainer_.addAll(other.subDataContainer_);
            }
            onChanged();
          }
        } else {
          if (!other.subDataContainer_.isEmpty()) {
            if (subDataContainerBuilder_.isEmpty()) {
              subDataContainerBuilder_.dispose();
              subDataContainerBuilder_ = null;
              subDataContainer_ = other.subDataContainer_;
              bitField0_ = (bitField0_ & ~0x00000001);
              subDataContainerBuilder_ = 
                com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                   getSubDataContainerFieldBuilder() : null;
            } else {
              subDataContainerBuilder_.addAllMessages(other.subDataContainer_);
            }
          }
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        for (int i = 0; i < getSubDataContainerCount(); i++) {
          if (!getSubDataContainer(i).isInitialized()) {
            return false;
          }
        }
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        net.studioblueplanet.tomtomwatch.WorkoutProto.Root parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (net.studioblueplanet.tomtomwatch.WorkoutProto.Root) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private java.util.List<net.studioblueplanet.tomtomwatch.WorkoutProto.RootContainer> subDataContainer_ =
        java.util.Collections.emptyList();
      private void ensureSubDataContainerIsMutable() {
        if (!((bitField0_ & 0x00000001) != 0)) {
          subDataContainer_ = new java.util.ArrayList<net.studioblueplanet.tomtomwatch.WorkoutProto.RootContainer>(subDataContainer_);
          bitField0_ |= 0x00000001;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilderV3<
          net.studioblueplanet.tomtomwatch.WorkoutProto.RootContainer, net.studioblueplanet.tomtomwatch.WorkoutProto.RootContainer.Builder, net.studioblueplanet.tomtomwatch.WorkoutProto.RootContainerOrBuilder> subDataContainerBuilder_;

      /**
       * <code>repeated .tutorial.RootContainer SubDataContainer = 1;</code>
       */
      public java.util.List<net.studioblueplanet.tomtomwatch.WorkoutProto.RootContainer> getSubDataContainerList() {
        if (subDataContainerBuilder_ == null) {
          return java.util.Collections.unmodifiableList(subDataContainer_);
        } else {
          return subDataContainerBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .tutorial.RootContainer SubDataContainer = 1;</code>
       */
      public int getSubDataContainerCount() {
        if (subDataContainerBuilder_ == null) {
          return subDataContainer_.size();
        } else {
          return subDataContainerBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .tutorial.RootContainer SubDataContainer = 1;</code>
       */
      public net.studioblueplanet.tomtomwatch.WorkoutProto.RootContainer getSubDataContainer(int index) {
        if (subDataContainerBuilder_ == null) {
          return subDataContainer_.get(index);
        } else {
          return subDataContainerBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .tutorial.RootContainer SubDataContainer = 1;</code>
       */
      public Builder setSubDataContainer(
          int index, net.studioblueplanet.tomtomwatch.WorkoutProto.RootContainer value) {
        if (subDataContainerBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureSubDataContainerIsMutable();
          subDataContainer_.set(index, value);
          onChanged();
        } else {
          subDataContainerBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .tutorial.RootContainer SubDataContainer = 1;</code>
       */
      public Builder setSubDataContainer(
          int index, net.studioblueplanet.tomtomwatch.WorkoutProto.RootContainer.Builder builderForValue) {
        if (subDataContainerBuilder_ == null) {
          ensureSubDataContainerIsMutable();
          subDataContainer_.set(index, builderForValue.build());
          onChanged();
        } else {
          subDataContainerBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .tutorial.RootContainer SubDataContainer = 1;</code>
       */
      public Builder addSubDataContainer(net.studioblueplanet.tomtomwatch.WorkoutProto.RootContainer value) {
        if (subDataContainerBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureSubDataContainerIsMutable();
          subDataContainer_.add(value);
          onChanged();
        } else {
          subDataContainerBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .tutorial.RootContainer SubDataContainer = 1;</code>
       */
      public Builder addSubDataContainer(
          int index, net.studioblueplanet.tomtomwatch.WorkoutProto.RootContainer value) {
        if (subDataContainerBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureSubDataContainerIsMutable();
          subDataContainer_.add(index, value);
          onChanged();
        } else {
          subDataContainerBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .tutorial.RootContainer SubDataContainer = 1;</code>
       */
      public Builder addSubDataContainer(
          net.studioblueplanet.tomtomwatch.WorkoutProto.RootContainer.Builder builderForValue) {
        if (subDataContainerBuilder_ == null) {
          ensureSubDataContainerIsMutable();
          subDataContainer_.add(builderForValue.build());
          onChanged();
        } else {
          subDataContainerBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .tutorial.RootContainer SubDataContainer = 1;</code>
       */
      public Builder addSubDataContainer(
          int index, net.studioblueplanet.tomtomwatch.WorkoutProto.RootContainer.Builder builderForValue) {
        if (subDataContainerBuilder_ == null) {
          ensureSubDataContainerIsMutable();
          subDataContainer_.add(index, builderForValue.build());
          onChanged();
        } else {
          subDataContainerBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .tutorial.RootContainer SubDataContainer = 1;</code>
       */
      public Builder addAllSubDataContainer(
          java.lang.Iterable<? extends net.studioblueplanet.tomtomwatch.WorkoutProto.RootContainer> values) {
        if (subDataContainerBuilder_ == null) {
          ensureSubDataContainerIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, subDataContainer_);
          onChanged();
        } else {
          subDataContainerBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .tutorial.RootContainer SubDataContainer = 1;</code>
       */
      public Builder clearSubDataContainer() {
        if (subDataContainerBuilder_ == null) {
          subDataContainer_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000001);
          onChanged();
        } else {
          subDataContainerBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .tutorial.RootContainer SubDataContainer = 1;</code>
       */
      public Builder removeSubDataContainer(int index) {
        if (subDataContainerBuilder_ == null) {
          ensureSubDataContainerIsMutable();
          subDataContainer_.remove(index);
          onChanged();
        } else {
          subDataContainerBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .tutorial.RootContainer SubDataContainer = 1;</code>
       */
      public net.studioblueplanet.tomtomwatch.WorkoutProto.RootContainer.Builder getSubDataContainerBuilder(
          int index) {
        return getSubDataContainerFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .tutorial.RootContainer SubDataContainer = 1;</code>
       */
      public net.studioblueplanet.tomtomwatch.WorkoutProto.RootContainerOrBuilder getSubDataContainerOrBuilder(
          int index) {
        if (subDataContainerBuilder_ == null) {
          return subDataContainer_.get(index);  } else {
          return subDataContainerBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .tutorial.RootContainer SubDataContainer = 1;</code>
       */
      public java.util.List<? extends net.studioblueplanet.tomtomwatch.WorkoutProto.RootContainerOrBuilder> 
           getSubDataContainerOrBuilderList() {
        if (subDataContainerBuilder_ != null) {
          return subDataContainerBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(subDataContainer_);
        }
      }
      /**
       * <code>repeated .tutorial.RootContainer SubDataContainer = 1;</code>
       */
      public net.studioblueplanet.tomtomwatch.WorkoutProto.RootContainer.Builder addSubDataContainerBuilder() {
        return getSubDataContainerFieldBuilder().addBuilder(
            net.studioblueplanet.tomtomwatch.WorkoutProto.RootContainer.getDefaultInstance());
      }
      /**
       * <code>repeated .tutorial.RootContainer SubDataContainer = 1;</code>
       */
      public net.studioblueplanet.tomtomwatch.WorkoutProto.RootContainer.Builder addSubDataContainerBuilder(
          int index) {
        return getSubDataContainerFieldBuilder().addBuilder(
            index, net.studioblueplanet.tomtomwatch.WorkoutProto.RootContainer.getDefaultInstance());
      }
      /**
       * <code>repeated .tutorial.RootContainer SubDataContainer = 1;</code>
       */
      public java.util.List<net.studioblueplanet.tomtomwatch.WorkoutProto.RootContainer.Builder> 
           getSubDataContainerBuilderList() {
        return getSubDataContainerFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilderV3<
          net.studioblueplanet.tomtomwatch.WorkoutProto.RootContainer, net.studioblueplanet.tomtomwatch.WorkoutProto.RootContainer.Builder, net.studioblueplanet.tomtomwatch.WorkoutProto.RootContainerOrBuilder> 
          getSubDataContainerFieldBuilder() {
        if (subDataContainerBuilder_ == null) {
          subDataContainerBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
              net.studioblueplanet.tomtomwatch.WorkoutProto.RootContainer, net.studioblueplanet.tomtomwatch.WorkoutProto.RootContainer.Builder, net.studioblueplanet.tomtomwatch.WorkoutProto.RootContainerOrBuilder>(
                  subDataContainer_,
                  ((bitField0_ & 0x00000001) != 0),
                  getParentForChildren(),
                  isClean());
          subDataContainer_ = null;
        }
        return subDataContainerBuilder_;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:tutorial.Root)
    }

    // @@protoc_insertion_point(class_scope:tutorial.Root)
    private static final net.studioblueplanet.tomtomwatch.WorkoutProto.Root DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new net.studioblueplanet.tomtomwatch.WorkoutProto.Root();
    }

    public static net.studioblueplanet.tomtomwatch.WorkoutProto.Root getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    @java.lang.Deprecated public static final com.google.protobuf.Parser<Root>
        PARSER = new com.google.protobuf.AbstractParser<Root>() {
      @java.lang.Override
      public Root parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new Root(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<Root> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<Root> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public net.studioblueplanet.tomtomwatch.WorkoutProto.Root getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_tutorial_RootContainer_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_tutorial_RootContainer_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_tutorial_Metadata_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_tutorial_Metadata_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_tutorial_DataContainer_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_tutorial_DataContainer_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_tutorial_SubDataContainer_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_tutorial_SubDataContainer_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_tutorial_Description_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_tutorial_Description_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_tutorial_Program_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_tutorial_Program_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_tutorial_ProgramStep_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_tutorial_ProgramStep_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_tutorial_ProgramStepSub_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_tutorial_ProgramStepSub_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_tutorial_Size_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_tutorial_Size_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_tutorial_Intensity_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_tutorial_Intensity_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_tutorial_Root_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_tutorial_Root_fieldAccessorTable;

  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static  com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    java.lang.String[] descriptorData = {
      "\n\rworkout.proto\022\010tutorial\"e\n\rRootContain" +
      "er\022$\n\010metadata\030\007 \001(\0132\022.tutorial.Metadata" +
      "\022.\n\rdataContainer\030\010 \001(\0132\027.tutorial.DataC" +
      "ontainer\"2\n\010Metadata\022\024\n\014manufacturer\030\001 \002" +
      "(\007\022\020\n\010fileType\030\002 \002(\007\"E\n\rDataContainer\0224\n" +
      "\020subDataContainer\030\001 \002(\0132\032.tutorial.SubDa" +
      "taContainer\"b\n\020SubDataContainer\022*\n\013descr" +
      "iption\030\004 \003(\0132\025.tutorial.Description\022\"\n\007p" +
      "rogram\030\007 \002(\0132\021.tutorial.Program\".\n\013Descr" +
      "iption\022\n\n\002id\030\001 \002(\005\022\023\n\013description\030\002 \002(\t\"" +
      "\205\001\n\007Program\022\020\n\010unknown2\030\002 \002(\005\022\020\n\010unknown" +
      "3\030\003 \002(\005\022\020\n\010unknown4\030\004 \002(\014\022\014\n\004Type\030\n \002(\005\022" +
      "\021\n\tunknown11\030\013 \002(\005\022#\n\004step\030\014 \003(\0132\025.tutor" +
      "ial.ProgramStep\"8\n\013ProgramStep\022)\n\007stepSu" +
      "b\030\010 \002(\0132\030.tutorial.ProgramStepSub\"\253\001\n\016Pr" +
      "ogramStepSub\022\020\n\010stepName\030\001 \002(\005\022\027\n\017stepDe" +
      "scription\030\002 \002(\005\022\022\n\nstepNumber\030\004 \002(\005\022\020\n\010s" +
      "tepType\030\006 \002(\005\022 \n\010stepSize\030\007 \001(\0132\016.tutori" +
      "al.Size\022&\n\tintensity\030\010 \001(\0132\023.tutorial.In" +
      "tensity\"M\n\004Size\022\020\n\010duration\030\001 \001(\005\022\020\n\010dis" +
      "tance\030\002 \001(\005\022\021\n\treachZone\030\004 \001(\005\022\016\n\006manual" +
      "\030\005 \001(\005\"?\n\tIntensity\022\025\n\rheartratezone\030\001 \001" +
      "(\005\022\014\n\004pace\030\002 \001(\005\022\r\n\005speed\030\003 \001(\005\"9\n\004Root\022" +
      "1\n\020SubDataContainer\030\001 \003(\0132\027.tutorial.Roo" +
      "tContainerB0\n net.studioblueplanet.tomto" +
      "mwatchB\014WorkoutProto"
    };
    descriptor = com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
        });
    internal_static_tutorial_RootContainer_descriptor =
      getDescriptor().getMessageTypes().get(0);
    internal_static_tutorial_RootContainer_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_tutorial_RootContainer_descriptor,
        new java.lang.String[] { "Metadata", "DataContainer", });
    internal_static_tutorial_Metadata_descriptor =
      getDescriptor().getMessageTypes().get(1);
    internal_static_tutorial_Metadata_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_tutorial_Metadata_descriptor,
        new java.lang.String[] { "Manufacturer", "FileType", });
    internal_static_tutorial_DataContainer_descriptor =
      getDescriptor().getMessageTypes().get(2);
    internal_static_tutorial_DataContainer_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_tutorial_DataContainer_descriptor,
        new java.lang.String[] { "SubDataContainer", });
    internal_static_tutorial_SubDataContainer_descriptor =
      getDescriptor().getMessageTypes().get(3);
    internal_static_tutorial_SubDataContainer_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_tutorial_SubDataContainer_descriptor,
        new java.lang.String[] { "Description", "Program", });
    internal_static_tutorial_Description_descriptor =
      getDescriptor().getMessageTypes().get(4);
    internal_static_tutorial_Description_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_tutorial_Description_descriptor,
        new java.lang.String[] { "Id", "Description", });
    internal_static_tutorial_Program_descriptor =
      getDescriptor().getMessageTypes().get(5);
    internal_static_tutorial_Program_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_tutorial_Program_descriptor,
        new java.lang.String[] { "Unknown2", "Unknown3", "Unknown4", "Type", "Unknown11", "Step", });
    internal_static_tutorial_ProgramStep_descriptor =
      getDescriptor().getMessageTypes().get(6);
    internal_static_tutorial_ProgramStep_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_tutorial_ProgramStep_descriptor,
        new java.lang.String[] { "StepSub", });
    internal_static_tutorial_ProgramStepSub_descriptor =
      getDescriptor().getMessageTypes().get(7);
    internal_static_tutorial_ProgramStepSub_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_tutorial_ProgramStepSub_descriptor,
        new java.lang.String[] { "StepName", "StepDescription", "StepNumber", "StepType", "StepSize", "Intensity", });
    internal_static_tutorial_Size_descriptor =
      getDescriptor().getMessageTypes().get(8);
    internal_static_tutorial_Size_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_tutorial_Size_descriptor,
        new java.lang.String[] { "Duration", "Distance", "ReachZone", "Manual", });
    internal_static_tutorial_Intensity_descriptor =
      getDescriptor().getMessageTypes().get(9);
    internal_static_tutorial_Intensity_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_tutorial_Intensity_descriptor,
        new java.lang.String[] { "Heartratezone", "Pace", "Speed", });
    internal_static_tutorial_Root_descriptor =
      getDescriptor().getMessageTypes().get(10);
    internal_static_tutorial_Root_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_tutorial_Root_descriptor,
        new java.lang.String[] { "SubDataContainer", });
  }

  // @@protoc_insertion_point(outer_class_scope)
}
