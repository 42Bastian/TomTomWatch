// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: tracker.proto

package net.studioblueplanet.tomtomwatch;

public final class TrackerProto {
  private TrackerProto() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistryLite registry) {
  }

  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
    registerAllExtensions(
        (com.google.protobuf.ExtensionRegistryLite) registry);
  }
  public interface RootOrBuilder extends
      // @@protoc_insertion_point(interface_extends:tutorial.Root)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>repeated .tutorial.RootContainer rootContainer = 1;</code>
     */
    java.util.List<net.studioblueplanet.tomtomwatch.TrackerProto.RootContainer> 
        getRootContainerList();
    /**
     * <code>repeated .tutorial.RootContainer rootContainer = 1;</code>
     */
    net.studioblueplanet.tomtomwatch.TrackerProto.RootContainer getRootContainer(int index);
    /**
     * <code>repeated .tutorial.RootContainer rootContainer = 1;</code>
     */
    int getRootContainerCount();
    /**
     * <code>repeated .tutorial.RootContainer rootContainer = 1;</code>
     */
    java.util.List<? extends net.studioblueplanet.tomtomwatch.TrackerProto.RootContainerOrBuilder> 
        getRootContainerOrBuilderList();
    /**
     * <code>repeated .tutorial.RootContainer rootContainer = 1;</code>
     */
    net.studioblueplanet.tomtomwatch.TrackerProto.RootContainerOrBuilder getRootContainerOrBuilder(
        int index);
  }
  /**
   * <pre>
   *#################################################################################################
   * Root message
   *#################################################################################################
   * </pre>
   *
   * Protobuf type {@code tutorial.Root}
   */
  public  static final class Root extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:tutorial.Root)
      RootOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use Root.newBuilder() to construct.
    private Root(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private Root() {
      rootContainer_ = java.util.Collections.emptyList();
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new Root();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private Root(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 10: {
              if (!((mutable_bitField0_ & 0x00000001) != 0)) {
                rootContainer_ = new java.util.ArrayList<net.studioblueplanet.tomtomwatch.TrackerProto.RootContainer>();
                mutable_bitField0_ |= 0x00000001;
              }
              rootContainer_.add(
                  input.readMessage(net.studioblueplanet.tomtomwatch.TrackerProto.RootContainer.PARSER, extensionRegistry));
              break;
            }
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000001) != 0)) {
          rootContainer_ = java.util.Collections.unmodifiableList(rootContainer_);
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return net.studioblueplanet.tomtomwatch.TrackerProto.internal_static_tutorial_Root_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return net.studioblueplanet.tomtomwatch.TrackerProto.internal_static_tutorial_Root_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              net.studioblueplanet.tomtomwatch.TrackerProto.Root.class, net.studioblueplanet.tomtomwatch.TrackerProto.Root.Builder.class);
    }

    public static final int ROOTCONTAINER_FIELD_NUMBER = 1;
    private java.util.List<net.studioblueplanet.tomtomwatch.TrackerProto.RootContainer> rootContainer_;
    /**
     * <code>repeated .tutorial.RootContainer rootContainer = 1;</code>
     */
    public java.util.List<net.studioblueplanet.tomtomwatch.TrackerProto.RootContainer> getRootContainerList() {
      return rootContainer_;
    }
    /**
     * <code>repeated .tutorial.RootContainer rootContainer = 1;</code>
     */
    public java.util.List<? extends net.studioblueplanet.tomtomwatch.TrackerProto.RootContainerOrBuilder> 
        getRootContainerOrBuilderList() {
      return rootContainer_;
    }
    /**
     * <code>repeated .tutorial.RootContainer rootContainer = 1;</code>
     */
    public int getRootContainerCount() {
      return rootContainer_.size();
    }
    /**
     * <code>repeated .tutorial.RootContainer rootContainer = 1;</code>
     */
    public net.studioblueplanet.tomtomwatch.TrackerProto.RootContainer getRootContainer(int index) {
      return rootContainer_.get(index);
    }
    /**
     * <code>repeated .tutorial.RootContainer rootContainer = 1;</code>
     */
    public net.studioblueplanet.tomtomwatch.TrackerProto.RootContainerOrBuilder getRootContainerOrBuilder(
        int index) {
      return rootContainer_.get(index);
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      for (int i = 0; i < getRootContainerCount(); i++) {
        if (!getRootContainer(i).isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      for (int i = 0; i < rootContainer_.size(); i++) {
        output.writeMessage(1, rootContainer_.get(i));
      }
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      for (int i = 0; i < rootContainer_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, rootContainer_.get(i));
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof net.studioblueplanet.tomtomwatch.TrackerProto.Root)) {
        return super.equals(obj);
      }
      net.studioblueplanet.tomtomwatch.TrackerProto.Root other = (net.studioblueplanet.tomtomwatch.TrackerProto.Root) obj;

      if (!getRootContainerList()
          .equals(other.getRootContainerList())) return false;
      if (!unknownFields.equals(other.unknownFields)) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (getRootContainerCount() > 0) {
        hash = (37 * hash) + ROOTCONTAINER_FIELD_NUMBER;
        hash = (53 * hash) + getRootContainerList().hashCode();
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static net.studioblueplanet.tomtomwatch.TrackerProto.Root parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static net.studioblueplanet.tomtomwatch.TrackerProto.Root parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static net.studioblueplanet.tomtomwatch.TrackerProto.Root parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static net.studioblueplanet.tomtomwatch.TrackerProto.Root parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static net.studioblueplanet.tomtomwatch.TrackerProto.Root parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static net.studioblueplanet.tomtomwatch.TrackerProto.Root parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static net.studioblueplanet.tomtomwatch.TrackerProto.Root parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static net.studioblueplanet.tomtomwatch.TrackerProto.Root parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static net.studioblueplanet.tomtomwatch.TrackerProto.Root parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static net.studioblueplanet.tomtomwatch.TrackerProto.Root parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static net.studioblueplanet.tomtomwatch.TrackerProto.Root parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static net.studioblueplanet.tomtomwatch.TrackerProto.Root parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(net.studioblueplanet.tomtomwatch.TrackerProto.Root prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     *#################################################################################################
     * Root message
     *#################################################################################################
     * </pre>
     *
     * Protobuf type {@code tutorial.Root}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:tutorial.Root)
        net.studioblueplanet.tomtomwatch.TrackerProto.RootOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return net.studioblueplanet.tomtomwatch.TrackerProto.internal_static_tutorial_Root_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return net.studioblueplanet.tomtomwatch.TrackerProto.internal_static_tutorial_Root_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                net.studioblueplanet.tomtomwatch.TrackerProto.Root.class, net.studioblueplanet.tomtomwatch.TrackerProto.Root.Builder.class);
      }

      // Construct using net.studioblueplanet.tomtomwatch.TrackerProto.Root.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
          getRootContainerFieldBuilder();
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        if (rootContainerBuilder_ == null) {
          rootContainer_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000001);
        } else {
          rootContainerBuilder_.clear();
        }
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return net.studioblueplanet.tomtomwatch.TrackerProto.internal_static_tutorial_Root_descriptor;
      }

      @java.lang.Override
      public net.studioblueplanet.tomtomwatch.TrackerProto.Root getDefaultInstanceForType() {
        return net.studioblueplanet.tomtomwatch.TrackerProto.Root.getDefaultInstance();
      }

      @java.lang.Override
      public net.studioblueplanet.tomtomwatch.TrackerProto.Root build() {
        net.studioblueplanet.tomtomwatch.TrackerProto.Root result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public net.studioblueplanet.tomtomwatch.TrackerProto.Root buildPartial() {
        net.studioblueplanet.tomtomwatch.TrackerProto.Root result = new net.studioblueplanet.tomtomwatch.TrackerProto.Root(this);
        int from_bitField0_ = bitField0_;
        if (rootContainerBuilder_ == null) {
          if (((bitField0_ & 0x00000001) != 0)) {
            rootContainer_ = java.util.Collections.unmodifiableList(rootContainer_);
            bitField0_ = (bitField0_ & ~0x00000001);
          }
          result.rootContainer_ = rootContainer_;
        } else {
          result.rootContainer_ = rootContainerBuilder_.build();
        }
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof net.studioblueplanet.tomtomwatch.TrackerProto.Root) {
          return mergeFrom((net.studioblueplanet.tomtomwatch.TrackerProto.Root)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(net.studioblueplanet.tomtomwatch.TrackerProto.Root other) {
        if (other == net.studioblueplanet.tomtomwatch.TrackerProto.Root.getDefaultInstance()) return this;
        if (rootContainerBuilder_ == null) {
          if (!other.rootContainer_.isEmpty()) {
            if (rootContainer_.isEmpty()) {
              rootContainer_ = other.rootContainer_;
              bitField0_ = (bitField0_ & ~0x00000001);
            } else {
              ensureRootContainerIsMutable();
              rootContainer_.addAll(other.rootContainer_);
            }
            onChanged();
          }
        } else {
          if (!other.rootContainer_.isEmpty()) {
            if (rootContainerBuilder_.isEmpty()) {
              rootContainerBuilder_.dispose();
              rootContainerBuilder_ = null;
              rootContainer_ = other.rootContainer_;
              bitField0_ = (bitField0_ & ~0x00000001);
              rootContainerBuilder_ = 
                com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                   getRootContainerFieldBuilder() : null;
            } else {
              rootContainerBuilder_.addAllMessages(other.rootContainer_);
            }
          }
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        for (int i = 0; i < getRootContainerCount(); i++) {
          if (!getRootContainer(i).isInitialized()) {
            return false;
          }
        }
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        net.studioblueplanet.tomtomwatch.TrackerProto.Root parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (net.studioblueplanet.tomtomwatch.TrackerProto.Root) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private java.util.List<net.studioblueplanet.tomtomwatch.TrackerProto.RootContainer> rootContainer_ =
        java.util.Collections.emptyList();
      private void ensureRootContainerIsMutable() {
        if (!((bitField0_ & 0x00000001) != 0)) {
          rootContainer_ = new java.util.ArrayList<net.studioblueplanet.tomtomwatch.TrackerProto.RootContainer>(rootContainer_);
          bitField0_ |= 0x00000001;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilderV3<
          net.studioblueplanet.tomtomwatch.TrackerProto.RootContainer, net.studioblueplanet.tomtomwatch.TrackerProto.RootContainer.Builder, net.studioblueplanet.tomtomwatch.TrackerProto.RootContainerOrBuilder> rootContainerBuilder_;

      /**
       * <code>repeated .tutorial.RootContainer rootContainer = 1;</code>
       */
      public java.util.List<net.studioblueplanet.tomtomwatch.TrackerProto.RootContainer> getRootContainerList() {
        if (rootContainerBuilder_ == null) {
          return java.util.Collections.unmodifiableList(rootContainer_);
        } else {
          return rootContainerBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .tutorial.RootContainer rootContainer = 1;</code>
       */
      public int getRootContainerCount() {
        if (rootContainerBuilder_ == null) {
          return rootContainer_.size();
        } else {
          return rootContainerBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .tutorial.RootContainer rootContainer = 1;</code>
       */
      public net.studioblueplanet.tomtomwatch.TrackerProto.RootContainer getRootContainer(int index) {
        if (rootContainerBuilder_ == null) {
          return rootContainer_.get(index);
        } else {
          return rootContainerBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .tutorial.RootContainer rootContainer = 1;</code>
       */
      public Builder setRootContainer(
          int index, net.studioblueplanet.tomtomwatch.TrackerProto.RootContainer value) {
        if (rootContainerBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureRootContainerIsMutable();
          rootContainer_.set(index, value);
          onChanged();
        } else {
          rootContainerBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .tutorial.RootContainer rootContainer = 1;</code>
       */
      public Builder setRootContainer(
          int index, net.studioblueplanet.tomtomwatch.TrackerProto.RootContainer.Builder builderForValue) {
        if (rootContainerBuilder_ == null) {
          ensureRootContainerIsMutable();
          rootContainer_.set(index, builderForValue.build());
          onChanged();
        } else {
          rootContainerBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .tutorial.RootContainer rootContainer = 1;</code>
       */
      public Builder addRootContainer(net.studioblueplanet.tomtomwatch.TrackerProto.RootContainer value) {
        if (rootContainerBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureRootContainerIsMutable();
          rootContainer_.add(value);
          onChanged();
        } else {
          rootContainerBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .tutorial.RootContainer rootContainer = 1;</code>
       */
      public Builder addRootContainer(
          int index, net.studioblueplanet.tomtomwatch.TrackerProto.RootContainer value) {
        if (rootContainerBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureRootContainerIsMutable();
          rootContainer_.add(index, value);
          onChanged();
        } else {
          rootContainerBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .tutorial.RootContainer rootContainer = 1;</code>
       */
      public Builder addRootContainer(
          net.studioblueplanet.tomtomwatch.TrackerProto.RootContainer.Builder builderForValue) {
        if (rootContainerBuilder_ == null) {
          ensureRootContainerIsMutable();
          rootContainer_.add(builderForValue.build());
          onChanged();
        } else {
          rootContainerBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .tutorial.RootContainer rootContainer = 1;</code>
       */
      public Builder addRootContainer(
          int index, net.studioblueplanet.tomtomwatch.TrackerProto.RootContainer.Builder builderForValue) {
        if (rootContainerBuilder_ == null) {
          ensureRootContainerIsMutable();
          rootContainer_.add(index, builderForValue.build());
          onChanged();
        } else {
          rootContainerBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .tutorial.RootContainer rootContainer = 1;</code>
       */
      public Builder addAllRootContainer(
          java.lang.Iterable<? extends net.studioblueplanet.tomtomwatch.TrackerProto.RootContainer> values) {
        if (rootContainerBuilder_ == null) {
          ensureRootContainerIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, rootContainer_);
          onChanged();
        } else {
          rootContainerBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .tutorial.RootContainer rootContainer = 1;</code>
       */
      public Builder clearRootContainer() {
        if (rootContainerBuilder_ == null) {
          rootContainer_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000001);
          onChanged();
        } else {
          rootContainerBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .tutorial.RootContainer rootContainer = 1;</code>
       */
      public Builder removeRootContainer(int index) {
        if (rootContainerBuilder_ == null) {
          ensureRootContainerIsMutable();
          rootContainer_.remove(index);
          onChanged();
        } else {
          rootContainerBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .tutorial.RootContainer rootContainer = 1;</code>
       */
      public net.studioblueplanet.tomtomwatch.TrackerProto.RootContainer.Builder getRootContainerBuilder(
          int index) {
        return getRootContainerFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .tutorial.RootContainer rootContainer = 1;</code>
       */
      public net.studioblueplanet.tomtomwatch.TrackerProto.RootContainerOrBuilder getRootContainerOrBuilder(
          int index) {
        if (rootContainerBuilder_ == null) {
          return rootContainer_.get(index);  } else {
          return rootContainerBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .tutorial.RootContainer rootContainer = 1;</code>
       */
      public java.util.List<? extends net.studioblueplanet.tomtomwatch.TrackerProto.RootContainerOrBuilder> 
           getRootContainerOrBuilderList() {
        if (rootContainerBuilder_ != null) {
          return rootContainerBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(rootContainer_);
        }
      }
      /**
       * <code>repeated .tutorial.RootContainer rootContainer = 1;</code>
       */
      public net.studioblueplanet.tomtomwatch.TrackerProto.RootContainer.Builder addRootContainerBuilder() {
        return getRootContainerFieldBuilder().addBuilder(
            net.studioblueplanet.tomtomwatch.TrackerProto.RootContainer.getDefaultInstance());
      }
      /**
       * <code>repeated .tutorial.RootContainer rootContainer = 1;</code>
       */
      public net.studioblueplanet.tomtomwatch.TrackerProto.RootContainer.Builder addRootContainerBuilder(
          int index) {
        return getRootContainerFieldBuilder().addBuilder(
            index, net.studioblueplanet.tomtomwatch.TrackerProto.RootContainer.getDefaultInstance());
      }
      /**
       * <code>repeated .tutorial.RootContainer rootContainer = 1;</code>
       */
      public java.util.List<net.studioblueplanet.tomtomwatch.TrackerProto.RootContainer.Builder> 
           getRootContainerBuilderList() {
        return getRootContainerFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilderV3<
          net.studioblueplanet.tomtomwatch.TrackerProto.RootContainer, net.studioblueplanet.tomtomwatch.TrackerProto.RootContainer.Builder, net.studioblueplanet.tomtomwatch.TrackerProto.RootContainerOrBuilder> 
          getRootContainerFieldBuilder() {
        if (rootContainerBuilder_ == null) {
          rootContainerBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
              net.studioblueplanet.tomtomwatch.TrackerProto.RootContainer, net.studioblueplanet.tomtomwatch.TrackerProto.RootContainer.Builder, net.studioblueplanet.tomtomwatch.TrackerProto.RootContainerOrBuilder>(
                  rootContainer_,
                  ((bitField0_ & 0x00000001) != 0),
                  getParentForChildren(),
                  isClean());
          rootContainer_ = null;
        }
        return rootContainerBuilder_;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:tutorial.Root)
    }

    // @@protoc_insertion_point(class_scope:tutorial.Root)
    private static final net.studioblueplanet.tomtomwatch.TrackerProto.Root DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new net.studioblueplanet.tomtomwatch.TrackerProto.Root();
    }

    public static net.studioblueplanet.tomtomwatch.TrackerProto.Root getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    @java.lang.Deprecated public static final com.google.protobuf.Parser<Root>
        PARSER = new com.google.protobuf.AbstractParser<Root>() {
      @java.lang.Override
      public Root parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new Root(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<Root> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<Root> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public net.studioblueplanet.tomtomwatch.TrackerProto.Root getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface RootContainerOrBuilder extends
      // @@protoc_insertion_point(interface_extends:tutorial.RootContainer)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>optional .tutorial.Metadata metadata = 7;</code>
     */
    boolean hasMetadata();
    /**
     * <code>optional .tutorial.Metadata metadata = 7;</code>
     */
    net.studioblueplanet.tomtomwatch.TrackerProto.Metadata getMetadata();
    /**
     * <code>optional .tutorial.Metadata metadata = 7;</code>
     */
    net.studioblueplanet.tomtomwatch.TrackerProto.MetadataOrBuilder getMetadataOrBuilder();

    /**
     * <code>optional .tutorial.DataContainer dataContainer = 8;</code>
     */
    boolean hasDataContainer();
    /**
     * <code>optional .tutorial.DataContainer dataContainer = 8;</code>
     */
    net.studioblueplanet.tomtomwatch.TrackerProto.DataContainer getDataContainer();
    /**
     * <code>optional .tutorial.DataContainer dataContainer = 8;</code>
     */
    net.studioblueplanet.tomtomwatch.TrackerProto.DataContainerOrBuilder getDataContainerOrBuilder();
  }
  /**
   * <pre>
   *#################################################################################################
   * 1st level: root container
   *#################################################################################################
   * </pre>
   *
   * Protobuf type {@code tutorial.RootContainer}
   */
  public  static final class RootContainer extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:tutorial.RootContainer)
      RootContainerOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use RootContainer.newBuilder() to construct.
    private RootContainer(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private RootContainer() {
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new RootContainer();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private RootContainer(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 58: {
              net.studioblueplanet.tomtomwatch.TrackerProto.Metadata.Builder subBuilder = null;
              if (((bitField0_ & 0x00000001) != 0)) {
                subBuilder = metadata_.toBuilder();
              }
              metadata_ = input.readMessage(net.studioblueplanet.tomtomwatch.TrackerProto.Metadata.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(metadata_);
                metadata_ = subBuilder.buildPartial();
              }
              bitField0_ |= 0x00000001;
              break;
            }
            case 66: {
              net.studioblueplanet.tomtomwatch.TrackerProto.DataContainer.Builder subBuilder = null;
              if (((bitField0_ & 0x00000002) != 0)) {
                subBuilder = dataContainer_.toBuilder();
              }
              dataContainer_ = input.readMessage(net.studioblueplanet.tomtomwatch.TrackerProto.DataContainer.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(dataContainer_);
                dataContainer_ = subBuilder.buildPartial();
              }
              bitField0_ |= 0x00000002;
              break;
            }
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return net.studioblueplanet.tomtomwatch.TrackerProto.internal_static_tutorial_RootContainer_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return net.studioblueplanet.tomtomwatch.TrackerProto.internal_static_tutorial_RootContainer_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              net.studioblueplanet.tomtomwatch.TrackerProto.RootContainer.class, net.studioblueplanet.tomtomwatch.TrackerProto.RootContainer.Builder.class);
    }

    private int bitField0_;
    public static final int METADATA_FIELD_NUMBER = 7;
    private net.studioblueplanet.tomtomwatch.TrackerProto.Metadata metadata_;
    /**
     * <code>optional .tutorial.Metadata metadata = 7;</code>
     */
    public boolean hasMetadata() {
      return ((bitField0_ & 0x00000001) != 0);
    }
    /**
     * <code>optional .tutorial.Metadata metadata = 7;</code>
     */
    public net.studioblueplanet.tomtomwatch.TrackerProto.Metadata getMetadata() {
      return metadata_ == null ? net.studioblueplanet.tomtomwatch.TrackerProto.Metadata.getDefaultInstance() : metadata_;
    }
    /**
     * <code>optional .tutorial.Metadata metadata = 7;</code>
     */
    public net.studioblueplanet.tomtomwatch.TrackerProto.MetadataOrBuilder getMetadataOrBuilder() {
      return metadata_ == null ? net.studioblueplanet.tomtomwatch.TrackerProto.Metadata.getDefaultInstance() : metadata_;
    }

    public static final int DATACONTAINER_FIELD_NUMBER = 8;
    private net.studioblueplanet.tomtomwatch.TrackerProto.DataContainer dataContainer_;
    /**
     * <code>optional .tutorial.DataContainer dataContainer = 8;</code>
     */
    public boolean hasDataContainer() {
      return ((bitField0_ & 0x00000002) != 0);
    }
    /**
     * <code>optional .tutorial.DataContainer dataContainer = 8;</code>
     */
    public net.studioblueplanet.tomtomwatch.TrackerProto.DataContainer getDataContainer() {
      return dataContainer_ == null ? net.studioblueplanet.tomtomwatch.TrackerProto.DataContainer.getDefaultInstance() : dataContainer_;
    }
    /**
     * <code>optional .tutorial.DataContainer dataContainer = 8;</code>
     */
    public net.studioblueplanet.tomtomwatch.TrackerProto.DataContainerOrBuilder getDataContainerOrBuilder() {
      return dataContainer_ == null ? net.studioblueplanet.tomtomwatch.TrackerProto.DataContainer.getDefaultInstance() : dataContainer_;
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      if (hasMetadata()) {
        if (!getMetadata().isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      if (hasDataContainer()) {
        if (!getDataContainer().isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (((bitField0_ & 0x00000001) != 0)) {
        output.writeMessage(7, getMetadata());
      }
      if (((bitField0_ & 0x00000002) != 0)) {
        output.writeMessage(8, getDataContainer());
      }
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(7, getMetadata());
      }
      if (((bitField0_ & 0x00000002) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(8, getDataContainer());
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof net.studioblueplanet.tomtomwatch.TrackerProto.RootContainer)) {
        return super.equals(obj);
      }
      net.studioblueplanet.tomtomwatch.TrackerProto.RootContainer other = (net.studioblueplanet.tomtomwatch.TrackerProto.RootContainer) obj;

      if (hasMetadata() != other.hasMetadata()) return false;
      if (hasMetadata()) {
        if (!getMetadata()
            .equals(other.getMetadata())) return false;
      }
      if (hasDataContainer() != other.hasDataContainer()) return false;
      if (hasDataContainer()) {
        if (!getDataContainer()
            .equals(other.getDataContainer())) return false;
      }
      if (!unknownFields.equals(other.unknownFields)) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (hasMetadata()) {
        hash = (37 * hash) + METADATA_FIELD_NUMBER;
        hash = (53 * hash) + getMetadata().hashCode();
      }
      if (hasDataContainer()) {
        hash = (37 * hash) + DATACONTAINER_FIELD_NUMBER;
        hash = (53 * hash) + getDataContainer().hashCode();
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static net.studioblueplanet.tomtomwatch.TrackerProto.RootContainer parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static net.studioblueplanet.tomtomwatch.TrackerProto.RootContainer parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static net.studioblueplanet.tomtomwatch.TrackerProto.RootContainer parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static net.studioblueplanet.tomtomwatch.TrackerProto.RootContainer parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static net.studioblueplanet.tomtomwatch.TrackerProto.RootContainer parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static net.studioblueplanet.tomtomwatch.TrackerProto.RootContainer parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static net.studioblueplanet.tomtomwatch.TrackerProto.RootContainer parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static net.studioblueplanet.tomtomwatch.TrackerProto.RootContainer parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static net.studioblueplanet.tomtomwatch.TrackerProto.RootContainer parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static net.studioblueplanet.tomtomwatch.TrackerProto.RootContainer parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static net.studioblueplanet.tomtomwatch.TrackerProto.RootContainer parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static net.studioblueplanet.tomtomwatch.TrackerProto.RootContainer parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(net.studioblueplanet.tomtomwatch.TrackerProto.RootContainer prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     *#################################################################################################
     * 1st level: root container
     *#################################################################################################
     * </pre>
     *
     * Protobuf type {@code tutorial.RootContainer}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:tutorial.RootContainer)
        net.studioblueplanet.tomtomwatch.TrackerProto.RootContainerOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return net.studioblueplanet.tomtomwatch.TrackerProto.internal_static_tutorial_RootContainer_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return net.studioblueplanet.tomtomwatch.TrackerProto.internal_static_tutorial_RootContainer_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                net.studioblueplanet.tomtomwatch.TrackerProto.RootContainer.class, net.studioblueplanet.tomtomwatch.TrackerProto.RootContainer.Builder.class);
      }

      // Construct using net.studioblueplanet.tomtomwatch.TrackerProto.RootContainer.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
          getMetadataFieldBuilder();
          getDataContainerFieldBuilder();
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        if (metadataBuilder_ == null) {
          metadata_ = null;
        } else {
          metadataBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000001);
        if (dataContainerBuilder_ == null) {
          dataContainer_ = null;
        } else {
          dataContainerBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000002);
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return net.studioblueplanet.tomtomwatch.TrackerProto.internal_static_tutorial_RootContainer_descriptor;
      }

      @java.lang.Override
      public net.studioblueplanet.tomtomwatch.TrackerProto.RootContainer getDefaultInstanceForType() {
        return net.studioblueplanet.tomtomwatch.TrackerProto.RootContainer.getDefaultInstance();
      }

      @java.lang.Override
      public net.studioblueplanet.tomtomwatch.TrackerProto.RootContainer build() {
        net.studioblueplanet.tomtomwatch.TrackerProto.RootContainer result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public net.studioblueplanet.tomtomwatch.TrackerProto.RootContainer buildPartial() {
        net.studioblueplanet.tomtomwatch.TrackerProto.RootContainer result = new net.studioblueplanet.tomtomwatch.TrackerProto.RootContainer(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) != 0)) {
          if (metadataBuilder_ == null) {
            result.metadata_ = metadata_;
          } else {
            result.metadata_ = metadataBuilder_.build();
          }
          to_bitField0_ |= 0x00000001;
        }
        if (((from_bitField0_ & 0x00000002) != 0)) {
          if (dataContainerBuilder_ == null) {
            result.dataContainer_ = dataContainer_;
          } else {
            result.dataContainer_ = dataContainerBuilder_.build();
          }
          to_bitField0_ |= 0x00000002;
        }
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof net.studioblueplanet.tomtomwatch.TrackerProto.RootContainer) {
          return mergeFrom((net.studioblueplanet.tomtomwatch.TrackerProto.RootContainer)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(net.studioblueplanet.tomtomwatch.TrackerProto.RootContainer other) {
        if (other == net.studioblueplanet.tomtomwatch.TrackerProto.RootContainer.getDefaultInstance()) return this;
        if (other.hasMetadata()) {
          mergeMetadata(other.getMetadata());
        }
        if (other.hasDataContainer()) {
          mergeDataContainer(other.getDataContainer());
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        if (hasMetadata()) {
          if (!getMetadata().isInitialized()) {
            return false;
          }
        }
        if (hasDataContainer()) {
          if (!getDataContainer().isInitialized()) {
            return false;
          }
        }
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        net.studioblueplanet.tomtomwatch.TrackerProto.RootContainer parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (net.studioblueplanet.tomtomwatch.TrackerProto.RootContainer) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private net.studioblueplanet.tomtomwatch.TrackerProto.Metadata metadata_;
      private com.google.protobuf.SingleFieldBuilderV3<
          net.studioblueplanet.tomtomwatch.TrackerProto.Metadata, net.studioblueplanet.tomtomwatch.TrackerProto.Metadata.Builder, net.studioblueplanet.tomtomwatch.TrackerProto.MetadataOrBuilder> metadataBuilder_;
      /**
       * <code>optional .tutorial.Metadata metadata = 7;</code>
       */
      public boolean hasMetadata() {
        return ((bitField0_ & 0x00000001) != 0);
      }
      /**
       * <code>optional .tutorial.Metadata metadata = 7;</code>
       */
      public net.studioblueplanet.tomtomwatch.TrackerProto.Metadata getMetadata() {
        if (metadataBuilder_ == null) {
          return metadata_ == null ? net.studioblueplanet.tomtomwatch.TrackerProto.Metadata.getDefaultInstance() : metadata_;
        } else {
          return metadataBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .tutorial.Metadata metadata = 7;</code>
       */
      public Builder setMetadata(net.studioblueplanet.tomtomwatch.TrackerProto.Metadata value) {
        if (metadataBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          metadata_ = value;
          onChanged();
        } else {
          metadataBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000001;
        return this;
      }
      /**
       * <code>optional .tutorial.Metadata metadata = 7;</code>
       */
      public Builder setMetadata(
          net.studioblueplanet.tomtomwatch.TrackerProto.Metadata.Builder builderForValue) {
        if (metadataBuilder_ == null) {
          metadata_ = builderForValue.build();
          onChanged();
        } else {
          metadataBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000001;
        return this;
      }
      /**
       * <code>optional .tutorial.Metadata metadata = 7;</code>
       */
      public Builder mergeMetadata(net.studioblueplanet.tomtomwatch.TrackerProto.Metadata value) {
        if (metadataBuilder_ == null) {
          if (((bitField0_ & 0x00000001) != 0) &&
              metadata_ != null &&
              metadata_ != net.studioblueplanet.tomtomwatch.TrackerProto.Metadata.getDefaultInstance()) {
            metadata_ =
              net.studioblueplanet.tomtomwatch.TrackerProto.Metadata.newBuilder(metadata_).mergeFrom(value).buildPartial();
          } else {
            metadata_ = value;
          }
          onChanged();
        } else {
          metadataBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000001;
        return this;
      }
      /**
       * <code>optional .tutorial.Metadata metadata = 7;</code>
       */
      public Builder clearMetadata() {
        if (metadataBuilder_ == null) {
          metadata_ = null;
          onChanged();
        } else {
          metadataBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000001);
        return this;
      }
      /**
       * <code>optional .tutorial.Metadata metadata = 7;</code>
       */
      public net.studioblueplanet.tomtomwatch.TrackerProto.Metadata.Builder getMetadataBuilder() {
        bitField0_ |= 0x00000001;
        onChanged();
        return getMetadataFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .tutorial.Metadata metadata = 7;</code>
       */
      public net.studioblueplanet.tomtomwatch.TrackerProto.MetadataOrBuilder getMetadataOrBuilder() {
        if (metadataBuilder_ != null) {
          return metadataBuilder_.getMessageOrBuilder();
        } else {
          return metadata_ == null ?
              net.studioblueplanet.tomtomwatch.TrackerProto.Metadata.getDefaultInstance() : metadata_;
        }
      }
      /**
       * <code>optional .tutorial.Metadata metadata = 7;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          net.studioblueplanet.tomtomwatch.TrackerProto.Metadata, net.studioblueplanet.tomtomwatch.TrackerProto.Metadata.Builder, net.studioblueplanet.tomtomwatch.TrackerProto.MetadataOrBuilder> 
          getMetadataFieldBuilder() {
        if (metadataBuilder_ == null) {
          metadataBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              net.studioblueplanet.tomtomwatch.TrackerProto.Metadata, net.studioblueplanet.tomtomwatch.TrackerProto.Metadata.Builder, net.studioblueplanet.tomtomwatch.TrackerProto.MetadataOrBuilder>(
                  getMetadata(),
                  getParentForChildren(),
                  isClean());
          metadata_ = null;
        }
        return metadataBuilder_;
      }

      private net.studioblueplanet.tomtomwatch.TrackerProto.DataContainer dataContainer_;
      private com.google.protobuf.SingleFieldBuilderV3<
          net.studioblueplanet.tomtomwatch.TrackerProto.DataContainer, net.studioblueplanet.tomtomwatch.TrackerProto.DataContainer.Builder, net.studioblueplanet.tomtomwatch.TrackerProto.DataContainerOrBuilder> dataContainerBuilder_;
      /**
       * <code>optional .tutorial.DataContainer dataContainer = 8;</code>
       */
      public boolean hasDataContainer() {
        return ((bitField0_ & 0x00000002) != 0);
      }
      /**
       * <code>optional .tutorial.DataContainer dataContainer = 8;</code>
       */
      public net.studioblueplanet.tomtomwatch.TrackerProto.DataContainer getDataContainer() {
        if (dataContainerBuilder_ == null) {
          return dataContainer_ == null ? net.studioblueplanet.tomtomwatch.TrackerProto.DataContainer.getDefaultInstance() : dataContainer_;
        } else {
          return dataContainerBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .tutorial.DataContainer dataContainer = 8;</code>
       */
      public Builder setDataContainer(net.studioblueplanet.tomtomwatch.TrackerProto.DataContainer value) {
        if (dataContainerBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          dataContainer_ = value;
          onChanged();
        } else {
          dataContainerBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000002;
        return this;
      }
      /**
       * <code>optional .tutorial.DataContainer dataContainer = 8;</code>
       */
      public Builder setDataContainer(
          net.studioblueplanet.tomtomwatch.TrackerProto.DataContainer.Builder builderForValue) {
        if (dataContainerBuilder_ == null) {
          dataContainer_ = builderForValue.build();
          onChanged();
        } else {
          dataContainerBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000002;
        return this;
      }
      /**
       * <code>optional .tutorial.DataContainer dataContainer = 8;</code>
       */
      public Builder mergeDataContainer(net.studioblueplanet.tomtomwatch.TrackerProto.DataContainer value) {
        if (dataContainerBuilder_ == null) {
          if (((bitField0_ & 0x00000002) != 0) &&
              dataContainer_ != null &&
              dataContainer_ != net.studioblueplanet.tomtomwatch.TrackerProto.DataContainer.getDefaultInstance()) {
            dataContainer_ =
              net.studioblueplanet.tomtomwatch.TrackerProto.DataContainer.newBuilder(dataContainer_).mergeFrom(value).buildPartial();
          } else {
            dataContainer_ = value;
          }
          onChanged();
        } else {
          dataContainerBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000002;
        return this;
      }
      /**
       * <code>optional .tutorial.DataContainer dataContainer = 8;</code>
       */
      public Builder clearDataContainer() {
        if (dataContainerBuilder_ == null) {
          dataContainer_ = null;
          onChanged();
        } else {
          dataContainerBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000002);
        return this;
      }
      /**
       * <code>optional .tutorial.DataContainer dataContainer = 8;</code>
       */
      public net.studioblueplanet.tomtomwatch.TrackerProto.DataContainer.Builder getDataContainerBuilder() {
        bitField0_ |= 0x00000002;
        onChanged();
        return getDataContainerFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .tutorial.DataContainer dataContainer = 8;</code>
       */
      public net.studioblueplanet.tomtomwatch.TrackerProto.DataContainerOrBuilder getDataContainerOrBuilder() {
        if (dataContainerBuilder_ != null) {
          return dataContainerBuilder_.getMessageOrBuilder();
        } else {
          return dataContainer_ == null ?
              net.studioblueplanet.tomtomwatch.TrackerProto.DataContainer.getDefaultInstance() : dataContainer_;
        }
      }
      /**
       * <code>optional .tutorial.DataContainer dataContainer = 8;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          net.studioblueplanet.tomtomwatch.TrackerProto.DataContainer, net.studioblueplanet.tomtomwatch.TrackerProto.DataContainer.Builder, net.studioblueplanet.tomtomwatch.TrackerProto.DataContainerOrBuilder> 
          getDataContainerFieldBuilder() {
        if (dataContainerBuilder_ == null) {
          dataContainerBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              net.studioblueplanet.tomtomwatch.TrackerProto.DataContainer, net.studioblueplanet.tomtomwatch.TrackerProto.DataContainer.Builder, net.studioblueplanet.tomtomwatch.TrackerProto.DataContainerOrBuilder>(
                  getDataContainer(),
                  getParentForChildren(),
                  isClean());
          dataContainer_ = null;
        }
        return dataContainerBuilder_;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:tutorial.RootContainer)
    }

    // @@protoc_insertion_point(class_scope:tutorial.RootContainer)
    private static final net.studioblueplanet.tomtomwatch.TrackerProto.RootContainer DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new net.studioblueplanet.tomtomwatch.TrackerProto.RootContainer();
    }

    public static net.studioblueplanet.tomtomwatch.TrackerProto.RootContainer getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    @java.lang.Deprecated public static final com.google.protobuf.Parser<RootContainer>
        PARSER = new com.google.protobuf.AbstractParser<RootContainer>() {
      @java.lang.Override
      public RootContainer parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new RootContainer(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<RootContainer> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<RootContainer> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public net.studioblueplanet.tomtomwatch.TrackerProto.RootContainer getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface MetadataOrBuilder extends
      // @@protoc_insertion_point(interface_extends:tutorial.Metadata)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     * always 0x1234DAEB
     * </pre>
     *
     * <code>required fixed32 manufacturer = 1;</code>
     */
    boolean hasManufacturer();
    /**
     * <pre>
     * always 0x1234DAEB
     * </pre>
     *
     * <code>required fixed32 manufacturer = 1;</code>
     */
    int getManufacturer();

    /**
     * <pre>
     * 0x00010100 for 0x00BE0000
     * </pre>
     *
     * <code>required fixed32 fileType = 2;</code>
     */
    boolean hasFileType();
    /**
     * <pre>
     * 0x00010100 for 0x00BE0000
     * </pre>
     *
     * <code>required fixed32 fileType = 2;</code>
     */
    int getFileType();
  }
  /**
   * Protobuf type {@code tutorial.Metadata}
   */
  public  static final class Metadata extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:tutorial.Metadata)
      MetadataOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use Metadata.newBuilder() to construct.
    private Metadata(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private Metadata() {
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new Metadata();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private Metadata(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 13: {
              bitField0_ |= 0x00000001;
              manufacturer_ = input.readFixed32();
              break;
            }
            case 21: {
              bitField0_ |= 0x00000002;
              fileType_ = input.readFixed32();
              break;
            }
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return net.studioblueplanet.tomtomwatch.TrackerProto.internal_static_tutorial_Metadata_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return net.studioblueplanet.tomtomwatch.TrackerProto.internal_static_tutorial_Metadata_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              net.studioblueplanet.tomtomwatch.TrackerProto.Metadata.class, net.studioblueplanet.tomtomwatch.TrackerProto.Metadata.Builder.class);
    }

    private int bitField0_;
    public static final int MANUFACTURER_FIELD_NUMBER = 1;
    private int manufacturer_;
    /**
     * <pre>
     * always 0x1234DAEB
     * </pre>
     *
     * <code>required fixed32 manufacturer = 1;</code>
     */
    public boolean hasManufacturer() {
      return ((bitField0_ & 0x00000001) != 0);
    }
    /**
     * <pre>
     * always 0x1234DAEB
     * </pre>
     *
     * <code>required fixed32 manufacturer = 1;</code>
     */
    public int getManufacturer() {
      return manufacturer_;
    }

    public static final int FILETYPE_FIELD_NUMBER = 2;
    private int fileType_;
    /**
     * <pre>
     * 0x00010100 for 0x00BE0000
     * </pre>
     *
     * <code>required fixed32 fileType = 2;</code>
     */
    public boolean hasFileType() {
      return ((bitField0_ & 0x00000002) != 0);
    }
    /**
     * <pre>
     * 0x00010100 for 0x00BE0000
     * </pre>
     *
     * <code>required fixed32 fileType = 2;</code>
     */
    public int getFileType() {
      return fileType_;
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      if (!hasManufacturer()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasFileType()) {
        memoizedIsInitialized = 0;
        return false;
      }
      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (((bitField0_ & 0x00000001) != 0)) {
        output.writeFixed32(1, manufacturer_);
      }
      if (((bitField0_ & 0x00000002) != 0)) {
        output.writeFixed32(2, fileType_);
      }
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeFixed32Size(1, manufacturer_);
      }
      if (((bitField0_ & 0x00000002) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeFixed32Size(2, fileType_);
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof net.studioblueplanet.tomtomwatch.TrackerProto.Metadata)) {
        return super.equals(obj);
      }
      net.studioblueplanet.tomtomwatch.TrackerProto.Metadata other = (net.studioblueplanet.tomtomwatch.TrackerProto.Metadata) obj;

      if (hasManufacturer() != other.hasManufacturer()) return false;
      if (hasManufacturer()) {
        if (getManufacturer()
            != other.getManufacturer()) return false;
      }
      if (hasFileType() != other.hasFileType()) return false;
      if (hasFileType()) {
        if (getFileType()
            != other.getFileType()) return false;
      }
      if (!unknownFields.equals(other.unknownFields)) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (hasManufacturer()) {
        hash = (37 * hash) + MANUFACTURER_FIELD_NUMBER;
        hash = (53 * hash) + getManufacturer();
      }
      if (hasFileType()) {
        hash = (37 * hash) + FILETYPE_FIELD_NUMBER;
        hash = (53 * hash) + getFileType();
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static net.studioblueplanet.tomtomwatch.TrackerProto.Metadata parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static net.studioblueplanet.tomtomwatch.TrackerProto.Metadata parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static net.studioblueplanet.tomtomwatch.TrackerProto.Metadata parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static net.studioblueplanet.tomtomwatch.TrackerProto.Metadata parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static net.studioblueplanet.tomtomwatch.TrackerProto.Metadata parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static net.studioblueplanet.tomtomwatch.TrackerProto.Metadata parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static net.studioblueplanet.tomtomwatch.TrackerProto.Metadata parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static net.studioblueplanet.tomtomwatch.TrackerProto.Metadata parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static net.studioblueplanet.tomtomwatch.TrackerProto.Metadata parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static net.studioblueplanet.tomtomwatch.TrackerProto.Metadata parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static net.studioblueplanet.tomtomwatch.TrackerProto.Metadata parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static net.studioblueplanet.tomtomwatch.TrackerProto.Metadata parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(net.studioblueplanet.tomtomwatch.TrackerProto.Metadata prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code tutorial.Metadata}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:tutorial.Metadata)
        net.studioblueplanet.tomtomwatch.TrackerProto.MetadataOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return net.studioblueplanet.tomtomwatch.TrackerProto.internal_static_tutorial_Metadata_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return net.studioblueplanet.tomtomwatch.TrackerProto.internal_static_tutorial_Metadata_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                net.studioblueplanet.tomtomwatch.TrackerProto.Metadata.class, net.studioblueplanet.tomtomwatch.TrackerProto.Metadata.Builder.class);
      }

      // Construct using net.studioblueplanet.tomtomwatch.TrackerProto.Metadata.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        manufacturer_ = 0;
        bitField0_ = (bitField0_ & ~0x00000001);
        fileType_ = 0;
        bitField0_ = (bitField0_ & ~0x00000002);
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return net.studioblueplanet.tomtomwatch.TrackerProto.internal_static_tutorial_Metadata_descriptor;
      }

      @java.lang.Override
      public net.studioblueplanet.tomtomwatch.TrackerProto.Metadata getDefaultInstanceForType() {
        return net.studioblueplanet.tomtomwatch.TrackerProto.Metadata.getDefaultInstance();
      }

      @java.lang.Override
      public net.studioblueplanet.tomtomwatch.TrackerProto.Metadata build() {
        net.studioblueplanet.tomtomwatch.TrackerProto.Metadata result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public net.studioblueplanet.tomtomwatch.TrackerProto.Metadata buildPartial() {
        net.studioblueplanet.tomtomwatch.TrackerProto.Metadata result = new net.studioblueplanet.tomtomwatch.TrackerProto.Metadata(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) != 0)) {
          result.manufacturer_ = manufacturer_;
          to_bitField0_ |= 0x00000001;
        }
        if (((from_bitField0_ & 0x00000002) != 0)) {
          result.fileType_ = fileType_;
          to_bitField0_ |= 0x00000002;
        }
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof net.studioblueplanet.tomtomwatch.TrackerProto.Metadata) {
          return mergeFrom((net.studioblueplanet.tomtomwatch.TrackerProto.Metadata)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(net.studioblueplanet.tomtomwatch.TrackerProto.Metadata other) {
        if (other == net.studioblueplanet.tomtomwatch.TrackerProto.Metadata.getDefaultInstance()) return this;
        if (other.hasManufacturer()) {
          setManufacturer(other.getManufacturer());
        }
        if (other.hasFileType()) {
          setFileType(other.getFileType());
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        if (!hasManufacturer()) {
          return false;
        }
        if (!hasFileType()) {
          return false;
        }
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        net.studioblueplanet.tomtomwatch.TrackerProto.Metadata parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (net.studioblueplanet.tomtomwatch.TrackerProto.Metadata) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private int manufacturer_ ;
      /**
       * <pre>
       * always 0x1234DAEB
       * </pre>
       *
       * <code>required fixed32 manufacturer = 1;</code>
       */
      public boolean hasManufacturer() {
        return ((bitField0_ & 0x00000001) != 0);
      }
      /**
       * <pre>
       * always 0x1234DAEB
       * </pre>
       *
       * <code>required fixed32 manufacturer = 1;</code>
       */
      public int getManufacturer() {
        return manufacturer_;
      }
      /**
       * <pre>
       * always 0x1234DAEB
       * </pre>
       *
       * <code>required fixed32 manufacturer = 1;</code>
       */
      public Builder setManufacturer(int value) {
        bitField0_ |= 0x00000001;
        manufacturer_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * always 0x1234DAEB
       * </pre>
       *
       * <code>required fixed32 manufacturer = 1;</code>
       */
      public Builder clearManufacturer() {
        bitField0_ = (bitField0_ & ~0x00000001);
        manufacturer_ = 0;
        onChanged();
        return this;
      }

      private int fileType_ ;
      /**
       * <pre>
       * 0x00010100 for 0x00BE0000
       * </pre>
       *
       * <code>required fixed32 fileType = 2;</code>
       */
      public boolean hasFileType() {
        return ((bitField0_ & 0x00000002) != 0);
      }
      /**
       * <pre>
       * 0x00010100 for 0x00BE0000
       * </pre>
       *
       * <code>required fixed32 fileType = 2;</code>
       */
      public int getFileType() {
        return fileType_;
      }
      /**
       * <pre>
       * 0x00010100 for 0x00BE0000
       * </pre>
       *
       * <code>required fixed32 fileType = 2;</code>
       */
      public Builder setFileType(int value) {
        bitField0_ |= 0x00000002;
        fileType_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * 0x00010100 for 0x00BE0000
       * </pre>
       *
       * <code>required fixed32 fileType = 2;</code>
       */
      public Builder clearFileType() {
        bitField0_ = (bitField0_ & ~0x00000002);
        fileType_ = 0;
        onChanged();
        return this;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:tutorial.Metadata)
    }

    // @@protoc_insertion_point(class_scope:tutorial.Metadata)
    private static final net.studioblueplanet.tomtomwatch.TrackerProto.Metadata DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new net.studioblueplanet.tomtomwatch.TrackerProto.Metadata();
    }

    public static net.studioblueplanet.tomtomwatch.TrackerProto.Metadata getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    @java.lang.Deprecated public static final com.google.protobuf.Parser<Metadata>
        PARSER = new com.google.protobuf.AbstractParser<Metadata>() {
      @java.lang.Override
      public Metadata parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new Metadata(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<Metadata> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<Metadata> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public net.studioblueplanet.tomtomwatch.TrackerProto.Metadata getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface DataContainerOrBuilder extends
      // @@protoc_insertion_point(interface_extends:tutorial.DataContainer)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>required .tutorial.SubDataContainer subDataContainer = 1;</code>
     */
    boolean hasSubDataContainer();
    /**
     * <code>required .tutorial.SubDataContainer subDataContainer = 1;</code>
     */
    net.studioblueplanet.tomtomwatch.TrackerProto.SubDataContainer getSubDataContainer();
    /**
     * <code>required .tutorial.SubDataContainer subDataContainer = 1;</code>
     */
    net.studioblueplanet.tomtomwatch.TrackerProto.SubDataContainerOrBuilder getSubDataContainerOrBuilder();
  }
  /**
   * Protobuf type {@code tutorial.DataContainer}
   */
  public  static final class DataContainer extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:tutorial.DataContainer)
      DataContainerOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use DataContainer.newBuilder() to construct.
    private DataContainer(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private DataContainer() {
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new DataContainer();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private DataContainer(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 10: {
              net.studioblueplanet.tomtomwatch.TrackerProto.SubDataContainer.Builder subBuilder = null;
              if (((bitField0_ & 0x00000001) != 0)) {
                subBuilder = subDataContainer_.toBuilder();
              }
              subDataContainer_ = input.readMessage(net.studioblueplanet.tomtomwatch.TrackerProto.SubDataContainer.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(subDataContainer_);
                subDataContainer_ = subBuilder.buildPartial();
              }
              bitField0_ |= 0x00000001;
              break;
            }
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return net.studioblueplanet.tomtomwatch.TrackerProto.internal_static_tutorial_DataContainer_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return net.studioblueplanet.tomtomwatch.TrackerProto.internal_static_tutorial_DataContainer_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              net.studioblueplanet.tomtomwatch.TrackerProto.DataContainer.class, net.studioblueplanet.tomtomwatch.TrackerProto.DataContainer.Builder.class);
    }

    private int bitField0_;
    public static final int SUBDATACONTAINER_FIELD_NUMBER = 1;
    private net.studioblueplanet.tomtomwatch.TrackerProto.SubDataContainer subDataContainer_;
    /**
     * <code>required .tutorial.SubDataContainer subDataContainer = 1;</code>
     */
    public boolean hasSubDataContainer() {
      return ((bitField0_ & 0x00000001) != 0);
    }
    /**
     * <code>required .tutorial.SubDataContainer subDataContainer = 1;</code>
     */
    public net.studioblueplanet.tomtomwatch.TrackerProto.SubDataContainer getSubDataContainer() {
      return subDataContainer_ == null ? net.studioblueplanet.tomtomwatch.TrackerProto.SubDataContainer.getDefaultInstance() : subDataContainer_;
    }
    /**
     * <code>required .tutorial.SubDataContainer subDataContainer = 1;</code>
     */
    public net.studioblueplanet.tomtomwatch.TrackerProto.SubDataContainerOrBuilder getSubDataContainerOrBuilder() {
      return subDataContainer_ == null ? net.studioblueplanet.tomtomwatch.TrackerProto.SubDataContainer.getDefaultInstance() : subDataContainer_;
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      if (!hasSubDataContainer()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!getSubDataContainer().isInitialized()) {
        memoizedIsInitialized = 0;
        return false;
      }
      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (((bitField0_ & 0x00000001) != 0)) {
        output.writeMessage(1, getSubDataContainer());
      }
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, getSubDataContainer());
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof net.studioblueplanet.tomtomwatch.TrackerProto.DataContainer)) {
        return super.equals(obj);
      }
      net.studioblueplanet.tomtomwatch.TrackerProto.DataContainer other = (net.studioblueplanet.tomtomwatch.TrackerProto.DataContainer) obj;

      if (hasSubDataContainer() != other.hasSubDataContainer()) return false;
      if (hasSubDataContainer()) {
        if (!getSubDataContainer()
            .equals(other.getSubDataContainer())) return false;
      }
      if (!unknownFields.equals(other.unknownFields)) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (hasSubDataContainer()) {
        hash = (37 * hash) + SUBDATACONTAINER_FIELD_NUMBER;
        hash = (53 * hash) + getSubDataContainer().hashCode();
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static net.studioblueplanet.tomtomwatch.TrackerProto.DataContainer parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static net.studioblueplanet.tomtomwatch.TrackerProto.DataContainer parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static net.studioblueplanet.tomtomwatch.TrackerProto.DataContainer parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static net.studioblueplanet.tomtomwatch.TrackerProto.DataContainer parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static net.studioblueplanet.tomtomwatch.TrackerProto.DataContainer parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static net.studioblueplanet.tomtomwatch.TrackerProto.DataContainer parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static net.studioblueplanet.tomtomwatch.TrackerProto.DataContainer parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static net.studioblueplanet.tomtomwatch.TrackerProto.DataContainer parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static net.studioblueplanet.tomtomwatch.TrackerProto.DataContainer parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static net.studioblueplanet.tomtomwatch.TrackerProto.DataContainer parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static net.studioblueplanet.tomtomwatch.TrackerProto.DataContainer parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static net.studioblueplanet.tomtomwatch.TrackerProto.DataContainer parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(net.studioblueplanet.tomtomwatch.TrackerProto.DataContainer prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code tutorial.DataContainer}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:tutorial.DataContainer)
        net.studioblueplanet.tomtomwatch.TrackerProto.DataContainerOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return net.studioblueplanet.tomtomwatch.TrackerProto.internal_static_tutorial_DataContainer_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return net.studioblueplanet.tomtomwatch.TrackerProto.internal_static_tutorial_DataContainer_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                net.studioblueplanet.tomtomwatch.TrackerProto.DataContainer.class, net.studioblueplanet.tomtomwatch.TrackerProto.DataContainer.Builder.class);
      }

      // Construct using net.studioblueplanet.tomtomwatch.TrackerProto.DataContainer.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
          getSubDataContainerFieldBuilder();
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        if (subDataContainerBuilder_ == null) {
          subDataContainer_ = null;
        } else {
          subDataContainerBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000001);
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return net.studioblueplanet.tomtomwatch.TrackerProto.internal_static_tutorial_DataContainer_descriptor;
      }

      @java.lang.Override
      public net.studioblueplanet.tomtomwatch.TrackerProto.DataContainer getDefaultInstanceForType() {
        return net.studioblueplanet.tomtomwatch.TrackerProto.DataContainer.getDefaultInstance();
      }

      @java.lang.Override
      public net.studioblueplanet.tomtomwatch.TrackerProto.DataContainer build() {
        net.studioblueplanet.tomtomwatch.TrackerProto.DataContainer result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public net.studioblueplanet.tomtomwatch.TrackerProto.DataContainer buildPartial() {
        net.studioblueplanet.tomtomwatch.TrackerProto.DataContainer result = new net.studioblueplanet.tomtomwatch.TrackerProto.DataContainer(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) != 0)) {
          if (subDataContainerBuilder_ == null) {
            result.subDataContainer_ = subDataContainer_;
          } else {
            result.subDataContainer_ = subDataContainerBuilder_.build();
          }
          to_bitField0_ |= 0x00000001;
        }
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof net.studioblueplanet.tomtomwatch.TrackerProto.DataContainer) {
          return mergeFrom((net.studioblueplanet.tomtomwatch.TrackerProto.DataContainer)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(net.studioblueplanet.tomtomwatch.TrackerProto.DataContainer other) {
        if (other == net.studioblueplanet.tomtomwatch.TrackerProto.DataContainer.getDefaultInstance()) return this;
        if (other.hasSubDataContainer()) {
          mergeSubDataContainer(other.getSubDataContainer());
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        if (!hasSubDataContainer()) {
          return false;
        }
        if (!getSubDataContainer().isInitialized()) {
          return false;
        }
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        net.studioblueplanet.tomtomwatch.TrackerProto.DataContainer parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (net.studioblueplanet.tomtomwatch.TrackerProto.DataContainer) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private net.studioblueplanet.tomtomwatch.TrackerProto.SubDataContainer subDataContainer_;
      private com.google.protobuf.SingleFieldBuilderV3<
          net.studioblueplanet.tomtomwatch.TrackerProto.SubDataContainer, net.studioblueplanet.tomtomwatch.TrackerProto.SubDataContainer.Builder, net.studioblueplanet.tomtomwatch.TrackerProto.SubDataContainerOrBuilder> subDataContainerBuilder_;
      /**
       * <code>required .tutorial.SubDataContainer subDataContainer = 1;</code>
       */
      public boolean hasSubDataContainer() {
        return ((bitField0_ & 0x00000001) != 0);
      }
      /**
       * <code>required .tutorial.SubDataContainer subDataContainer = 1;</code>
       */
      public net.studioblueplanet.tomtomwatch.TrackerProto.SubDataContainer getSubDataContainer() {
        if (subDataContainerBuilder_ == null) {
          return subDataContainer_ == null ? net.studioblueplanet.tomtomwatch.TrackerProto.SubDataContainer.getDefaultInstance() : subDataContainer_;
        } else {
          return subDataContainerBuilder_.getMessage();
        }
      }
      /**
       * <code>required .tutorial.SubDataContainer subDataContainer = 1;</code>
       */
      public Builder setSubDataContainer(net.studioblueplanet.tomtomwatch.TrackerProto.SubDataContainer value) {
        if (subDataContainerBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          subDataContainer_ = value;
          onChanged();
        } else {
          subDataContainerBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000001;
        return this;
      }
      /**
       * <code>required .tutorial.SubDataContainer subDataContainer = 1;</code>
       */
      public Builder setSubDataContainer(
          net.studioblueplanet.tomtomwatch.TrackerProto.SubDataContainer.Builder builderForValue) {
        if (subDataContainerBuilder_ == null) {
          subDataContainer_ = builderForValue.build();
          onChanged();
        } else {
          subDataContainerBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000001;
        return this;
      }
      /**
       * <code>required .tutorial.SubDataContainer subDataContainer = 1;</code>
       */
      public Builder mergeSubDataContainer(net.studioblueplanet.tomtomwatch.TrackerProto.SubDataContainer value) {
        if (subDataContainerBuilder_ == null) {
          if (((bitField0_ & 0x00000001) != 0) &&
              subDataContainer_ != null &&
              subDataContainer_ != net.studioblueplanet.tomtomwatch.TrackerProto.SubDataContainer.getDefaultInstance()) {
            subDataContainer_ =
              net.studioblueplanet.tomtomwatch.TrackerProto.SubDataContainer.newBuilder(subDataContainer_).mergeFrom(value).buildPartial();
          } else {
            subDataContainer_ = value;
          }
          onChanged();
        } else {
          subDataContainerBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000001;
        return this;
      }
      /**
       * <code>required .tutorial.SubDataContainer subDataContainer = 1;</code>
       */
      public Builder clearSubDataContainer() {
        if (subDataContainerBuilder_ == null) {
          subDataContainer_ = null;
          onChanged();
        } else {
          subDataContainerBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000001);
        return this;
      }
      /**
       * <code>required .tutorial.SubDataContainer subDataContainer = 1;</code>
       */
      public net.studioblueplanet.tomtomwatch.TrackerProto.SubDataContainer.Builder getSubDataContainerBuilder() {
        bitField0_ |= 0x00000001;
        onChanged();
        return getSubDataContainerFieldBuilder().getBuilder();
      }
      /**
       * <code>required .tutorial.SubDataContainer subDataContainer = 1;</code>
       */
      public net.studioblueplanet.tomtomwatch.TrackerProto.SubDataContainerOrBuilder getSubDataContainerOrBuilder() {
        if (subDataContainerBuilder_ != null) {
          return subDataContainerBuilder_.getMessageOrBuilder();
        } else {
          return subDataContainer_ == null ?
              net.studioblueplanet.tomtomwatch.TrackerProto.SubDataContainer.getDefaultInstance() : subDataContainer_;
        }
      }
      /**
       * <code>required .tutorial.SubDataContainer subDataContainer = 1;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          net.studioblueplanet.tomtomwatch.TrackerProto.SubDataContainer, net.studioblueplanet.tomtomwatch.TrackerProto.SubDataContainer.Builder, net.studioblueplanet.tomtomwatch.TrackerProto.SubDataContainerOrBuilder> 
          getSubDataContainerFieldBuilder() {
        if (subDataContainerBuilder_ == null) {
          subDataContainerBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              net.studioblueplanet.tomtomwatch.TrackerProto.SubDataContainer, net.studioblueplanet.tomtomwatch.TrackerProto.SubDataContainer.Builder, net.studioblueplanet.tomtomwatch.TrackerProto.SubDataContainerOrBuilder>(
                  getSubDataContainer(),
                  getParentForChildren(),
                  isClean());
          subDataContainer_ = null;
        }
        return subDataContainerBuilder_;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:tutorial.DataContainer)
    }

    // @@protoc_insertion_point(class_scope:tutorial.DataContainer)
    private static final net.studioblueplanet.tomtomwatch.TrackerProto.DataContainer DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new net.studioblueplanet.tomtomwatch.TrackerProto.DataContainer();
    }

    public static net.studioblueplanet.tomtomwatch.TrackerProto.DataContainer getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    @java.lang.Deprecated public static final com.google.protobuf.Parser<DataContainer>
        PARSER = new com.google.protobuf.AbstractParser<DataContainer>() {
      @java.lang.Override
      public DataContainer parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new DataContainer(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<DataContainer> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<DataContainer> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public net.studioblueplanet.tomtomwatch.TrackerProto.DataContainer getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface SubDataContainerOrBuilder extends
      // @@protoc_insertion_point(interface_extends:tutorial.SubDataContainer)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     * Device info
     * </pre>
     *
     * <code>optional .tutorial.DeviceInfo deviceInfo = 1;</code>
     */
    boolean hasDeviceInfo();
    /**
     * <pre>
     * Device info
     * </pre>
     *
     * <code>optional .tutorial.DeviceInfo deviceInfo = 1;</code>
     */
    net.studioblueplanet.tomtomwatch.TrackerProto.DeviceInfo getDeviceInfo();
    /**
     * <pre>
     * Device info
     * </pre>
     *
     * <code>optional .tutorial.DeviceInfo deviceInfo = 1;</code>
     */
    net.studioblueplanet.tomtomwatch.TrackerProto.DeviceInfoOrBuilder getDeviceInfoOrBuilder();

    /**
     * <pre>
     * activity tracking (calories, steps, hr, sleep, etc)
     * </pre>
     *
     * <code>optional .tutorial.TrackRecord trackRecord = 2;</code>
     */
    boolean hasTrackRecord();
    /**
     * <pre>
     * activity tracking (calories, steps, hr, sleep, etc)
     * </pre>
     *
     * <code>optional .tutorial.TrackRecord trackRecord = 2;</code>
     */
    net.studioblueplanet.tomtomwatch.TrackerProto.TrackRecord getTrackRecord();
    /**
     * <pre>
     * activity tracking (calories, steps, hr, sleep, etc)
     * </pre>
     *
     * <code>optional .tutorial.TrackRecord trackRecord = 2;</code>
     */
    net.studioblueplanet.tomtomwatch.TrackerProto.TrackRecordOrBuilder getTrackRecordOrBuilder();

    /**
     * <pre>
     * ?
     * </pre>
     *
     * <code>optional .tutorial.Record2 record2 = 3;</code>
     */
    boolean hasRecord2();
    /**
     * <pre>
     * ?
     * </pre>
     *
     * <code>optional .tutorial.Record2 record2 = 3;</code>
     */
    net.studioblueplanet.tomtomwatch.TrackerProto.Record2 getRecord2();
    /**
     * <pre>
     * ?
     * </pre>
     *
     * <code>optional .tutorial.Record2 record2 = 3;</code>
     */
    net.studioblueplanet.tomtomwatch.TrackerProto.Record2OrBuilder getRecord2OrBuilder();

    /**
     * <pre>
     * ?
     * </pre>
     *
     * <code>optional .tutorial.Record6 record6 = 5;</code>
     */
    boolean hasRecord6();
    /**
     * <pre>
     * ?
     * </pre>
     *
     * <code>optional .tutorial.Record6 record6 = 5;</code>
     */
    net.studioblueplanet.tomtomwatch.TrackerProto.Record6 getRecord6();
    /**
     * <pre>
     * ?
     * </pre>
     *
     * <code>optional .tutorial.Record6 record6 = 5;</code>
     */
    net.studioblueplanet.tomtomwatch.TrackerProto.Record6OrBuilder getRecord6OrBuilder();

    /**
     * <pre>
     * Heart rate
     * </pre>
     *
     * <code>optional .tutorial.HeartRecord heartRecord = 6;</code>
     */
    boolean hasHeartRecord();
    /**
     * <pre>
     * Heart rate
     * </pre>
     *
     * <code>optional .tutorial.HeartRecord heartRecord = 6;</code>
     */
    net.studioblueplanet.tomtomwatch.TrackerProto.HeartRecord getHeartRecord();
    /**
     * <pre>
     * Heart rate
     * </pre>
     *
     * <code>optional .tutorial.HeartRecord heartRecord = 6;</code>
     */
    net.studioblueplanet.tomtomwatch.TrackerProto.HeartRecordOrBuilder getHeartRecordOrBuilder();

    /**
     * <pre>
     * ?
     * </pre>
     *
     * <code>optional .tutorial.Record4 record4 = 7;</code>
     */
    boolean hasRecord4();
    /**
     * <pre>
     * ?
     * </pre>
     *
     * <code>optional .tutorial.Record4 record4 = 7;</code>
     */
    net.studioblueplanet.tomtomwatch.TrackerProto.Record4 getRecord4();
    /**
     * <pre>
     * ?
     * </pre>
     *
     * <code>optional .tutorial.Record4 record4 = 7;</code>
     */
    net.studioblueplanet.tomtomwatch.TrackerProto.Record4OrBuilder getRecord4OrBuilder();

    /**
     * <pre>
     * TomTom FitnessPoints counters
     * </pre>
     *
     * <code>optional .tutorial.FitnessRecord fitnessRecord = 9;</code>
     */
    boolean hasFitnessRecord();
    /**
     * <pre>
     * TomTom FitnessPoints counters
     * </pre>
     *
     * <code>optional .tutorial.FitnessRecord fitnessRecord = 9;</code>
     */
    net.studioblueplanet.tomtomwatch.TrackerProto.FitnessRecord getFitnessRecord();
    /**
     * <pre>
     * TomTom FitnessPoints counters
     * </pre>
     *
     * <code>optional .tutorial.FitnessRecord fitnessRecord = 9;</code>
     */
    net.studioblueplanet.tomtomwatch.TrackerProto.FitnessRecordOrBuilder getFitnessRecordOrBuilder();
  }
  /**
   * Protobuf type {@code tutorial.SubDataContainer}
   */
  public  static final class SubDataContainer extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:tutorial.SubDataContainer)
      SubDataContainerOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use SubDataContainer.newBuilder() to construct.
    private SubDataContainer(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private SubDataContainer() {
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new SubDataContainer();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private SubDataContainer(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 10: {
              net.studioblueplanet.tomtomwatch.TrackerProto.DeviceInfo.Builder subBuilder = null;
              if (((bitField0_ & 0x00000001) != 0)) {
                subBuilder = deviceInfo_.toBuilder();
              }
              deviceInfo_ = input.readMessage(net.studioblueplanet.tomtomwatch.TrackerProto.DeviceInfo.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(deviceInfo_);
                deviceInfo_ = subBuilder.buildPartial();
              }
              bitField0_ |= 0x00000001;
              break;
            }
            case 18: {
              net.studioblueplanet.tomtomwatch.TrackerProto.TrackRecord.Builder subBuilder = null;
              if (((bitField0_ & 0x00000002) != 0)) {
                subBuilder = trackRecord_.toBuilder();
              }
              trackRecord_ = input.readMessage(net.studioblueplanet.tomtomwatch.TrackerProto.TrackRecord.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(trackRecord_);
                trackRecord_ = subBuilder.buildPartial();
              }
              bitField0_ |= 0x00000002;
              break;
            }
            case 26: {
              net.studioblueplanet.tomtomwatch.TrackerProto.Record2.Builder subBuilder = null;
              if (((bitField0_ & 0x00000004) != 0)) {
                subBuilder = record2_.toBuilder();
              }
              record2_ = input.readMessage(net.studioblueplanet.tomtomwatch.TrackerProto.Record2.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(record2_);
                record2_ = subBuilder.buildPartial();
              }
              bitField0_ |= 0x00000004;
              break;
            }
            case 42: {
              net.studioblueplanet.tomtomwatch.TrackerProto.Record6.Builder subBuilder = null;
              if (((bitField0_ & 0x00000008) != 0)) {
                subBuilder = record6_.toBuilder();
              }
              record6_ = input.readMessage(net.studioblueplanet.tomtomwatch.TrackerProto.Record6.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(record6_);
                record6_ = subBuilder.buildPartial();
              }
              bitField0_ |= 0x00000008;
              break;
            }
            case 50: {
              net.studioblueplanet.tomtomwatch.TrackerProto.HeartRecord.Builder subBuilder = null;
              if (((bitField0_ & 0x00000010) != 0)) {
                subBuilder = heartRecord_.toBuilder();
              }
              heartRecord_ = input.readMessage(net.studioblueplanet.tomtomwatch.TrackerProto.HeartRecord.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(heartRecord_);
                heartRecord_ = subBuilder.buildPartial();
              }
              bitField0_ |= 0x00000010;
              break;
            }
            case 58: {
              net.studioblueplanet.tomtomwatch.TrackerProto.Record4.Builder subBuilder = null;
              if (((bitField0_ & 0x00000020) != 0)) {
                subBuilder = record4_.toBuilder();
              }
              record4_ = input.readMessage(net.studioblueplanet.tomtomwatch.TrackerProto.Record4.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(record4_);
                record4_ = subBuilder.buildPartial();
              }
              bitField0_ |= 0x00000020;
              break;
            }
            case 74: {
              net.studioblueplanet.tomtomwatch.TrackerProto.FitnessRecord.Builder subBuilder = null;
              if (((bitField0_ & 0x00000040) != 0)) {
                subBuilder = fitnessRecord_.toBuilder();
              }
              fitnessRecord_ = input.readMessage(net.studioblueplanet.tomtomwatch.TrackerProto.FitnessRecord.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(fitnessRecord_);
                fitnessRecord_ = subBuilder.buildPartial();
              }
              bitField0_ |= 0x00000040;
              break;
            }
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return net.studioblueplanet.tomtomwatch.TrackerProto.internal_static_tutorial_SubDataContainer_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return net.studioblueplanet.tomtomwatch.TrackerProto.internal_static_tutorial_SubDataContainer_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              net.studioblueplanet.tomtomwatch.TrackerProto.SubDataContainer.class, net.studioblueplanet.tomtomwatch.TrackerProto.SubDataContainer.Builder.class);
    }

    private int bitField0_;
    public static final int DEVICEINFO_FIELD_NUMBER = 1;
    private net.studioblueplanet.tomtomwatch.TrackerProto.DeviceInfo deviceInfo_;
    /**
     * <pre>
     * Device info
     * </pre>
     *
     * <code>optional .tutorial.DeviceInfo deviceInfo = 1;</code>
     */
    public boolean hasDeviceInfo() {
      return ((bitField0_ & 0x00000001) != 0);
    }
    /**
     * <pre>
     * Device info
     * </pre>
     *
     * <code>optional .tutorial.DeviceInfo deviceInfo = 1;</code>
     */
    public net.studioblueplanet.tomtomwatch.TrackerProto.DeviceInfo getDeviceInfo() {
      return deviceInfo_ == null ? net.studioblueplanet.tomtomwatch.TrackerProto.DeviceInfo.getDefaultInstance() : deviceInfo_;
    }
    /**
     * <pre>
     * Device info
     * </pre>
     *
     * <code>optional .tutorial.DeviceInfo deviceInfo = 1;</code>
     */
    public net.studioblueplanet.tomtomwatch.TrackerProto.DeviceInfoOrBuilder getDeviceInfoOrBuilder() {
      return deviceInfo_ == null ? net.studioblueplanet.tomtomwatch.TrackerProto.DeviceInfo.getDefaultInstance() : deviceInfo_;
    }

    public static final int TRACKRECORD_FIELD_NUMBER = 2;
    private net.studioblueplanet.tomtomwatch.TrackerProto.TrackRecord trackRecord_;
    /**
     * <pre>
     * activity tracking (calories, steps, hr, sleep, etc)
     * </pre>
     *
     * <code>optional .tutorial.TrackRecord trackRecord = 2;</code>
     */
    public boolean hasTrackRecord() {
      return ((bitField0_ & 0x00000002) != 0);
    }
    /**
     * <pre>
     * activity tracking (calories, steps, hr, sleep, etc)
     * </pre>
     *
     * <code>optional .tutorial.TrackRecord trackRecord = 2;</code>
     */
    public net.studioblueplanet.tomtomwatch.TrackerProto.TrackRecord getTrackRecord() {
      return trackRecord_ == null ? net.studioblueplanet.tomtomwatch.TrackerProto.TrackRecord.getDefaultInstance() : trackRecord_;
    }
    /**
     * <pre>
     * activity tracking (calories, steps, hr, sleep, etc)
     * </pre>
     *
     * <code>optional .tutorial.TrackRecord trackRecord = 2;</code>
     */
    public net.studioblueplanet.tomtomwatch.TrackerProto.TrackRecordOrBuilder getTrackRecordOrBuilder() {
      return trackRecord_ == null ? net.studioblueplanet.tomtomwatch.TrackerProto.TrackRecord.getDefaultInstance() : trackRecord_;
    }

    public static final int RECORD2_FIELD_NUMBER = 3;
    private net.studioblueplanet.tomtomwatch.TrackerProto.Record2 record2_;
    /**
     * <pre>
     * ?
     * </pre>
     *
     * <code>optional .tutorial.Record2 record2 = 3;</code>
     */
    public boolean hasRecord2() {
      return ((bitField0_ & 0x00000004) != 0);
    }
    /**
     * <pre>
     * ?
     * </pre>
     *
     * <code>optional .tutorial.Record2 record2 = 3;</code>
     */
    public net.studioblueplanet.tomtomwatch.TrackerProto.Record2 getRecord2() {
      return record2_ == null ? net.studioblueplanet.tomtomwatch.TrackerProto.Record2.getDefaultInstance() : record2_;
    }
    /**
     * <pre>
     * ?
     * </pre>
     *
     * <code>optional .tutorial.Record2 record2 = 3;</code>
     */
    public net.studioblueplanet.tomtomwatch.TrackerProto.Record2OrBuilder getRecord2OrBuilder() {
      return record2_ == null ? net.studioblueplanet.tomtomwatch.TrackerProto.Record2.getDefaultInstance() : record2_;
    }

    public static final int RECORD6_FIELD_NUMBER = 5;
    private net.studioblueplanet.tomtomwatch.TrackerProto.Record6 record6_;
    /**
     * <pre>
     * ?
     * </pre>
     *
     * <code>optional .tutorial.Record6 record6 = 5;</code>
     */
    public boolean hasRecord6() {
      return ((bitField0_ & 0x00000008) != 0);
    }
    /**
     * <pre>
     * ?
     * </pre>
     *
     * <code>optional .tutorial.Record6 record6 = 5;</code>
     */
    public net.studioblueplanet.tomtomwatch.TrackerProto.Record6 getRecord6() {
      return record6_ == null ? net.studioblueplanet.tomtomwatch.TrackerProto.Record6.getDefaultInstance() : record6_;
    }
    /**
     * <pre>
     * ?
     * </pre>
     *
     * <code>optional .tutorial.Record6 record6 = 5;</code>
     */
    public net.studioblueplanet.tomtomwatch.TrackerProto.Record6OrBuilder getRecord6OrBuilder() {
      return record6_ == null ? net.studioblueplanet.tomtomwatch.TrackerProto.Record6.getDefaultInstance() : record6_;
    }

    public static final int HEARTRECORD_FIELD_NUMBER = 6;
    private net.studioblueplanet.tomtomwatch.TrackerProto.HeartRecord heartRecord_;
    /**
     * <pre>
     * Heart rate
     * </pre>
     *
     * <code>optional .tutorial.HeartRecord heartRecord = 6;</code>
     */
    public boolean hasHeartRecord() {
      return ((bitField0_ & 0x00000010) != 0);
    }
    /**
     * <pre>
     * Heart rate
     * </pre>
     *
     * <code>optional .tutorial.HeartRecord heartRecord = 6;</code>
     */
    public net.studioblueplanet.tomtomwatch.TrackerProto.HeartRecord getHeartRecord() {
      return heartRecord_ == null ? net.studioblueplanet.tomtomwatch.TrackerProto.HeartRecord.getDefaultInstance() : heartRecord_;
    }
    /**
     * <pre>
     * Heart rate
     * </pre>
     *
     * <code>optional .tutorial.HeartRecord heartRecord = 6;</code>
     */
    public net.studioblueplanet.tomtomwatch.TrackerProto.HeartRecordOrBuilder getHeartRecordOrBuilder() {
      return heartRecord_ == null ? net.studioblueplanet.tomtomwatch.TrackerProto.HeartRecord.getDefaultInstance() : heartRecord_;
    }

    public static final int RECORD4_FIELD_NUMBER = 7;
    private net.studioblueplanet.tomtomwatch.TrackerProto.Record4 record4_;
    /**
     * <pre>
     * ?
     * </pre>
     *
     * <code>optional .tutorial.Record4 record4 = 7;</code>
     */
    public boolean hasRecord4() {
      return ((bitField0_ & 0x00000020) != 0);
    }
    /**
     * <pre>
     * ?
     * </pre>
     *
     * <code>optional .tutorial.Record4 record4 = 7;</code>
     */
    public net.studioblueplanet.tomtomwatch.TrackerProto.Record4 getRecord4() {
      return record4_ == null ? net.studioblueplanet.tomtomwatch.TrackerProto.Record4.getDefaultInstance() : record4_;
    }
    /**
     * <pre>
     * ?
     * </pre>
     *
     * <code>optional .tutorial.Record4 record4 = 7;</code>
     */
    public net.studioblueplanet.tomtomwatch.TrackerProto.Record4OrBuilder getRecord4OrBuilder() {
      return record4_ == null ? net.studioblueplanet.tomtomwatch.TrackerProto.Record4.getDefaultInstance() : record4_;
    }

    public static final int FITNESSRECORD_FIELD_NUMBER = 9;
    private net.studioblueplanet.tomtomwatch.TrackerProto.FitnessRecord fitnessRecord_;
    /**
     * <pre>
     * TomTom FitnessPoints counters
     * </pre>
     *
     * <code>optional .tutorial.FitnessRecord fitnessRecord = 9;</code>
     */
    public boolean hasFitnessRecord() {
      return ((bitField0_ & 0x00000040) != 0);
    }
    /**
     * <pre>
     * TomTom FitnessPoints counters
     * </pre>
     *
     * <code>optional .tutorial.FitnessRecord fitnessRecord = 9;</code>
     */
    public net.studioblueplanet.tomtomwatch.TrackerProto.FitnessRecord getFitnessRecord() {
      return fitnessRecord_ == null ? net.studioblueplanet.tomtomwatch.TrackerProto.FitnessRecord.getDefaultInstance() : fitnessRecord_;
    }
    /**
     * <pre>
     * TomTom FitnessPoints counters
     * </pre>
     *
     * <code>optional .tutorial.FitnessRecord fitnessRecord = 9;</code>
     */
    public net.studioblueplanet.tomtomwatch.TrackerProto.FitnessRecordOrBuilder getFitnessRecordOrBuilder() {
      return fitnessRecord_ == null ? net.studioblueplanet.tomtomwatch.TrackerProto.FitnessRecord.getDefaultInstance() : fitnessRecord_;
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      if (hasDeviceInfo()) {
        if (!getDeviceInfo().isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      if (hasTrackRecord()) {
        if (!getTrackRecord().isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      if (hasRecord2()) {
        if (!getRecord2().isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      if (hasRecord6()) {
        if (!getRecord6().isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      if (hasHeartRecord()) {
        if (!getHeartRecord().isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      if (hasRecord4()) {
        if (!getRecord4().isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      if (hasFitnessRecord()) {
        if (!getFitnessRecord().isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (((bitField0_ & 0x00000001) != 0)) {
        output.writeMessage(1, getDeviceInfo());
      }
      if (((bitField0_ & 0x00000002) != 0)) {
        output.writeMessage(2, getTrackRecord());
      }
      if (((bitField0_ & 0x00000004) != 0)) {
        output.writeMessage(3, getRecord2());
      }
      if (((bitField0_ & 0x00000008) != 0)) {
        output.writeMessage(5, getRecord6());
      }
      if (((bitField0_ & 0x00000010) != 0)) {
        output.writeMessage(6, getHeartRecord());
      }
      if (((bitField0_ & 0x00000020) != 0)) {
        output.writeMessage(7, getRecord4());
      }
      if (((bitField0_ & 0x00000040) != 0)) {
        output.writeMessage(9, getFitnessRecord());
      }
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, getDeviceInfo());
      }
      if (((bitField0_ & 0x00000002) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(2, getTrackRecord());
      }
      if (((bitField0_ & 0x00000004) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(3, getRecord2());
      }
      if (((bitField0_ & 0x00000008) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(5, getRecord6());
      }
      if (((bitField0_ & 0x00000010) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(6, getHeartRecord());
      }
      if (((bitField0_ & 0x00000020) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(7, getRecord4());
      }
      if (((bitField0_ & 0x00000040) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(9, getFitnessRecord());
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof net.studioblueplanet.tomtomwatch.TrackerProto.SubDataContainer)) {
        return super.equals(obj);
      }
      net.studioblueplanet.tomtomwatch.TrackerProto.SubDataContainer other = (net.studioblueplanet.tomtomwatch.TrackerProto.SubDataContainer) obj;

      if (hasDeviceInfo() != other.hasDeviceInfo()) return false;
      if (hasDeviceInfo()) {
        if (!getDeviceInfo()
            .equals(other.getDeviceInfo())) return false;
      }
      if (hasTrackRecord() != other.hasTrackRecord()) return false;
      if (hasTrackRecord()) {
        if (!getTrackRecord()
            .equals(other.getTrackRecord())) return false;
      }
      if (hasRecord2() != other.hasRecord2()) return false;
      if (hasRecord2()) {
        if (!getRecord2()
            .equals(other.getRecord2())) return false;
      }
      if (hasRecord6() != other.hasRecord6()) return false;
      if (hasRecord6()) {
        if (!getRecord6()
            .equals(other.getRecord6())) return false;
      }
      if (hasHeartRecord() != other.hasHeartRecord()) return false;
      if (hasHeartRecord()) {
        if (!getHeartRecord()
            .equals(other.getHeartRecord())) return false;
      }
      if (hasRecord4() != other.hasRecord4()) return false;
      if (hasRecord4()) {
        if (!getRecord4()
            .equals(other.getRecord4())) return false;
      }
      if (hasFitnessRecord() != other.hasFitnessRecord()) return false;
      if (hasFitnessRecord()) {
        if (!getFitnessRecord()
            .equals(other.getFitnessRecord())) return false;
      }
      if (!unknownFields.equals(other.unknownFields)) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (hasDeviceInfo()) {
        hash = (37 * hash) + DEVICEINFO_FIELD_NUMBER;
        hash = (53 * hash) + getDeviceInfo().hashCode();
      }
      if (hasTrackRecord()) {
        hash = (37 * hash) + TRACKRECORD_FIELD_NUMBER;
        hash = (53 * hash) + getTrackRecord().hashCode();
      }
      if (hasRecord2()) {
        hash = (37 * hash) + RECORD2_FIELD_NUMBER;
        hash = (53 * hash) + getRecord2().hashCode();
      }
      if (hasRecord6()) {
        hash = (37 * hash) + RECORD6_FIELD_NUMBER;
        hash = (53 * hash) + getRecord6().hashCode();
      }
      if (hasHeartRecord()) {
        hash = (37 * hash) + HEARTRECORD_FIELD_NUMBER;
        hash = (53 * hash) + getHeartRecord().hashCode();
      }
      if (hasRecord4()) {
        hash = (37 * hash) + RECORD4_FIELD_NUMBER;
        hash = (53 * hash) + getRecord4().hashCode();
      }
      if (hasFitnessRecord()) {
        hash = (37 * hash) + FITNESSRECORD_FIELD_NUMBER;
        hash = (53 * hash) + getFitnessRecord().hashCode();
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static net.studioblueplanet.tomtomwatch.TrackerProto.SubDataContainer parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static net.studioblueplanet.tomtomwatch.TrackerProto.SubDataContainer parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static net.studioblueplanet.tomtomwatch.TrackerProto.SubDataContainer parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static net.studioblueplanet.tomtomwatch.TrackerProto.SubDataContainer parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static net.studioblueplanet.tomtomwatch.TrackerProto.SubDataContainer parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static net.studioblueplanet.tomtomwatch.TrackerProto.SubDataContainer parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static net.studioblueplanet.tomtomwatch.TrackerProto.SubDataContainer parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static net.studioblueplanet.tomtomwatch.TrackerProto.SubDataContainer parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static net.studioblueplanet.tomtomwatch.TrackerProto.SubDataContainer parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static net.studioblueplanet.tomtomwatch.TrackerProto.SubDataContainer parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static net.studioblueplanet.tomtomwatch.TrackerProto.SubDataContainer parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static net.studioblueplanet.tomtomwatch.TrackerProto.SubDataContainer parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(net.studioblueplanet.tomtomwatch.TrackerProto.SubDataContainer prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code tutorial.SubDataContainer}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:tutorial.SubDataContainer)
        net.studioblueplanet.tomtomwatch.TrackerProto.SubDataContainerOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return net.studioblueplanet.tomtomwatch.TrackerProto.internal_static_tutorial_SubDataContainer_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return net.studioblueplanet.tomtomwatch.TrackerProto.internal_static_tutorial_SubDataContainer_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                net.studioblueplanet.tomtomwatch.TrackerProto.SubDataContainer.class, net.studioblueplanet.tomtomwatch.TrackerProto.SubDataContainer.Builder.class);
      }

      // Construct using net.studioblueplanet.tomtomwatch.TrackerProto.SubDataContainer.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
          getDeviceInfoFieldBuilder();
          getTrackRecordFieldBuilder();
          getRecord2FieldBuilder();
          getRecord6FieldBuilder();
          getHeartRecordFieldBuilder();
          getRecord4FieldBuilder();
          getFitnessRecordFieldBuilder();
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        if (deviceInfoBuilder_ == null) {
          deviceInfo_ = null;
        } else {
          deviceInfoBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000001);
        if (trackRecordBuilder_ == null) {
          trackRecord_ = null;
        } else {
          trackRecordBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000002);
        if (record2Builder_ == null) {
          record2_ = null;
        } else {
          record2Builder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000004);
        if (record6Builder_ == null) {
          record6_ = null;
        } else {
          record6Builder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000008);
        if (heartRecordBuilder_ == null) {
          heartRecord_ = null;
        } else {
          heartRecordBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000010);
        if (record4Builder_ == null) {
          record4_ = null;
        } else {
          record4Builder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000020);
        if (fitnessRecordBuilder_ == null) {
          fitnessRecord_ = null;
        } else {
          fitnessRecordBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000040);
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return net.studioblueplanet.tomtomwatch.TrackerProto.internal_static_tutorial_SubDataContainer_descriptor;
      }

      @java.lang.Override
      public net.studioblueplanet.tomtomwatch.TrackerProto.SubDataContainer getDefaultInstanceForType() {
        return net.studioblueplanet.tomtomwatch.TrackerProto.SubDataContainer.getDefaultInstance();
      }

      @java.lang.Override
      public net.studioblueplanet.tomtomwatch.TrackerProto.SubDataContainer build() {
        net.studioblueplanet.tomtomwatch.TrackerProto.SubDataContainer result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public net.studioblueplanet.tomtomwatch.TrackerProto.SubDataContainer buildPartial() {
        net.studioblueplanet.tomtomwatch.TrackerProto.SubDataContainer result = new net.studioblueplanet.tomtomwatch.TrackerProto.SubDataContainer(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) != 0)) {
          if (deviceInfoBuilder_ == null) {
            result.deviceInfo_ = deviceInfo_;
          } else {
            result.deviceInfo_ = deviceInfoBuilder_.build();
          }
          to_bitField0_ |= 0x00000001;
        }
        if (((from_bitField0_ & 0x00000002) != 0)) {
          if (trackRecordBuilder_ == null) {
            result.trackRecord_ = trackRecord_;
          } else {
            result.trackRecord_ = trackRecordBuilder_.build();
          }
          to_bitField0_ |= 0x00000002;
        }
        if (((from_bitField0_ & 0x00000004) != 0)) {
          if (record2Builder_ == null) {
            result.record2_ = record2_;
          } else {
            result.record2_ = record2Builder_.build();
          }
          to_bitField0_ |= 0x00000004;
        }
        if (((from_bitField0_ & 0x00000008) != 0)) {
          if (record6Builder_ == null) {
            result.record6_ = record6_;
          } else {
            result.record6_ = record6Builder_.build();
          }
          to_bitField0_ |= 0x00000008;
        }
        if (((from_bitField0_ & 0x00000010) != 0)) {
          if (heartRecordBuilder_ == null) {
            result.heartRecord_ = heartRecord_;
          } else {
            result.heartRecord_ = heartRecordBuilder_.build();
          }
          to_bitField0_ |= 0x00000010;
        }
        if (((from_bitField0_ & 0x00000020) != 0)) {
          if (record4Builder_ == null) {
            result.record4_ = record4_;
          } else {
            result.record4_ = record4Builder_.build();
          }
          to_bitField0_ |= 0x00000020;
        }
        if (((from_bitField0_ & 0x00000040) != 0)) {
          if (fitnessRecordBuilder_ == null) {
            result.fitnessRecord_ = fitnessRecord_;
          } else {
            result.fitnessRecord_ = fitnessRecordBuilder_.build();
          }
          to_bitField0_ |= 0x00000040;
        }
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof net.studioblueplanet.tomtomwatch.TrackerProto.SubDataContainer) {
          return mergeFrom((net.studioblueplanet.tomtomwatch.TrackerProto.SubDataContainer)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(net.studioblueplanet.tomtomwatch.TrackerProto.SubDataContainer other) {
        if (other == net.studioblueplanet.tomtomwatch.TrackerProto.SubDataContainer.getDefaultInstance()) return this;
        if (other.hasDeviceInfo()) {
          mergeDeviceInfo(other.getDeviceInfo());
        }
        if (other.hasTrackRecord()) {
          mergeTrackRecord(other.getTrackRecord());
        }
        if (other.hasRecord2()) {
          mergeRecord2(other.getRecord2());
        }
        if (other.hasRecord6()) {
          mergeRecord6(other.getRecord6());
        }
        if (other.hasHeartRecord()) {
          mergeHeartRecord(other.getHeartRecord());
        }
        if (other.hasRecord4()) {
          mergeRecord4(other.getRecord4());
        }
        if (other.hasFitnessRecord()) {
          mergeFitnessRecord(other.getFitnessRecord());
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        if (hasDeviceInfo()) {
          if (!getDeviceInfo().isInitialized()) {
            return false;
          }
        }
        if (hasTrackRecord()) {
          if (!getTrackRecord().isInitialized()) {
            return false;
          }
        }
        if (hasRecord2()) {
          if (!getRecord2().isInitialized()) {
            return false;
          }
        }
        if (hasRecord6()) {
          if (!getRecord6().isInitialized()) {
            return false;
          }
        }
        if (hasHeartRecord()) {
          if (!getHeartRecord().isInitialized()) {
            return false;
          }
        }
        if (hasRecord4()) {
          if (!getRecord4().isInitialized()) {
            return false;
          }
        }
        if (hasFitnessRecord()) {
          if (!getFitnessRecord().isInitialized()) {
            return false;
          }
        }
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        net.studioblueplanet.tomtomwatch.TrackerProto.SubDataContainer parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (net.studioblueplanet.tomtomwatch.TrackerProto.SubDataContainer) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private net.studioblueplanet.tomtomwatch.TrackerProto.DeviceInfo deviceInfo_;
      private com.google.protobuf.SingleFieldBuilderV3<
          net.studioblueplanet.tomtomwatch.TrackerProto.DeviceInfo, net.studioblueplanet.tomtomwatch.TrackerProto.DeviceInfo.Builder, net.studioblueplanet.tomtomwatch.TrackerProto.DeviceInfoOrBuilder> deviceInfoBuilder_;
      /**
       * <pre>
       * Device info
       * </pre>
       *
       * <code>optional .tutorial.DeviceInfo deviceInfo = 1;</code>
       */
      public boolean hasDeviceInfo() {
        return ((bitField0_ & 0x00000001) != 0);
      }
      /**
       * <pre>
       * Device info
       * </pre>
       *
       * <code>optional .tutorial.DeviceInfo deviceInfo = 1;</code>
       */
      public net.studioblueplanet.tomtomwatch.TrackerProto.DeviceInfo getDeviceInfo() {
        if (deviceInfoBuilder_ == null) {
          return deviceInfo_ == null ? net.studioblueplanet.tomtomwatch.TrackerProto.DeviceInfo.getDefaultInstance() : deviceInfo_;
        } else {
          return deviceInfoBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       * Device info
       * </pre>
       *
       * <code>optional .tutorial.DeviceInfo deviceInfo = 1;</code>
       */
      public Builder setDeviceInfo(net.studioblueplanet.tomtomwatch.TrackerProto.DeviceInfo value) {
        if (deviceInfoBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          deviceInfo_ = value;
          onChanged();
        } else {
          deviceInfoBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000001;
        return this;
      }
      /**
       * <pre>
       * Device info
       * </pre>
       *
       * <code>optional .tutorial.DeviceInfo deviceInfo = 1;</code>
       */
      public Builder setDeviceInfo(
          net.studioblueplanet.tomtomwatch.TrackerProto.DeviceInfo.Builder builderForValue) {
        if (deviceInfoBuilder_ == null) {
          deviceInfo_ = builderForValue.build();
          onChanged();
        } else {
          deviceInfoBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000001;
        return this;
      }
      /**
       * <pre>
       * Device info
       * </pre>
       *
       * <code>optional .tutorial.DeviceInfo deviceInfo = 1;</code>
       */
      public Builder mergeDeviceInfo(net.studioblueplanet.tomtomwatch.TrackerProto.DeviceInfo value) {
        if (deviceInfoBuilder_ == null) {
          if (((bitField0_ & 0x00000001) != 0) &&
              deviceInfo_ != null &&
              deviceInfo_ != net.studioblueplanet.tomtomwatch.TrackerProto.DeviceInfo.getDefaultInstance()) {
            deviceInfo_ =
              net.studioblueplanet.tomtomwatch.TrackerProto.DeviceInfo.newBuilder(deviceInfo_).mergeFrom(value).buildPartial();
          } else {
            deviceInfo_ = value;
          }
          onChanged();
        } else {
          deviceInfoBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000001;
        return this;
      }
      /**
       * <pre>
       * Device info
       * </pre>
       *
       * <code>optional .tutorial.DeviceInfo deviceInfo = 1;</code>
       */
      public Builder clearDeviceInfo() {
        if (deviceInfoBuilder_ == null) {
          deviceInfo_ = null;
          onChanged();
        } else {
          deviceInfoBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000001);
        return this;
      }
      /**
       * <pre>
       * Device info
       * </pre>
       *
       * <code>optional .tutorial.DeviceInfo deviceInfo = 1;</code>
       */
      public net.studioblueplanet.tomtomwatch.TrackerProto.DeviceInfo.Builder getDeviceInfoBuilder() {
        bitField0_ |= 0x00000001;
        onChanged();
        return getDeviceInfoFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       * Device info
       * </pre>
       *
       * <code>optional .tutorial.DeviceInfo deviceInfo = 1;</code>
       */
      public net.studioblueplanet.tomtomwatch.TrackerProto.DeviceInfoOrBuilder getDeviceInfoOrBuilder() {
        if (deviceInfoBuilder_ != null) {
          return deviceInfoBuilder_.getMessageOrBuilder();
        } else {
          return deviceInfo_ == null ?
              net.studioblueplanet.tomtomwatch.TrackerProto.DeviceInfo.getDefaultInstance() : deviceInfo_;
        }
      }
      /**
       * <pre>
       * Device info
       * </pre>
       *
       * <code>optional .tutorial.DeviceInfo deviceInfo = 1;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          net.studioblueplanet.tomtomwatch.TrackerProto.DeviceInfo, net.studioblueplanet.tomtomwatch.TrackerProto.DeviceInfo.Builder, net.studioblueplanet.tomtomwatch.TrackerProto.DeviceInfoOrBuilder> 
          getDeviceInfoFieldBuilder() {
        if (deviceInfoBuilder_ == null) {
          deviceInfoBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              net.studioblueplanet.tomtomwatch.TrackerProto.DeviceInfo, net.studioblueplanet.tomtomwatch.TrackerProto.DeviceInfo.Builder, net.studioblueplanet.tomtomwatch.TrackerProto.DeviceInfoOrBuilder>(
                  getDeviceInfo(),
                  getParentForChildren(),
                  isClean());
          deviceInfo_ = null;
        }
        return deviceInfoBuilder_;
      }

      private net.studioblueplanet.tomtomwatch.TrackerProto.TrackRecord trackRecord_;
      private com.google.protobuf.SingleFieldBuilderV3<
          net.studioblueplanet.tomtomwatch.TrackerProto.TrackRecord, net.studioblueplanet.tomtomwatch.TrackerProto.TrackRecord.Builder, net.studioblueplanet.tomtomwatch.TrackerProto.TrackRecordOrBuilder> trackRecordBuilder_;
      /**
       * <pre>
       * activity tracking (calories, steps, hr, sleep, etc)
       * </pre>
       *
       * <code>optional .tutorial.TrackRecord trackRecord = 2;</code>
       */
      public boolean hasTrackRecord() {
        return ((bitField0_ & 0x00000002) != 0);
      }
      /**
       * <pre>
       * activity tracking (calories, steps, hr, sleep, etc)
       * </pre>
       *
       * <code>optional .tutorial.TrackRecord trackRecord = 2;</code>
       */
      public net.studioblueplanet.tomtomwatch.TrackerProto.TrackRecord getTrackRecord() {
        if (trackRecordBuilder_ == null) {
          return trackRecord_ == null ? net.studioblueplanet.tomtomwatch.TrackerProto.TrackRecord.getDefaultInstance() : trackRecord_;
        } else {
          return trackRecordBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       * activity tracking (calories, steps, hr, sleep, etc)
       * </pre>
       *
       * <code>optional .tutorial.TrackRecord trackRecord = 2;</code>
       */
      public Builder setTrackRecord(net.studioblueplanet.tomtomwatch.TrackerProto.TrackRecord value) {
        if (trackRecordBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          trackRecord_ = value;
          onChanged();
        } else {
          trackRecordBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000002;
        return this;
      }
      /**
       * <pre>
       * activity tracking (calories, steps, hr, sleep, etc)
       * </pre>
       *
       * <code>optional .tutorial.TrackRecord trackRecord = 2;</code>
       */
      public Builder setTrackRecord(
          net.studioblueplanet.tomtomwatch.TrackerProto.TrackRecord.Builder builderForValue) {
        if (trackRecordBuilder_ == null) {
          trackRecord_ = builderForValue.build();
          onChanged();
        } else {
          trackRecordBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000002;
        return this;
      }
      /**
       * <pre>
       * activity tracking (calories, steps, hr, sleep, etc)
       * </pre>
       *
       * <code>optional .tutorial.TrackRecord trackRecord = 2;</code>
       */
      public Builder mergeTrackRecord(net.studioblueplanet.tomtomwatch.TrackerProto.TrackRecord value) {
        if (trackRecordBuilder_ == null) {
          if (((bitField0_ & 0x00000002) != 0) &&
              trackRecord_ != null &&
              trackRecord_ != net.studioblueplanet.tomtomwatch.TrackerProto.TrackRecord.getDefaultInstance()) {
            trackRecord_ =
              net.studioblueplanet.tomtomwatch.TrackerProto.TrackRecord.newBuilder(trackRecord_).mergeFrom(value).buildPartial();
          } else {
            trackRecord_ = value;
          }
          onChanged();
        } else {
          trackRecordBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000002;
        return this;
      }
      /**
       * <pre>
       * activity tracking (calories, steps, hr, sleep, etc)
       * </pre>
       *
       * <code>optional .tutorial.TrackRecord trackRecord = 2;</code>
       */
      public Builder clearTrackRecord() {
        if (trackRecordBuilder_ == null) {
          trackRecord_ = null;
          onChanged();
        } else {
          trackRecordBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000002);
        return this;
      }
      /**
       * <pre>
       * activity tracking (calories, steps, hr, sleep, etc)
       * </pre>
       *
       * <code>optional .tutorial.TrackRecord trackRecord = 2;</code>
       */
      public net.studioblueplanet.tomtomwatch.TrackerProto.TrackRecord.Builder getTrackRecordBuilder() {
        bitField0_ |= 0x00000002;
        onChanged();
        return getTrackRecordFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       * activity tracking (calories, steps, hr, sleep, etc)
       * </pre>
       *
       * <code>optional .tutorial.TrackRecord trackRecord = 2;</code>
       */
      public net.studioblueplanet.tomtomwatch.TrackerProto.TrackRecordOrBuilder getTrackRecordOrBuilder() {
        if (trackRecordBuilder_ != null) {
          return trackRecordBuilder_.getMessageOrBuilder();
        } else {
          return trackRecord_ == null ?
              net.studioblueplanet.tomtomwatch.TrackerProto.TrackRecord.getDefaultInstance() : trackRecord_;
        }
      }
      /**
       * <pre>
       * activity tracking (calories, steps, hr, sleep, etc)
       * </pre>
       *
       * <code>optional .tutorial.TrackRecord trackRecord = 2;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          net.studioblueplanet.tomtomwatch.TrackerProto.TrackRecord, net.studioblueplanet.tomtomwatch.TrackerProto.TrackRecord.Builder, net.studioblueplanet.tomtomwatch.TrackerProto.TrackRecordOrBuilder> 
          getTrackRecordFieldBuilder() {
        if (trackRecordBuilder_ == null) {
          trackRecordBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              net.studioblueplanet.tomtomwatch.TrackerProto.TrackRecord, net.studioblueplanet.tomtomwatch.TrackerProto.TrackRecord.Builder, net.studioblueplanet.tomtomwatch.TrackerProto.TrackRecordOrBuilder>(
                  getTrackRecord(),
                  getParentForChildren(),
                  isClean());
          trackRecord_ = null;
        }
        return trackRecordBuilder_;
      }

      private net.studioblueplanet.tomtomwatch.TrackerProto.Record2 record2_;
      private com.google.protobuf.SingleFieldBuilderV3<
          net.studioblueplanet.tomtomwatch.TrackerProto.Record2, net.studioblueplanet.tomtomwatch.TrackerProto.Record2.Builder, net.studioblueplanet.tomtomwatch.TrackerProto.Record2OrBuilder> record2Builder_;
      /**
       * <pre>
       * ?
       * </pre>
       *
       * <code>optional .tutorial.Record2 record2 = 3;</code>
       */
      public boolean hasRecord2() {
        return ((bitField0_ & 0x00000004) != 0);
      }
      /**
       * <pre>
       * ?
       * </pre>
       *
       * <code>optional .tutorial.Record2 record2 = 3;</code>
       */
      public net.studioblueplanet.tomtomwatch.TrackerProto.Record2 getRecord2() {
        if (record2Builder_ == null) {
          return record2_ == null ? net.studioblueplanet.tomtomwatch.TrackerProto.Record2.getDefaultInstance() : record2_;
        } else {
          return record2Builder_.getMessage();
        }
      }
      /**
       * <pre>
       * ?
       * </pre>
       *
       * <code>optional .tutorial.Record2 record2 = 3;</code>
       */
      public Builder setRecord2(net.studioblueplanet.tomtomwatch.TrackerProto.Record2 value) {
        if (record2Builder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          record2_ = value;
          onChanged();
        } else {
          record2Builder_.setMessage(value);
        }
        bitField0_ |= 0x00000004;
        return this;
      }
      /**
       * <pre>
       * ?
       * </pre>
       *
       * <code>optional .tutorial.Record2 record2 = 3;</code>
       */
      public Builder setRecord2(
          net.studioblueplanet.tomtomwatch.TrackerProto.Record2.Builder builderForValue) {
        if (record2Builder_ == null) {
          record2_ = builderForValue.build();
          onChanged();
        } else {
          record2Builder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000004;
        return this;
      }
      /**
       * <pre>
       * ?
       * </pre>
       *
       * <code>optional .tutorial.Record2 record2 = 3;</code>
       */
      public Builder mergeRecord2(net.studioblueplanet.tomtomwatch.TrackerProto.Record2 value) {
        if (record2Builder_ == null) {
          if (((bitField0_ & 0x00000004) != 0) &&
              record2_ != null &&
              record2_ != net.studioblueplanet.tomtomwatch.TrackerProto.Record2.getDefaultInstance()) {
            record2_ =
              net.studioblueplanet.tomtomwatch.TrackerProto.Record2.newBuilder(record2_).mergeFrom(value).buildPartial();
          } else {
            record2_ = value;
          }
          onChanged();
        } else {
          record2Builder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000004;
        return this;
      }
      /**
       * <pre>
       * ?
       * </pre>
       *
       * <code>optional .tutorial.Record2 record2 = 3;</code>
       */
      public Builder clearRecord2() {
        if (record2Builder_ == null) {
          record2_ = null;
          onChanged();
        } else {
          record2Builder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000004);
        return this;
      }
      /**
       * <pre>
       * ?
       * </pre>
       *
       * <code>optional .tutorial.Record2 record2 = 3;</code>
       */
      public net.studioblueplanet.tomtomwatch.TrackerProto.Record2.Builder getRecord2Builder() {
        bitField0_ |= 0x00000004;
        onChanged();
        return getRecord2FieldBuilder().getBuilder();
      }
      /**
       * <pre>
       * ?
       * </pre>
       *
       * <code>optional .tutorial.Record2 record2 = 3;</code>
       */
      public net.studioblueplanet.tomtomwatch.TrackerProto.Record2OrBuilder getRecord2OrBuilder() {
        if (record2Builder_ != null) {
          return record2Builder_.getMessageOrBuilder();
        } else {
          return record2_ == null ?
              net.studioblueplanet.tomtomwatch.TrackerProto.Record2.getDefaultInstance() : record2_;
        }
      }
      /**
       * <pre>
       * ?
       * </pre>
       *
       * <code>optional .tutorial.Record2 record2 = 3;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          net.studioblueplanet.tomtomwatch.TrackerProto.Record2, net.studioblueplanet.tomtomwatch.TrackerProto.Record2.Builder, net.studioblueplanet.tomtomwatch.TrackerProto.Record2OrBuilder> 
          getRecord2FieldBuilder() {
        if (record2Builder_ == null) {
          record2Builder_ = new com.google.protobuf.SingleFieldBuilderV3<
              net.studioblueplanet.tomtomwatch.TrackerProto.Record2, net.studioblueplanet.tomtomwatch.TrackerProto.Record2.Builder, net.studioblueplanet.tomtomwatch.TrackerProto.Record2OrBuilder>(
                  getRecord2(),
                  getParentForChildren(),
                  isClean());
          record2_ = null;
        }
        return record2Builder_;
      }

      private net.studioblueplanet.tomtomwatch.TrackerProto.Record6 record6_;
      private com.google.protobuf.SingleFieldBuilderV3<
          net.studioblueplanet.tomtomwatch.TrackerProto.Record6, net.studioblueplanet.tomtomwatch.TrackerProto.Record6.Builder, net.studioblueplanet.tomtomwatch.TrackerProto.Record6OrBuilder> record6Builder_;
      /**
       * <pre>
       * ?
       * </pre>
       *
       * <code>optional .tutorial.Record6 record6 = 5;</code>
       */
      public boolean hasRecord6() {
        return ((bitField0_ & 0x00000008) != 0);
      }
      /**
       * <pre>
       * ?
       * </pre>
       *
       * <code>optional .tutorial.Record6 record6 = 5;</code>
       */
      public net.studioblueplanet.tomtomwatch.TrackerProto.Record6 getRecord6() {
        if (record6Builder_ == null) {
          return record6_ == null ? net.studioblueplanet.tomtomwatch.TrackerProto.Record6.getDefaultInstance() : record6_;
        } else {
          return record6Builder_.getMessage();
        }
      }
      /**
       * <pre>
       * ?
       * </pre>
       *
       * <code>optional .tutorial.Record6 record6 = 5;</code>
       */
      public Builder setRecord6(net.studioblueplanet.tomtomwatch.TrackerProto.Record6 value) {
        if (record6Builder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          record6_ = value;
          onChanged();
        } else {
          record6Builder_.setMessage(value);
        }
        bitField0_ |= 0x00000008;
        return this;
      }
      /**
       * <pre>
       * ?
       * </pre>
       *
       * <code>optional .tutorial.Record6 record6 = 5;</code>
       */
      public Builder setRecord6(
          net.studioblueplanet.tomtomwatch.TrackerProto.Record6.Builder builderForValue) {
        if (record6Builder_ == null) {
          record6_ = builderForValue.build();
          onChanged();
        } else {
          record6Builder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000008;
        return this;
      }
      /**
       * <pre>
       * ?
       * </pre>
       *
       * <code>optional .tutorial.Record6 record6 = 5;</code>
       */
      public Builder mergeRecord6(net.studioblueplanet.tomtomwatch.TrackerProto.Record6 value) {
        if (record6Builder_ == null) {
          if (((bitField0_ & 0x00000008) != 0) &&
              record6_ != null &&
              record6_ != net.studioblueplanet.tomtomwatch.TrackerProto.Record6.getDefaultInstance()) {
            record6_ =
              net.studioblueplanet.tomtomwatch.TrackerProto.Record6.newBuilder(record6_).mergeFrom(value).buildPartial();
          } else {
            record6_ = value;
          }
          onChanged();
        } else {
          record6Builder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000008;
        return this;
      }
      /**
       * <pre>
       * ?
       * </pre>
       *
       * <code>optional .tutorial.Record6 record6 = 5;</code>
       */
      public Builder clearRecord6() {
        if (record6Builder_ == null) {
          record6_ = null;
          onChanged();
        } else {
          record6Builder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000008);
        return this;
      }
      /**
       * <pre>
       * ?
       * </pre>
       *
       * <code>optional .tutorial.Record6 record6 = 5;</code>
       */
      public net.studioblueplanet.tomtomwatch.TrackerProto.Record6.Builder getRecord6Builder() {
        bitField0_ |= 0x00000008;
        onChanged();
        return getRecord6FieldBuilder().getBuilder();
      }
      /**
       * <pre>
       * ?
       * </pre>
       *
       * <code>optional .tutorial.Record6 record6 = 5;</code>
       */
      public net.studioblueplanet.tomtomwatch.TrackerProto.Record6OrBuilder getRecord6OrBuilder() {
        if (record6Builder_ != null) {
          return record6Builder_.getMessageOrBuilder();
        } else {
          return record6_ == null ?
              net.studioblueplanet.tomtomwatch.TrackerProto.Record6.getDefaultInstance() : record6_;
        }
      }
      /**
       * <pre>
       * ?
       * </pre>
       *
       * <code>optional .tutorial.Record6 record6 = 5;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          net.studioblueplanet.tomtomwatch.TrackerProto.Record6, net.studioblueplanet.tomtomwatch.TrackerProto.Record6.Builder, net.studioblueplanet.tomtomwatch.TrackerProto.Record6OrBuilder> 
          getRecord6FieldBuilder() {
        if (record6Builder_ == null) {
          record6Builder_ = new com.google.protobuf.SingleFieldBuilderV3<
              net.studioblueplanet.tomtomwatch.TrackerProto.Record6, net.studioblueplanet.tomtomwatch.TrackerProto.Record6.Builder, net.studioblueplanet.tomtomwatch.TrackerProto.Record6OrBuilder>(
                  getRecord6(),
                  getParentForChildren(),
                  isClean());
          record6_ = null;
        }
        return record6Builder_;
      }

      private net.studioblueplanet.tomtomwatch.TrackerProto.HeartRecord heartRecord_;
      private com.google.protobuf.SingleFieldBuilderV3<
          net.studioblueplanet.tomtomwatch.TrackerProto.HeartRecord, net.studioblueplanet.tomtomwatch.TrackerProto.HeartRecord.Builder, net.studioblueplanet.tomtomwatch.TrackerProto.HeartRecordOrBuilder> heartRecordBuilder_;
      /**
       * <pre>
       * Heart rate
       * </pre>
       *
       * <code>optional .tutorial.HeartRecord heartRecord = 6;</code>
       */
      public boolean hasHeartRecord() {
        return ((bitField0_ & 0x00000010) != 0);
      }
      /**
       * <pre>
       * Heart rate
       * </pre>
       *
       * <code>optional .tutorial.HeartRecord heartRecord = 6;</code>
       */
      public net.studioblueplanet.tomtomwatch.TrackerProto.HeartRecord getHeartRecord() {
        if (heartRecordBuilder_ == null) {
          return heartRecord_ == null ? net.studioblueplanet.tomtomwatch.TrackerProto.HeartRecord.getDefaultInstance() : heartRecord_;
        } else {
          return heartRecordBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       * Heart rate
       * </pre>
       *
       * <code>optional .tutorial.HeartRecord heartRecord = 6;</code>
       */
      public Builder setHeartRecord(net.studioblueplanet.tomtomwatch.TrackerProto.HeartRecord value) {
        if (heartRecordBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          heartRecord_ = value;
          onChanged();
        } else {
          heartRecordBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000010;
        return this;
      }
      /**
       * <pre>
       * Heart rate
       * </pre>
       *
       * <code>optional .tutorial.HeartRecord heartRecord = 6;</code>
       */
      public Builder setHeartRecord(
          net.studioblueplanet.tomtomwatch.TrackerProto.HeartRecord.Builder builderForValue) {
        if (heartRecordBuilder_ == null) {
          heartRecord_ = builderForValue.build();
          onChanged();
        } else {
          heartRecordBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000010;
        return this;
      }
      /**
       * <pre>
       * Heart rate
       * </pre>
       *
       * <code>optional .tutorial.HeartRecord heartRecord = 6;</code>
       */
      public Builder mergeHeartRecord(net.studioblueplanet.tomtomwatch.TrackerProto.HeartRecord value) {
        if (heartRecordBuilder_ == null) {
          if (((bitField0_ & 0x00000010) != 0) &&
              heartRecord_ != null &&
              heartRecord_ != net.studioblueplanet.tomtomwatch.TrackerProto.HeartRecord.getDefaultInstance()) {
            heartRecord_ =
              net.studioblueplanet.tomtomwatch.TrackerProto.HeartRecord.newBuilder(heartRecord_).mergeFrom(value).buildPartial();
          } else {
            heartRecord_ = value;
          }
          onChanged();
        } else {
          heartRecordBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000010;
        return this;
      }
      /**
       * <pre>
       * Heart rate
       * </pre>
       *
       * <code>optional .tutorial.HeartRecord heartRecord = 6;</code>
       */
      public Builder clearHeartRecord() {
        if (heartRecordBuilder_ == null) {
          heartRecord_ = null;
          onChanged();
        } else {
          heartRecordBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000010);
        return this;
      }
      /**
       * <pre>
       * Heart rate
       * </pre>
       *
       * <code>optional .tutorial.HeartRecord heartRecord = 6;</code>
       */
      public net.studioblueplanet.tomtomwatch.TrackerProto.HeartRecord.Builder getHeartRecordBuilder() {
        bitField0_ |= 0x00000010;
        onChanged();
        return getHeartRecordFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       * Heart rate
       * </pre>
       *
       * <code>optional .tutorial.HeartRecord heartRecord = 6;</code>
       */
      public net.studioblueplanet.tomtomwatch.TrackerProto.HeartRecordOrBuilder getHeartRecordOrBuilder() {
        if (heartRecordBuilder_ != null) {
          return heartRecordBuilder_.getMessageOrBuilder();
        } else {
          return heartRecord_ == null ?
              net.studioblueplanet.tomtomwatch.TrackerProto.HeartRecord.getDefaultInstance() : heartRecord_;
        }
      }
      /**
       * <pre>
       * Heart rate
       * </pre>
       *
       * <code>optional .tutorial.HeartRecord heartRecord = 6;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          net.studioblueplanet.tomtomwatch.TrackerProto.HeartRecord, net.studioblueplanet.tomtomwatch.TrackerProto.HeartRecord.Builder, net.studioblueplanet.tomtomwatch.TrackerProto.HeartRecordOrBuilder> 
          getHeartRecordFieldBuilder() {
        if (heartRecordBuilder_ == null) {
          heartRecordBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              net.studioblueplanet.tomtomwatch.TrackerProto.HeartRecord, net.studioblueplanet.tomtomwatch.TrackerProto.HeartRecord.Builder, net.studioblueplanet.tomtomwatch.TrackerProto.HeartRecordOrBuilder>(
                  getHeartRecord(),
                  getParentForChildren(),
                  isClean());
          heartRecord_ = null;
        }
        return heartRecordBuilder_;
      }

      private net.studioblueplanet.tomtomwatch.TrackerProto.Record4 record4_;
      private com.google.protobuf.SingleFieldBuilderV3<
          net.studioblueplanet.tomtomwatch.TrackerProto.Record4, net.studioblueplanet.tomtomwatch.TrackerProto.Record4.Builder, net.studioblueplanet.tomtomwatch.TrackerProto.Record4OrBuilder> record4Builder_;
      /**
       * <pre>
       * ?
       * </pre>
       *
       * <code>optional .tutorial.Record4 record4 = 7;</code>
       */
      public boolean hasRecord4() {
        return ((bitField0_ & 0x00000020) != 0);
      }
      /**
       * <pre>
       * ?
       * </pre>
       *
       * <code>optional .tutorial.Record4 record4 = 7;</code>
       */
      public net.studioblueplanet.tomtomwatch.TrackerProto.Record4 getRecord4() {
        if (record4Builder_ == null) {
          return record4_ == null ? net.studioblueplanet.tomtomwatch.TrackerProto.Record4.getDefaultInstance() : record4_;
        } else {
          return record4Builder_.getMessage();
        }
      }
      /**
       * <pre>
       * ?
       * </pre>
       *
       * <code>optional .tutorial.Record4 record4 = 7;</code>
       */
      public Builder setRecord4(net.studioblueplanet.tomtomwatch.TrackerProto.Record4 value) {
        if (record4Builder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          record4_ = value;
          onChanged();
        } else {
          record4Builder_.setMessage(value);
        }
        bitField0_ |= 0x00000020;
        return this;
      }
      /**
       * <pre>
       * ?
       * </pre>
       *
       * <code>optional .tutorial.Record4 record4 = 7;</code>
       */
      public Builder setRecord4(
          net.studioblueplanet.tomtomwatch.TrackerProto.Record4.Builder builderForValue) {
        if (record4Builder_ == null) {
          record4_ = builderForValue.build();
          onChanged();
        } else {
          record4Builder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000020;
        return this;
      }
      /**
       * <pre>
       * ?
       * </pre>
       *
       * <code>optional .tutorial.Record4 record4 = 7;</code>
       */
      public Builder mergeRecord4(net.studioblueplanet.tomtomwatch.TrackerProto.Record4 value) {
        if (record4Builder_ == null) {
          if (((bitField0_ & 0x00000020) != 0) &&
              record4_ != null &&
              record4_ != net.studioblueplanet.tomtomwatch.TrackerProto.Record4.getDefaultInstance()) {
            record4_ =
              net.studioblueplanet.tomtomwatch.TrackerProto.Record4.newBuilder(record4_).mergeFrom(value).buildPartial();
          } else {
            record4_ = value;
          }
          onChanged();
        } else {
          record4Builder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000020;
        return this;
      }
      /**
       * <pre>
       * ?
       * </pre>
       *
       * <code>optional .tutorial.Record4 record4 = 7;</code>
       */
      public Builder clearRecord4() {
        if (record4Builder_ == null) {
          record4_ = null;
          onChanged();
        } else {
          record4Builder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000020);
        return this;
      }
      /**
       * <pre>
       * ?
       * </pre>
       *
       * <code>optional .tutorial.Record4 record4 = 7;</code>
       */
      public net.studioblueplanet.tomtomwatch.TrackerProto.Record4.Builder getRecord4Builder() {
        bitField0_ |= 0x00000020;
        onChanged();
        return getRecord4FieldBuilder().getBuilder();
      }
      /**
       * <pre>
       * ?
       * </pre>
       *
       * <code>optional .tutorial.Record4 record4 = 7;</code>
       */
      public net.studioblueplanet.tomtomwatch.TrackerProto.Record4OrBuilder getRecord4OrBuilder() {
        if (record4Builder_ != null) {
          return record4Builder_.getMessageOrBuilder();
        } else {
          return record4_ == null ?
              net.studioblueplanet.tomtomwatch.TrackerProto.Record4.getDefaultInstance() : record4_;
        }
      }
      /**
       * <pre>
       * ?
       * </pre>
       *
       * <code>optional .tutorial.Record4 record4 = 7;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          net.studioblueplanet.tomtomwatch.TrackerProto.Record4, net.studioblueplanet.tomtomwatch.TrackerProto.Record4.Builder, net.studioblueplanet.tomtomwatch.TrackerProto.Record4OrBuilder> 
          getRecord4FieldBuilder() {
        if (record4Builder_ == null) {
          record4Builder_ = new com.google.protobuf.SingleFieldBuilderV3<
              net.studioblueplanet.tomtomwatch.TrackerProto.Record4, net.studioblueplanet.tomtomwatch.TrackerProto.Record4.Builder, net.studioblueplanet.tomtomwatch.TrackerProto.Record4OrBuilder>(
                  getRecord4(),
                  getParentForChildren(),
                  isClean());
          record4_ = null;
        }
        return record4Builder_;
      }

      private net.studioblueplanet.tomtomwatch.TrackerProto.FitnessRecord fitnessRecord_;
      private com.google.protobuf.SingleFieldBuilderV3<
          net.studioblueplanet.tomtomwatch.TrackerProto.FitnessRecord, net.studioblueplanet.tomtomwatch.TrackerProto.FitnessRecord.Builder, net.studioblueplanet.tomtomwatch.TrackerProto.FitnessRecordOrBuilder> fitnessRecordBuilder_;
      /**
       * <pre>
       * TomTom FitnessPoints counters
       * </pre>
       *
       * <code>optional .tutorial.FitnessRecord fitnessRecord = 9;</code>
       */
      public boolean hasFitnessRecord() {
        return ((bitField0_ & 0x00000040) != 0);
      }
      /**
       * <pre>
       * TomTom FitnessPoints counters
       * </pre>
       *
       * <code>optional .tutorial.FitnessRecord fitnessRecord = 9;</code>
       */
      public net.studioblueplanet.tomtomwatch.TrackerProto.FitnessRecord getFitnessRecord() {
        if (fitnessRecordBuilder_ == null) {
          return fitnessRecord_ == null ? net.studioblueplanet.tomtomwatch.TrackerProto.FitnessRecord.getDefaultInstance() : fitnessRecord_;
        } else {
          return fitnessRecordBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       * TomTom FitnessPoints counters
       * </pre>
       *
       * <code>optional .tutorial.FitnessRecord fitnessRecord = 9;</code>
       */
      public Builder setFitnessRecord(net.studioblueplanet.tomtomwatch.TrackerProto.FitnessRecord value) {
        if (fitnessRecordBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          fitnessRecord_ = value;
          onChanged();
        } else {
          fitnessRecordBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000040;
        return this;
      }
      /**
       * <pre>
       * TomTom FitnessPoints counters
       * </pre>
       *
       * <code>optional .tutorial.FitnessRecord fitnessRecord = 9;</code>
       */
      public Builder setFitnessRecord(
          net.studioblueplanet.tomtomwatch.TrackerProto.FitnessRecord.Builder builderForValue) {
        if (fitnessRecordBuilder_ == null) {
          fitnessRecord_ = builderForValue.build();
          onChanged();
        } else {
          fitnessRecordBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000040;
        return this;
      }
      /**
       * <pre>
       * TomTom FitnessPoints counters
       * </pre>
       *
       * <code>optional .tutorial.FitnessRecord fitnessRecord = 9;</code>
       */
      public Builder mergeFitnessRecord(net.studioblueplanet.tomtomwatch.TrackerProto.FitnessRecord value) {
        if (fitnessRecordBuilder_ == null) {
          if (((bitField0_ & 0x00000040) != 0) &&
              fitnessRecord_ != null &&
              fitnessRecord_ != net.studioblueplanet.tomtomwatch.TrackerProto.FitnessRecord.getDefaultInstance()) {
            fitnessRecord_ =
              net.studioblueplanet.tomtomwatch.TrackerProto.FitnessRecord.newBuilder(fitnessRecord_).mergeFrom(value).buildPartial();
          } else {
            fitnessRecord_ = value;
          }
          onChanged();
        } else {
          fitnessRecordBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000040;
        return this;
      }
      /**
       * <pre>
       * TomTom FitnessPoints counters
       * </pre>
       *
       * <code>optional .tutorial.FitnessRecord fitnessRecord = 9;</code>
       */
      public Builder clearFitnessRecord() {
        if (fitnessRecordBuilder_ == null) {
          fitnessRecord_ = null;
          onChanged();
        } else {
          fitnessRecordBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000040);
        return this;
      }
      /**
       * <pre>
       * TomTom FitnessPoints counters
       * </pre>
       *
       * <code>optional .tutorial.FitnessRecord fitnessRecord = 9;</code>
       */
      public net.studioblueplanet.tomtomwatch.TrackerProto.FitnessRecord.Builder getFitnessRecordBuilder() {
        bitField0_ |= 0x00000040;
        onChanged();
        return getFitnessRecordFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       * TomTom FitnessPoints counters
       * </pre>
       *
       * <code>optional .tutorial.FitnessRecord fitnessRecord = 9;</code>
       */
      public net.studioblueplanet.tomtomwatch.TrackerProto.FitnessRecordOrBuilder getFitnessRecordOrBuilder() {
        if (fitnessRecordBuilder_ != null) {
          return fitnessRecordBuilder_.getMessageOrBuilder();
        } else {
          return fitnessRecord_ == null ?
              net.studioblueplanet.tomtomwatch.TrackerProto.FitnessRecord.getDefaultInstance() : fitnessRecord_;
        }
      }
      /**
       * <pre>
       * TomTom FitnessPoints counters
       * </pre>
       *
       * <code>optional .tutorial.FitnessRecord fitnessRecord = 9;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          net.studioblueplanet.tomtomwatch.TrackerProto.FitnessRecord, net.studioblueplanet.tomtomwatch.TrackerProto.FitnessRecord.Builder, net.studioblueplanet.tomtomwatch.TrackerProto.FitnessRecordOrBuilder> 
          getFitnessRecordFieldBuilder() {
        if (fitnessRecordBuilder_ == null) {
          fitnessRecordBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              net.studioblueplanet.tomtomwatch.TrackerProto.FitnessRecord, net.studioblueplanet.tomtomwatch.TrackerProto.FitnessRecord.Builder, net.studioblueplanet.tomtomwatch.TrackerProto.FitnessRecordOrBuilder>(
                  getFitnessRecord(),
                  getParentForChildren(),
                  isClean());
          fitnessRecord_ = null;
        }
        return fitnessRecordBuilder_;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:tutorial.SubDataContainer)
    }

    // @@protoc_insertion_point(class_scope:tutorial.SubDataContainer)
    private static final net.studioblueplanet.tomtomwatch.TrackerProto.SubDataContainer DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new net.studioblueplanet.tomtomwatch.TrackerProto.SubDataContainer();
    }

    public static net.studioblueplanet.tomtomwatch.TrackerProto.SubDataContainer getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    @java.lang.Deprecated public static final com.google.protobuf.Parser<SubDataContainer>
        PARSER = new com.google.protobuf.AbstractParser<SubDataContainer>() {
      @java.lang.Override
      public SubDataContainer parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new SubDataContainer(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<SubDataContainer> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<SubDataContainer> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public net.studioblueplanet.tomtomwatch.TrackerProto.SubDataContainer getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface DeviceInfoOrBuilder extends
      // @@protoc_insertion_point(interface_extends:tutorial.DeviceInfo)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>required string deviceName = 1;</code>
     */
    boolean hasDeviceName();
    /**
     * <code>required string deviceName = 1;</code>
     */
    java.lang.String getDeviceName();
    /**
     * <code>required string deviceName = 1;</code>
     */
    com.google.protobuf.ByteString
        getDeviceNameBytes();

    /**
     * <code>required fixed32 year = 2;</code>
     */
    boolean hasYear();
    /**
     * <code>required fixed32 year = 2;</code>
     */
    int getYear();

    /**
     * <code>required .tutorial.SoftwareVersion softwareVersion = 3;</code>
     */
    boolean hasSoftwareVersion();
    /**
     * <code>required .tutorial.SoftwareVersion softwareVersion = 3;</code>
     */
    net.studioblueplanet.tomtomwatch.TrackerProto.SoftwareVersion getSoftwareVersion();
    /**
     * <code>required .tutorial.SoftwareVersion softwareVersion = 3;</code>
     */
    net.studioblueplanet.tomtomwatch.TrackerProto.SoftwareVersionOrBuilder getSoftwareVersionOrBuilder();
  }
  /**
   * Protobuf type {@code tutorial.DeviceInfo}
   */
  public  static final class DeviceInfo extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:tutorial.DeviceInfo)
      DeviceInfoOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use DeviceInfo.newBuilder() to construct.
    private DeviceInfo(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private DeviceInfo() {
      deviceName_ = "";
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new DeviceInfo();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private DeviceInfo(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 10: {
              com.google.protobuf.ByteString bs = input.readBytes();
              bitField0_ |= 0x00000001;
              deviceName_ = bs;
              break;
            }
            case 21: {
              bitField0_ |= 0x00000002;
              year_ = input.readFixed32();
              break;
            }
            case 26: {
              net.studioblueplanet.tomtomwatch.TrackerProto.SoftwareVersion.Builder subBuilder = null;
              if (((bitField0_ & 0x00000004) != 0)) {
                subBuilder = softwareVersion_.toBuilder();
              }
              softwareVersion_ = input.readMessage(net.studioblueplanet.tomtomwatch.TrackerProto.SoftwareVersion.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(softwareVersion_);
                softwareVersion_ = subBuilder.buildPartial();
              }
              bitField0_ |= 0x00000004;
              break;
            }
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return net.studioblueplanet.tomtomwatch.TrackerProto.internal_static_tutorial_DeviceInfo_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return net.studioblueplanet.tomtomwatch.TrackerProto.internal_static_tutorial_DeviceInfo_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              net.studioblueplanet.tomtomwatch.TrackerProto.DeviceInfo.class, net.studioblueplanet.tomtomwatch.TrackerProto.DeviceInfo.Builder.class);
    }

    private int bitField0_;
    public static final int DEVICENAME_FIELD_NUMBER = 1;
    private volatile java.lang.Object deviceName_;
    /**
     * <code>required string deviceName = 1;</code>
     */
    public boolean hasDeviceName() {
      return ((bitField0_ & 0x00000001) != 0);
    }
    /**
     * <code>required string deviceName = 1;</code>
     */
    public java.lang.String getDeviceName() {
      java.lang.Object ref = deviceName_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          deviceName_ = s;
        }
        return s;
      }
    }
    /**
     * <code>required string deviceName = 1;</code>
     */
    public com.google.protobuf.ByteString
        getDeviceNameBytes() {
      java.lang.Object ref = deviceName_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        deviceName_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int YEAR_FIELD_NUMBER = 2;
    private int year_;
    /**
     * <code>required fixed32 year = 2;</code>
     */
    public boolean hasYear() {
      return ((bitField0_ & 0x00000002) != 0);
    }
    /**
     * <code>required fixed32 year = 2;</code>
     */
    public int getYear() {
      return year_;
    }

    public static final int SOFTWAREVERSION_FIELD_NUMBER = 3;
    private net.studioblueplanet.tomtomwatch.TrackerProto.SoftwareVersion softwareVersion_;
    /**
     * <code>required .tutorial.SoftwareVersion softwareVersion = 3;</code>
     */
    public boolean hasSoftwareVersion() {
      return ((bitField0_ & 0x00000004) != 0);
    }
    /**
     * <code>required .tutorial.SoftwareVersion softwareVersion = 3;</code>
     */
    public net.studioblueplanet.tomtomwatch.TrackerProto.SoftwareVersion getSoftwareVersion() {
      return softwareVersion_ == null ? net.studioblueplanet.tomtomwatch.TrackerProto.SoftwareVersion.getDefaultInstance() : softwareVersion_;
    }
    /**
     * <code>required .tutorial.SoftwareVersion softwareVersion = 3;</code>
     */
    public net.studioblueplanet.tomtomwatch.TrackerProto.SoftwareVersionOrBuilder getSoftwareVersionOrBuilder() {
      return softwareVersion_ == null ? net.studioblueplanet.tomtomwatch.TrackerProto.SoftwareVersion.getDefaultInstance() : softwareVersion_;
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      if (!hasDeviceName()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasYear()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasSoftwareVersion()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!getSoftwareVersion().isInitialized()) {
        memoizedIsInitialized = 0;
        return false;
      }
      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (((bitField0_ & 0x00000001) != 0)) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 1, deviceName_);
      }
      if (((bitField0_ & 0x00000002) != 0)) {
        output.writeFixed32(2, year_);
      }
      if (((bitField0_ & 0x00000004) != 0)) {
        output.writeMessage(3, getSoftwareVersion());
      }
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) != 0)) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(1, deviceName_);
      }
      if (((bitField0_ & 0x00000002) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeFixed32Size(2, year_);
      }
      if (((bitField0_ & 0x00000004) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(3, getSoftwareVersion());
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof net.studioblueplanet.tomtomwatch.TrackerProto.DeviceInfo)) {
        return super.equals(obj);
      }
      net.studioblueplanet.tomtomwatch.TrackerProto.DeviceInfo other = (net.studioblueplanet.tomtomwatch.TrackerProto.DeviceInfo) obj;

      if (hasDeviceName() != other.hasDeviceName()) return false;
      if (hasDeviceName()) {
        if (!getDeviceName()
            .equals(other.getDeviceName())) return false;
      }
      if (hasYear() != other.hasYear()) return false;
      if (hasYear()) {
        if (getYear()
            != other.getYear()) return false;
      }
      if (hasSoftwareVersion() != other.hasSoftwareVersion()) return false;
      if (hasSoftwareVersion()) {
        if (!getSoftwareVersion()
            .equals(other.getSoftwareVersion())) return false;
      }
      if (!unknownFields.equals(other.unknownFields)) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (hasDeviceName()) {
        hash = (37 * hash) + DEVICENAME_FIELD_NUMBER;
        hash = (53 * hash) + getDeviceName().hashCode();
      }
      if (hasYear()) {
        hash = (37 * hash) + YEAR_FIELD_NUMBER;
        hash = (53 * hash) + getYear();
      }
      if (hasSoftwareVersion()) {
        hash = (37 * hash) + SOFTWAREVERSION_FIELD_NUMBER;
        hash = (53 * hash) + getSoftwareVersion().hashCode();
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static net.studioblueplanet.tomtomwatch.TrackerProto.DeviceInfo parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static net.studioblueplanet.tomtomwatch.TrackerProto.DeviceInfo parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static net.studioblueplanet.tomtomwatch.TrackerProto.DeviceInfo parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static net.studioblueplanet.tomtomwatch.TrackerProto.DeviceInfo parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static net.studioblueplanet.tomtomwatch.TrackerProto.DeviceInfo parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static net.studioblueplanet.tomtomwatch.TrackerProto.DeviceInfo parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static net.studioblueplanet.tomtomwatch.TrackerProto.DeviceInfo parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static net.studioblueplanet.tomtomwatch.TrackerProto.DeviceInfo parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static net.studioblueplanet.tomtomwatch.TrackerProto.DeviceInfo parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static net.studioblueplanet.tomtomwatch.TrackerProto.DeviceInfo parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static net.studioblueplanet.tomtomwatch.TrackerProto.DeviceInfo parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static net.studioblueplanet.tomtomwatch.TrackerProto.DeviceInfo parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(net.studioblueplanet.tomtomwatch.TrackerProto.DeviceInfo prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code tutorial.DeviceInfo}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:tutorial.DeviceInfo)
        net.studioblueplanet.tomtomwatch.TrackerProto.DeviceInfoOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return net.studioblueplanet.tomtomwatch.TrackerProto.internal_static_tutorial_DeviceInfo_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return net.studioblueplanet.tomtomwatch.TrackerProto.internal_static_tutorial_DeviceInfo_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                net.studioblueplanet.tomtomwatch.TrackerProto.DeviceInfo.class, net.studioblueplanet.tomtomwatch.TrackerProto.DeviceInfo.Builder.class);
      }

      // Construct using net.studioblueplanet.tomtomwatch.TrackerProto.DeviceInfo.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
          getSoftwareVersionFieldBuilder();
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        deviceName_ = "";
        bitField0_ = (bitField0_ & ~0x00000001);
        year_ = 0;
        bitField0_ = (bitField0_ & ~0x00000002);
        if (softwareVersionBuilder_ == null) {
          softwareVersion_ = null;
        } else {
          softwareVersionBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000004);
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return net.studioblueplanet.tomtomwatch.TrackerProto.internal_static_tutorial_DeviceInfo_descriptor;
      }

      @java.lang.Override
      public net.studioblueplanet.tomtomwatch.TrackerProto.DeviceInfo getDefaultInstanceForType() {
        return net.studioblueplanet.tomtomwatch.TrackerProto.DeviceInfo.getDefaultInstance();
      }

      @java.lang.Override
      public net.studioblueplanet.tomtomwatch.TrackerProto.DeviceInfo build() {
        net.studioblueplanet.tomtomwatch.TrackerProto.DeviceInfo result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public net.studioblueplanet.tomtomwatch.TrackerProto.DeviceInfo buildPartial() {
        net.studioblueplanet.tomtomwatch.TrackerProto.DeviceInfo result = new net.studioblueplanet.tomtomwatch.TrackerProto.DeviceInfo(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) != 0)) {
          to_bitField0_ |= 0x00000001;
        }
        result.deviceName_ = deviceName_;
        if (((from_bitField0_ & 0x00000002) != 0)) {
          result.year_ = year_;
          to_bitField0_ |= 0x00000002;
        }
        if (((from_bitField0_ & 0x00000004) != 0)) {
          if (softwareVersionBuilder_ == null) {
            result.softwareVersion_ = softwareVersion_;
          } else {
            result.softwareVersion_ = softwareVersionBuilder_.build();
          }
          to_bitField0_ |= 0x00000004;
        }
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof net.studioblueplanet.tomtomwatch.TrackerProto.DeviceInfo) {
          return mergeFrom((net.studioblueplanet.tomtomwatch.TrackerProto.DeviceInfo)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(net.studioblueplanet.tomtomwatch.TrackerProto.DeviceInfo other) {
        if (other == net.studioblueplanet.tomtomwatch.TrackerProto.DeviceInfo.getDefaultInstance()) return this;
        if (other.hasDeviceName()) {
          bitField0_ |= 0x00000001;
          deviceName_ = other.deviceName_;
          onChanged();
        }
        if (other.hasYear()) {
          setYear(other.getYear());
        }
        if (other.hasSoftwareVersion()) {
          mergeSoftwareVersion(other.getSoftwareVersion());
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        if (!hasDeviceName()) {
          return false;
        }
        if (!hasYear()) {
          return false;
        }
        if (!hasSoftwareVersion()) {
          return false;
        }
        if (!getSoftwareVersion().isInitialized()) {
          return false;
        }
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        net.studioblueplanet.tomtomwatch.TrackerProto.DeviceInfo parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (net.studioblueplanet.tomtomwatch.TrackerProto.DeviceInfo) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private java.lang.Object deviceName_ = "";
      /**
       * <code>required string deviceName = 1;</code>
       */
      public boolean hasDeviceName() {
        return ((bitField0_ & 0x00000001) != 0);
      }
      /**
       * <code>required string deviceName = 1;</code>
       */
      public java.lang.String getDeviceName() {
        java.lang.Object ref = deviceName_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          if (bs.isValidUtf8()) {
            deviceName_ = s;
          }
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>required string deviceName = 1;</code>
       */
      public com.google.protobuf.ByteString
          getDeviceNameBytes() {
        java.lang.Object ref = deviceName_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          deviceName_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>required string deviceName = 1;</code>
       */
      public Builder setDeviceName(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
        deviceName_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required string deviceName = 1;</code>
       */
      public Builder clearDeviceName() {
        bitField0_ = (bitField0_ & ~0x00000001);
        deviceName_ = getDefaultInstance().getDeviceName();
        onChanged();
        return this;
      }
      /**
       * <code>required string deviceName = 1;</code>
       */
      public Builder setDeviceNameBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
        deviceName_ = value;
        onChanged();
        return this;
      }

      private int year_ ;
      /**
       * <code>required fixed32 year = 2;</code>
       */
      public boolean hasYear() {
        return ((bitField0_ & 0x00000002) != 0);
      }
      /**
       * <code>required fixed32 year = 2;</code>
       */
      public int getYear() {
        return year_;
      }
      /**
       * <code>required fixed32 year = 2;</code>
       */
      public Builder setYear(int value) {
        bitField0_ |= 0x00000002;
        year_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required fixed32 year = 2;</code>
       */
      public Builder clearYear() {
        bitField0_ = (bitField0_ & ~0x00000002);
        year_ = 0;
        onChanged();
        return this;
      }

      private net.studioblueplanet.tomtomwatch.TrackerProto.SoftwareVersion softwareVersion_;
      private com.google.protobuf.SingleFieldBuilderV3<
          net.studioblueplanet.tomtomwatch.TrackerProto.SoftwareVersion, net.studioblueplanet.tomtomwatch.TrackerProto.SoftwareVersion.Builder, net.studioblueplanet.tomtomwatch.TrackerProto.SoftwareVersionOrBuilder> softwareVersionBuilder_;
      /**
       * <code>required .tutorial.SoftwareVersion softwareVersion = 3;</code>
       */
      public boolean hasSoftwareVersion() {
        return ((bitField0_ & 0x00000004) != 0);
      }
      /**
       * <code>required .tutorial.SoftwareVersion softwareVersion = 3;</code>
       */
      public net.studioblueplanet.tomtomwatch.TrackerProto.SoftwareVersion getSoftwareVersion() {
        if (softwareVersionBuilder_ == null) {
          return softwareVersion_ == null ? net.studioblueplanet.tomtomwatch.TrackerProto.SoftwareVersion.getDefaultInstance() : softwareVersion_;
        } else {
          return softwareVersionBuilder_.getMessage();
        }
      }
      /**
       * <code>required .tutorial.SoftwareVersion softwareVersion = 3;</code>
       */
      public Builder setSoftwareVersion(net.studioblueplanet.tomtomwatch.TrackerProto.SoftwareVersion value) {
        if (softwareVersionBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          softwareVersion_ = value;
          onChanged();
        } else {
          softwareVersionBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000004;
        return this;
      }
      /**
       * <code>required .tutorial.SoftwareVersion softwareVersion = 3;</code>
       */
      public Builder setSoftwareVersion(
          net.studioblueplanet.tomtomwatch.TrackerProto.SoftwareVersion.Builder builderForValue) {
        if (softwareVersionBuilder_ == null) {
          softwareVersion_ = builderForValue.build();
          onChanged();
        } else {
          softwareVersionBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000004;
        return this;
      }
      /**
       * <code>required .tutorial.SoftwareVersion softwareVersion = 3;</code>
       */
      public Builder mergeSoftwareVersion(net.studioblueplanet.tomtomwatch.TrackerProto.SoftwareVersion value) {
        if (softwareVersionBuilder_ == null) {
          if (((bitField0_ & 0x00000004) != 0) &&
              softwareVersion_ != null &&
              softwareVersion_ != net.studioblueplanet.tomtomwatch.TrackerProto.SoftwareVersion.getDefaultInstance()) {
            softwareVersion_ =
              net.studioblueplanet.tomtomwatch.TrackerProto.SoftwareVersion.newBuilder(softwareVersion_).mergeFrom(value).buildPartial();
          } else {
            softwareVersion_ = value;
          }
          onChanged();
        } else {
          softwareVersionBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000004;
        return this;
      }
      /**
       * <code>required .tutorial.SoftwareVersion softwareVersion = 3;</code>
       */
      public Builder clearSoftwareVersion() {
        if (softwareVersionBuilder_ == null) {
          softwareVersion_ = null;
          onChanged();
        } else {
          softwareVersionBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000004);
        return this;
      }
      /**
       * <code>required .tutorial.SoftwareVersion softwareVersion = 3;</code>
       */
      public net.studioblueplanet.tomtomwatch.TrackerProto.SoftwareVersion.Builder getSoftwareVersionBuilder() {
        bitField0_ |= 0x00000004;
        onChanged();
        return getSoftwareVersionFieldBuilder().getBuilder();
      }
      /**
       * <code>required .tutorial.SoftwareVersion softwareVersion = 3;</code>
       */
      public net.studioblueplanet.tomtomwatch.TrackerProto.SoftwareVersionOrBuilder getSoftwareVersionOrBuilder() {
        if (softwareVersionBuilder_ != null) {
          return softwareVersionBuilder_.getMessageOrBuilder();
        } else {
          return softwareVersion_ == null ?
              net.studioblueplanet.tomtomwatch.TrackerProto.SoftwareVersion.getDefaultInstance() : softwareVersion_;
        }
      }
      /**
       * <code>required .tutorial.SoftwareVersion softwareVersion = 3;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          net.studioblueplanet.tomtomwatch.TrackerProto.SoftwareVersion, net.studioblueplanet.tomtomwatch.TrackerProto.SoftwareVersion.Builder, net.studioblueplanet.tomtomwatch.TrackerProto.SoftwareVersionOrBuilder> 
          getSoftwareVersionFieldBuilder() {
        if (softwareVersionBuilder_ == null) {
          softwareVersionBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              net.studioblueplanet.tomtomwatch.TrackerProto.SoftwareVersion, net.studioblueplanet.tomtomwatch.TrackerProto.SoftwareVersion.Builder, net.studioblueplanet.tomtomwatch.TrackerProto.SoftwareVersionOrBuilder>(
                  getSoftwareVersion(),
                  getParentForChildren(),
                  isClean());
          softwareVersion_ = null;
        }
        return softwareVersionBuilder_;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:tutorial.DeviceInfo)
    }

    // @@protoc_insertion_point(class_scope:tutorial.DeviceInfo)
    private static final net.studioblueplanet.tomtomwatch.TrackerProto.DeviceInfo DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new net.studioblueplanet.tomtomwatch.TrackerProto.DeviceInfo();
    }

    public static net.studioblueplanet.tomtomwatch.TrackerProto.DeviceInfo getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    @java.lang.Deprecated public static final com.google.protobuf.Parser<DeviceInfo>
        PARSER = new com.google.protobuf.AbstractParser<DeviceInfo>() {
      @java.lang.Override
      public DeviceInfo parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new DeviceInfo(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<DeviceInfo> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<DeviceInfo> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public net.studioblueplanet.tomtomwatch.TrackerProto.DeviceInfo getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface SoftwareVersionOrBuilder extends
      // @@protoc_insertion_point(interface_extends:tutorial.SoftwareVersion)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>required int32 majorVersion = 1;</code>
     */
    boolean hasMajorVersion();
    /**
     * <code>required int32 majorVersion = 1;</code>
     */
    int getMajorVersion();

    /**
     * <code>required int32 mediumVersion = 2;</code>
     */
    boolean hasMediumVersion();
    /**
     * <code>required int32 mediumVersion = 2;</code>
     */
    int getMediumVersion();

    /**
     * <code>required int32 minorVersion = 3;</code>
     */
    boolean hasMinorVersion();
    /**
     * <code>required int32 minorVersion = 3;</code>
     */
    int getMinorVersion();

    /**
     * <code>required .tutorial.Unknown01 unknown01 = 4;</code>
     */
    boolean hasUnknown01();
    /**
     * <code>required .tutorial.Unknown01 unknown01 = 4;</code>
     */
    net.studioblueplanet.tomtomwatch.TrackerProto.Unknown01 getUnknown01();
    /**
     * <code>required .tutorial.Unknown01 unknown01 = 4;</code>
     */
    net.studioblueplanet.tomtomwatch.TrackerProto.Unknown01OrBuilder getUnknown01OrBuilder();

    /**
     * <pre>
     * 1.6.26
     * </pre>
     *
     * <code>optional .tutorial.Unknown02 unknown02 = 5;</code>
     */
    boolean hasUnknown02();
    /**
     * <pre>
     * 1.6.26
     * </pre>
     *
     * <code>optional .tutorial.Unknown02 unknown02 = 5;</code>
     */
    net.studioblueplanet.tomtomwatch.TrackerProto.Unknown02 getUnknown02();
    /**
     * <pre>
     * 1.6.26
     * </pre>
     *
     * <code>optional .tutorial.Unknown02 unknown02 = 5;</code>
     */
    net.studioblueplanet.tomtomwatch.TrackerProto.Unknown02OrBuilder getUnknown02OrBuilder();
  }
  /**
   * Protobuf type {@code tutorial.SoftwareVersion}
   */
  public  static final class SoftwareVersion extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:tutorial.SoftwareVersion)
      SoftwareVersionOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use SoftwareVersion.newBuilder() to construct.
    private SoftwareVersion(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private SoftwareVersion() {
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new SoftwareVersion();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private SoftwareVersion(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 8: {
              bitField0_ |= 0x00000001;
              majorVersion_ = input.readInt32();
              break;
            }
            case 16: {
              bitField0_ |= 0x00000002;
              mediumVersion_ = input.readInt32();
              break;
            }
            case 24: {
              bitField0_ |= 0x00000004;
              minorVersion_ = input.readInt32();
              break;
            }
            case 34: {
              net.studioblueplanet.tomtomwatch.TrackerProto.Unknown01.Builder subBuilder = null;
              if (((bitField0_ & 0x00000008) != 0)) {
                subBuilder = unknown01_.toBuilder();
              }
              unknown01_ = input.readMessage(net.studioblueplanet.tomtomwatch.TrackerProto.Unknown01.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(unknown01_);
                unknown01_ = subBuilder.buildPartial();
              }
              bitField0_ |= 0x00000008;
              break;
            }
            case 42: {
              net.studioblueplanet.tomtomwatch.TrackerProto.Unknown02.Builder subBuilder = null;
              if (((bitField0_ & 0x00000010) != 0)) {
                subBuilder = unknown02_.toBuilder();
              }
              unknown02_ = input.readMessage(net.studioblueplanet.tomtomwatch.TrackerProto.Unknown02.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(unknown02_);
                unknown02_ = subBuilder.buildPartial();
              }
              bitField0_ |= 0x00000010;
              break;
            }
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return net.studioblueplanet.tomtomwatch.TrackerProto.internal_static_tutorial_SoftwareVersion_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return net.studioblueplanet.tomtomwatch.TrackerProto.internal_static_tutorial_SoftwareVersion_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              net.studioblueplanet.tomtomwatch.TrackerProto.SoftwareVersion.class, net.studioblueplanet.tomtomwatch.TrackerProto.SoftwareVersion.Builder.class);
    }

    private int bitField0_;
    public static final int MAJORVERSION_FIELD_NUMBER = 1;
    private int majorVersion_;
    /**
     * <code>required int32 majorVersion = 1;</code>
     */
    public boolean hasMajorVersion() {
      return ((bitField0_ & 0x00000001) != 0);
    }
    /**
     * <code>required int32 majorVersion = 1;</code>
     */
    public int getMajorVersion() {
      return majorVersion_;
    }

    public static final int MEDIUMVERSION_FIELD_NUMBER = 2;
    private int mediumVersion_;
    /**
     * <code>required int32 mediumVersion = 2;</code>
     */
    public boolean hasMediumVersion() {
      return ((bitField0_ & 0x00000002) != 0);
    }
    /**
     * <code>required int32 mediumVersion = 2;</code>
     */
    public int getMediumVersion() {
      return mediumVersion_;
    }

    public static final int MINORVERSION_FIELD_NUMBER = 3;
    private int minorVersion_;
    /**
     * <code>required int32 minorVersion = 3;</code>
     */
    public boolean hasMinorVersion() {
      return ((bitField0_ & 0x00000004) != 0);
    }
    /**
     * <code>required int32 minorVersion = 3;</code>
     */
    public int getMinorVersion() {
      return minorVersion_;
    }

    public static final int UNKNOWN01_FIELD_NUMBER = 4;
    private net.studioblueplanet.tomtomwatch.TrackerProto.Unknown01 unknown01_;
    /**
     * <code>required .tutorial.Unknown01 unknown01 = 4;</code>
     */
    public boolean hasUnknown01() {
      return ((bitField0_ & 0x00000008) != 0);
    }
    /**
     * <code>required .tutorial.Unknown01 unknown01 = 4;</code>
     */
    public net.studioblueplanet.tomtomwatch.TrackerProto.Unknown01 getUnknown01() {
      return unknown01_ == null ? net.studioblueplanet.tomtomwatch.TrackerProto.Unknown01.getDefaultInstance() : unknown01_;
    }
    /**
     * <code>required .tutorial.Unknown01 unknown01 = 4;</code>
     */
    public net.studioblueplanet.tomtomwatch.TrackerProto.Unknown01OrBuilder getUnknown01OrBuilder() {
      return unknown01_ == null ? net.studioblueplanet.tomtomwatch.TrackerProto.Unknown01.getDefaultInstance() : unknown01_;
    }

    public static final int UNKNOWN02_FIELD_NUMBER = 5;
    private net.studioblueplanet.tomtomwatch.TrackerProto.Unknown02 unknown02_;
    /**
     * <pre>
     * 1.6.26
     * </pre>
     *
     * <code>optional .tutorial.Unknown02 unknown02 = 5;</code>
     */
    public boolean hasUnknown02() {
      return ((bitField0_ & 0x00000010) != 0);
    }
    /**
     * <pre>
     * 1.6.26
     * </pre>
     *
     * <code>optional .tutorial.Unknown02 unknown02 = 5;</code>
     */
    public net.studioblueplanet.tomtomwatch.TrackerProto.Unknown02 getUnknown02() {
      return unknown02_ == null ? net.studioblueplanet.tomtomwatch.TrackerProto.Unknown02.getDefaultInstance() : unknown02_;
    }
    /**
     * <pre>
     * 1.6.26
     * </pre>
     *
     * <code>optional .tutorial.Unknown02 unknown02 = 5;</code>
     */
    public net.studioblueplanet.tomtomwatch.TrackerProto.Unknown02OrBuilder getUnknown02OrBuilder() {
      return unknown02_ == null ? net.studioblueplanet.tomtomwatch.TrackerProto.Unknown02.getDefaultInstance() : unknown02_;
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      if (!hasMajorVersion()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasMediumVersion()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasMinorVersion()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasUnknown01()) {
        memoizedIsInitialized = 0;
        return false;
      }
      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (((bitField0_ & 0x00000001) != 0)) {
        output.writeInt32(1, majorVersion_);
      }
      if (((bitField0_ & 0x00000002) != 0)) {
        output.writeInt32(2, mediumVersion_);
      }
      if (((bitField0_ & 0x00000004) != 0)) {
        output.writeInt32(3, minorVersion_);
      }
      if (((bitField0_ & 0x00000008) != 0)) {
        output.writeMessage(4, getUnknown01());
      }
      if (((bitField0_ & 0x00000010) != 0)) {
        output.writeMessage(5, getUnknown02());
      }
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(1, majorVersion_);
      }
      if (((bitField0_ & 0x00000002) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(2, mediumVersion_);
      }
      if (((bitField0_ & 0x00000004) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(3, minorVersion_);
      }
      if (((bitField0_ & 0x00000008) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(4, getUnknown01());
      }
      if (((bitField0_ & 0x00000010) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(5, getUnknown02());
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof net.studioblueplanet.tomtomwatch.TrackerProto.SoftwareVersion)) {
        return super.equals(obj);
      }
      net.studioblueplanet.tomtomwatch.TrackerProto.SoftwareVersion other = (net.studioblueplanet.tomtomwatch.TrackerProto.SoftwareVersion) obj;

      if (hasMajorVersion() != other.hasMajorVersion()) return false;
      if (hasMajorVersion()) {
        if (getMajorVersion()
            != other.getMajorVersion()) return false;
      }
      if (hasMediumVersion() != other.hasMediumVersion()) return false;
      if (hasMediumVersion()) {
        if (getMediumVersion()
            != other.getMediumVersion()) return false;
      }
      if (hasMinorVersion() != other.hasMinorVersion()) return false;
      if (hasMinorVersion()) {
        if (getMinorVersion()
            != other.getMinorVersion()) return false;
      }
      if (hasUnknown01() != other.hasUnknown01()) return false;
      if (hasUnknown01()) {
        if (!getUnknown01()
            .equals(other.getUnknown01())) return false;
      }
      if (hasUnknown02() != other.hasUnknown02()) return false;
      if (hasUnknown02()) {
        if (!getUnknown02()
            .equals(other.getUnknown02())) return false;
      }
      if (!unknownFields.equals(other.unknownFields)) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (hasMajorVersion()) {
        hash = (37 * hash) + MAJORVERSION_FIELD_NUMBER;
        hash = (53 * hash) + getMajorVersion();
      }
      if (hasMediumVersion()) {
        hash = (37 * hash) + MEDIUMVERSION_FIELD_NUMBER;
        hash = (53 * hash) + getMediumVersion();
      }
      if (hasMinorVersion()) {
        hash = (37 * hash) + MINORVERSION_FIELD_NUMBER;
        hash = (53 * hash) + getMinorVersion();
      }
      if (hasUnknown01()) {
        hash = (37 * hash) + UNKNOWN01_FIELD_NUMBER;
        hash = (53 * hash) + getUnknown01().hashCode();
      }
      if (hasUnknown02()) {
        hash = (37 * hash) + UNKNOWN02_FIELD_NUMBER;
        hash = (53 * hash) + getUnknown02().hashCode();
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static net.studioblueplanet.tomtomwatch.TrackerProto.SoftwareVersion parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static net.studioblueplanet.tomtomwatch.TrackerProto.SoftwareVersion parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static net.studioblueplanet.tomtomwatch.TrackerProto.SoftwareVersion parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static net.studioblueplanet.tomtomwatch.TrackerProto.SoftwareVersion parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static net.studioblueplanet.tomtomwatch.TrackerProto.SoftwareVersion parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static net.studioblueplanet.tomtomwatch.TrackerProto.SoftwareVersion parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static net.studioblueplanet.tomtomwatch.TrackerProto.SoftwareVersion parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static net.studioblueplanet.tomtomwatch.TrackerProto.SoftwareVersion parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static net.studioblueplanet.tomtomwatch.TrackerProto.SoftwareVersion parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static net.studioblueplanet.tomtomwatch.TrackerProto.SoftwareVersion parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static net.studioblueplanet.tomtomwatch.TrackerProto.SoftwareVersion parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static net.studioblueplanet.tomtomwatch.TrackerProto.SoftwareVersion parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(net.studioblueplanet.tomtomwatch.TrackerProto.SoftwareVersion prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code tutorial.SoftwareVersion}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:tutorial.SoftwareVersion)
        net.studioblueplanet.tomtomwatch.TrackerProto.SoftwareVersionOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return net.studioblueplanet.tomtomwatch.TrackerProto.internal_static_tutorial_SoftwareVersion_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return net.studioblueplanet.tomtomwatch.TrackerProto.internal_static_tutorial_SoftwareVersion_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                net.studioblueplanet.tomtomwatch.TrackerProto.SoftwareVersion.class, net.studioblueplanet.tomtomwatch.TrackerProto.SoftwareVersion.Builder.class);
      }

      // Construct using net.studioblueplanet.tomtomwatch.TrackerProto.SoftwareVersion.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
          getUnknown01FieldBuilder();
          getUnknown02FieldBuilder();
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        majorVersion_ = 0;
        bitField0_ = (bitField0_ & ~0x00000001);
        mediumVersion_ = 0;
        bitField0_ = (bitField0_ & ~0x00000002);
        minorVersion_ = 0;
        bitField0_ = (bitField0_ & ~0x00000004);
        if (unknown01Builder_ == null) {
          unknown01_ = null;
        } else {
          unknown01Builder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000008);
        if (unknown02Builder_ == null) {
          unknown02_ = null;
        } else {
          unknown02Builder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000010);
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return net.studioblueplanet.tomtomwatch.TrackerProto.internal_static_tutorial_SoftwareVersion_descriptor;
      }

      @java.lang.Override
      public net.studioblueplanet.tomtomwatch.TrackerProto.SoftwareVersion getDefaultInstanceForType() {
        return net.studioblueplanet.tomtomwatch.TrackerProto.SoftwareVersion.getDefaultInstance();
      }

      @java.lang.Override
      public net.studioblueplanet.tomtomwatch.TrackerProto.SoftwareVersion build() {
        net.studioblueplanet.tomtomwatch.TrackerProto.SoftwareVersion result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public net.studioblueplanet.tomtomwatch.TrackerProto.SoftwareVersion buildPartial() {
        net.studioblueplanet.tomtomwatch.TrackerProto.SoftwareVersion result = new net.studioblueplanet.tomtomwatch.TrackerProto.SoftwareVersion(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) != 0)) {
          result.majorVersion_ = majorVersion_;
          to_bitField0_ |= 0x00000001;
        }
        if (((from_bitField0_ & 0x00000002) != 0)) {
          result.mediumVersion_ = mediumVersion_;
          to_bitField0_ |= 0x00000002;
        }
        if (((from_bitField0_ & 0x00000004) != 0)) {
          result.minorVersion_ = minorVersion_;
          to_bitField0_ |= 0x00000004;
        }
        if (((from_bitField0_ & 0x00000008) != 0)) {
          if (unknown01Builder_ == null) {
            result.unknown01_ = unknown01_;
          } else {
            result.unknown01_ = unknown01Builder_.build();
          }
          to_bitField0_ |= 0x00000008;
        }
        if (((from_bitField0_ & 0x00000010) != 0)) {
          if (unknown02Builder_ == null) {
            result.unknown02_ = unknown02_;
          } else {
            result.unknown02_ = unknown02Builder_.build();
          }
          to_bitField0_ |= 0x00000010;
        }
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof net.studioblueplanet.tomtomwatch.TrackerProto.SoftwareVersion) {
          return mergeFrom((net.studioblueplanet.tomtomwatch.TrackerProto.SoftwareVersion)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(net.studioblueplanet.tomtomwatch.TrackerProto.SoftwareVersion other) {
        if (other == net.studioblueplanet.tomtomwatch.TrackerProto.SoftwareVersion.getDefaultInstance()) return this;
        if (other.hasMajorVersion()) {
          setMajorVersion(other.getMajorVersion());
        }
        if (other.hasMediumVersion()) {
          setMediumVersion(other.getMediumVersion());
        }
        if (other.hasMinorVersion()) {
          setMinorVersion(other.getMinorVersion());
        }
        if (other.hasUnknown01()) {
          mergeUnknown01(other.getUnknown01());
        }
        if (other.hasUnknown02()) {
          mergeUnknown02(other.getUnknown02());
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        if (!hasMajorVersion()) {
          return false;
        }
        if (!hasMediumVersion()) {
          return false;
        }
        if (!hasMinorVersion()) {
          return false;
        }
        if (!hasUnknown01()) {
          return false;
        }
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        net.studioblueplanet.tomtomwatch.TrackerProto.SoftwareVersion parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (net.studioblueplanet.tomtomwatch.TrackerProto.SoftwareVersion) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private int majorVersion_ ;
      /**
       * <code>required int32 majorVersion = 1;</code>
       */
      public boolean hasMajorVersion() {
        return ((bitField0_ & 0x00000001) != 0);
      }
      /**
       * <code>required int32 majorVersion = 1;</code>
       */
      public int getMajorVersion() {
        return majorVersion_;
      }
      /**
       * <code>required int32 majorVersion = 1;</code>
       */
      public Builder setMajorVersion(int value) {
        bitField0_ |= 0x00000001;
        majorVersion_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required int32 majorVersion = 1;</code>
       */
      public Builder clearMajorVersion() {
        bitField0_ = (bitField0_ & ~0x00000001);
        majorVersion_ = 0;
        onChanged();
        return this;
      }

      private int mediumVersion_ ;
      /**
       * <code>required int32 mediumVersion = 2;</code>
       */
      public boolean hasMediumVersion() {
        return ((bitField0_ & 0x00000002) != 0);
      }
      /**
       * <code>required int32 mediumVersion = 2;</code>
       */
      public int getMediumVersion() {
        return mediumVersion_;
      }
      /**
       * <code>required int32 mediumVersion = 2;</code>
       */
      public Builder setMediumVersion(int value) {
        bitField0_ |= 0x00000002;
        mediumVersion_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required int32 mediumVersion = 2;</code>
       */
      public Builder clearMediumVersion() {
        bitField0_ = (bitField0_ & ~0x00000002);
        mediumVersion_ = 0;
        onChanged();
        return this;
      }

      private int minorVersion_ ;
      /**
       * <code>required int32 minorVersion = 3;</code>
       */
      public boolean hasMinorVersion() {
        return ((bitField0_ & 0x00000004) != 0);
      }
      /**
       * <code>required int32 minorVersion = 3;</code>
       */
      public int getMinorVersion() {
        return minorVersion_;
      }
      /**
       * <code>required int32 minorVersion = 3;</code>
       */
      public Builder setMinorVersion(int value) {
        bitField0_ |= 0x00000004;
        minorVersion_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required int32 minorVersion = 3;</code>
       */
      public Builder clearMinorVersion() {
        bitField0_ = (bitField0_ & ~0x00000004);
        minorVersion_ = 0;
        onChanged();
        return this;
      }

      private net.studioblueplanet.tomtomwatch.TrackerProto.Unknown01 unknown01_;
      private com.google.protobuf.SingleFieldBuilderV3<
          net.studioblueplanet.tomtomwatch.TrackerProto.Unknown01, net.studioblueplanet.tomtomwatch.TrackerProto.Unknown01.Builder, net.studioblueplanet.tomtomwatch.TrackerProto.Unknown01OrBuilder> unknown01Builder_;
      /**
       * <code>required .tutorial.Unknown01 unknown01 = 4;</code>
       */
      public boolean hasUnknown01() {
        return ((bitField0_ & 0x00000008) != 0);
      }
      /**
       * <code>required .tutorial.Unknown01 unknown01 = 4;</code>
       */
      public net.studioblueplanet.tomtomwatch.TrackerProto.Unknown01 getUnknown01() {
        if (unknown01Builder_ == null) {
          return unknown01_ == null ? net.studioblueplanet.tomtomwatch.TrackerProto.Unknown01.getDefaultInstance() : unknown01_;
        } else {
          return unknown01Builder_.getMessage();
        }
      }
      /**
       * <code>required .tutorial.Unknown01 unknown01 = 4;</code>
       */
      public Builder setUnknown01(net.studioblueplanet.tomtomwatch.TrackerProto.Unknown01 value) {
        if (unknown01Builder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          unknown01_ = value;
          onChanged();
        } else {
          unknown01Builder_.setMessage(value);
        }
        bitField0_ |= 0x00000008;
        return this;
      }
      /**
       * <code>required .tutorial.Unknown01 unknown01 = 4;</code>
       */
      public Builder setUnknown01(
          net.studioblueplanet.tomtomwatch.TrackerProto.Unknown01.Builder builderForValue) {
        if (unknown01Builder_ == null) {
          unknown01_ = builderForValue.build();
          onChanged();
        } else {
          unknown01Builder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000008;
        return this;
      }
      /**
       * <code>required .tutorial.Unknown01 unknown01 = 4;</code>
       */
      public Builder mergeUnknown01(net.studioblueplanet.tomtomwatch.TrackerProto.Unknown01 value) {
        if (unknown01Builder_ == null) {
          if (((bitField0_ & 0x00000008) != 0) &&
              unknown01_ != null &&
              unknown01_ != net.studioblueplanet.tomtomwatch.TrackerProto.Unknown01.getDefaultInstance()) {
            unknown01_ =
              net.studioblueplanet.tomtomwatch.TrackerProto.Unknown01.newBuilder(unknown01_).mergeFrom(value).buildPartial();
          } else {
            unknown01_ = value;
          }
          onChanged();
        } else {
          unknown01Builder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000008;
        return this;
      }
      /**
       * <code>required .tutorial.Unknown01 unknown01 = 4;</code>
       */
      public Builder clearUnknown01() {
        if (unknown01Builder_ == null) {
          unknown01_ = null;
          onChanged();
        } else {
          unknown01Builder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000008);
        return this;
      }
      /**
       * <code>required .tutorial.Unknown01 unknown01 = 4;</code>
       */
      public net.studioblueplanet.tomtomwatch.TrackerProto.Unknown01.Builder getUnknown01Builder() {
        bitField0_ |= 0x00000008;
        onChanged();
        return getUnknown01FieldBuilder().getBuilder();
      }
      /**
       * <code>required .tutorial.Unknown01 unknown01 = 4;</code>
       */
      public net.studioblueplanet.tomtomwatch.TrackerProto.Unknown01OrBuilder getUnknown01OrBuilder() {
        if (unknown01Builder_ != null) {
          return unknown01Builder_.getMessageOrBuilder();
        } else {
          return unknown01_ == null ?
              net.studioblueplanet.tomtomwatch.TrackerProto.Unknown01.getDefaultInstance() : unknown01_;
        }
      }
      /**
       * <code>required .tutorial.Unknown01 unknown01 = 4;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          net.studioblueplanet.tomtomwatch.TrackerProto.Unknown01, net.studioblueplanet.tomtomwatch.TrackerProto.Unknown01.Builder, net.studioblueplanet.tomtomwatch.TrackerProto.Unknown01OrBuilder> 
          getUnknown01FieldBuilder() {
        if (unknown01Builder_ == null) {
          unknown01Builder_ = new com.google.protobuf.SingleFieldBuilderV3<
              net.studioblueplanet.tomtomwatch.TrackerProto.Unknown01, net.studioblueplanet.tomtomwatch.TrackerProto.Unknown01.Builder, net.studioblueplanet.tomtomwatch.TrackerProto.Unknown01OrBuilder>(
                  getUnknown01(),
                  getParentForChildren(),
                  isClean());
          unknown01_ = null;
        }
        return unknown01Builder_;
      }

      private net.studioblueplanet.tomtomwatch.TrackerProto.Unknown02 unknown02_;
      private com.google.protobuf.SingleFieldBuilderV3<
          net.studioblueplanet.tomtomwatch.TrackerProto.Unknown02, net.studioblueplanet.tomtomwatch.TrackerProto.Unknown02.Builder, net.studioblueplanet.tomtomwatch.TrackerProto.Unknown02OrBuilder> unknown02Builder_;
      /**
       * <pre>
       * 1.6.26
       * </pre>
       *
       * <code>optional .tutorial.Unknown02 unknown02 = 5;</code>
       */
      public boolean hasUnknown02() {
        return ((bitField0_ & 0x00000010) != 0);
      }
      /**
       * <pre>
       * 1.6.26
       * </pre>
       *
       * <code>optional .tutorial.Unknown02 unknown02 = 5;</code>
       */
      public net.studioblueplanet.tomtomwatch.TrackerProto.Unknown02 getUnknown02() {
        if (unknown02Builder_ == null) {
          return unknown02_ == null ? net.studioblueplanet.tomtomwatch.TrackerProto.Unknown02.getDefaultInstance() : unknown02_;
        } else {
          return unknown02Builder_.getMessage();
        }
      }
      /**
       * <pre>
       * 1.6.26
       * </pre>
       *
       * <code>optional .tutorial.Unknown02 unknown02 = 5;</code>
       */
      public Builder setUnknown02(net.studioblueplanet.tomtomwatch.TrackerProto.Unknown02 value) {
        if (unknown02Builder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          unknown02_ = value;
          onChanged();
        } else {
          unknown02Builder_.setMessage(value);
        }
        bitField0_ |= 0x00000010;
        return this;
      }
      /**
       * <pre>
       * 1.6.26
       * </pre>
       *
       * <code>optional .tutorial.Unknown02 unknown02 = 5;</code>
       */
      public Builder setUnknown02(
          net.studioblueplanet.tomtomwatch.TrackerProto.Unknown02.Builder builderForValue) {
        if (unknown02Builder_ == null) {
          unknown02_ = builderForValue.build();
          onChanged();
        } else {
          unknown02Builder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000010;
        return this;
      }
      /**
       * <pre>
       * 1.6.26
       * </pre>
       *
       * <code>optional .tutorial.Unknown02 unknown02 = 5;</code>
       */
      public Builder mergeUnknown02(net.studioblueplanet.tomtomwatch.TrackerProto.Unknown02 value) {
        if (unknown02Builder_ == null) {
          if (((bitField0_ & 0x00000010) != 0) &&
              unknown02_ != null &&
              unknown02_ != net.studioblueplanet.tomtomwatch.TrackerProto.Unknown02.getDefaultInstance()) {
            unknown02_ =
              net.studioblueplanet.tomtomwatch.TrackerProto.Unknown02.newBuilder(unknown02_).mergeFrom(value).buildPartial();
          } else {
            unknown02_ = value;
          }
          onChanged();
        } else {
          unknown02Builder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000010;
        return this;
      }
      /**
       * <pre>
       * 1.6.26
       * </pre>
       *
       * <code>optional .tutorial.Unknown02 unknown02 = 5;</code>
       */
      public Builder clearUnknown02() {
        if (unknown02Builder_ == null) {
          unknown02_ = null;
          onChanged();
        } else {
          unknown02Builder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000010);
        return this;
      }
      /**
       * <pre>
       * 1.6.26
       * </pre>
       *
       * <code>optional .tutorial.Unknown02 unknown02 = 5;</code>
       */
      public net.studioblueplanet.tomtomwatch.TrackerProto.Unknown02.Builder getUnknown02Builder() {
        bitField0_ |= 0x00000010;
        onChanged();
        return getUnknown02FieldBuilder().getBuilder();
      }
      /**
       * <pre>
       * 1.6.26
       * </pre>
       *
       * <code>optional .tutorial.Unknown02 unknown02 = 5;</code>
       */
      public net.studioblueplanet.tomtomwatch.TrackerProto.Unknown02OrBuilder getUnknown02OrBuilder() {
        if (unknown02Builder_ != null) {
          return unknown02Builder_.getMessageOrBuilder();
        } else {
          return unknown02_ == null ?
              net.studioblueplanet.tomtomwatch.TrackerProto.Unknown02.getDefaultInstance() : unknown02_;
        }
      }
      /**
       * <pre>
       * 1.6.26
       * </pre>
       *
       * <code>optional .tutorial.Unknown02 unknown02 = 5;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          net.studioblueplanet.tomtomwatch.TrackerProto.Unknown02, net.studioblueplanet.tomtomwatch.TrackerProto.Unknown02.Builder, net.studioblueplanet.tomtomwatch.TrackerProto.Unknown02OrBuilder> 
          getUnknown02FieldBuilder() {
        if (unknown02Builder_ == null) {
          unknown02Builder_ = new com.google.protobuf.SingleFieldBuilderV3<
              net.studioblueplanet.tomtomwatch.TrackerProto.Unknown02, net.studioblueplanet.tomtomwatch.TrackerProto.Unknown02.Builder, net.studioblueplanet.tomtomwatch.TrackerProto.Unknown02OrBuilder>(
                  getUnknown02(),
                  getParentForChildren(),
                  isClean());
          unknown02_ = null;
        }
        return unknown02Builder_;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:tutorial.SoftwareVersion)
    }

    // @@protoc_insertion_point(class_scope:tutorial.SoftwareVersion)
    private static final net.studioblueplanet.tomtomwatch.TrackerProto.SoftwareVersion DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new net.studioblueplanet.tomtomwatch.TrackerProto.SoftwareVersion();
    }

    public static net.studioblueplanet.tomtomwatch.TrackerProto.SoftwareVersion getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    @java.lang.Deprecated public static final com.google.protobuf.Parser<SoftwareVersion>
        PARSER = new com.google.protobuf.AbstractParser<SoftwareVersion>() {
      @java.lang.Override
      public SoftwareVersion parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new SoftwareVersion(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<SoftwareVersion> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<SoftwareVersion> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public net.studioblueplanet.tomtomwatch.TrackerProto.SoftwareVersion getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface Unknown01OrBuilder extends
      // @@protoc_insertion_point(interface_extends:tutorial.Unknown01)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>optional int32 dummy = 1;</code>
     */
    boolean hasDummy();
    /**
     * <code>optional int32 dummy = 1;</code>
     */
    int getDummy();
  }
  /**
   * Protobuf type {@code tutorial.Unknown01}
   */
  public  static final class Unknown01 extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:tutorial.Unknown01)
      Unknown01OrBuilder {
  private static final long serialVersionUID = 0L;
    // Use Unknown01.newBuilder() to construct.
    private Unknown01(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private Unknown01() {
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new Unknown01();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private Unknown01(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 8: {
              bitField0_ |= 0x00000001;
              dummy_ = input.readInt32();
              break;
            }
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return net.studioblueplanet.tomtomwatch.TrackerProto.internal_static_tutorial_Unknown01_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return net.studioblueplanet.tomtomwatch.TrackerProto.internal_static_tutorial_Unknown01_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              net.studioblueplanet.tomtomwatch.TrackerProto.Unknown01.class, net.studioblueplanet.tomtomwatch.TrackerProto.Unknown01.Builder.class);
    }

    private int bitField0_;
    public static final int DUMMY_FIELD_NUMBER = 1;
    private int dummy_;
    /**
     * <code>optional int32 dummy = 1;</code>
     */
    public boolean hasDummy() {
      return ((bitField0_ & 0x00000001) != 0);
    }
    /**
     * <code>optional int32 dummy = 1;</code>
     */
    public int getDummy() {
      return dummy_;
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (((bitField0_ & 0x00000001) != 0)) {
        output.writeInt32(1, dummy_);
      }
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(1, dummy_);
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof net.studioblueplanet.tomtomwatch.TrackerProto.Unknown01)) {
        return super.equals(obj);
      }
      net.studioblueplanet.tomtomwatch.TrackerProto.Unknown01 other = (net.studioblueplanet.tomtomwatch.TrackerProto.Unknown01) obj;

      if (hasDummy() != other.hasDummy()) return false;
      if (hasDummy()) {
        if (getDummy()
            != other.getDummy()) return false;
      }
      if (!unknownFields.equals(other.unknownFields)) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (hasDummy()) {
        hash = (37 * hash) + DUMMY_FIELD_NUMBER;
        hash = (53 * hash) + getDummy();
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static net.studioblueplanet.tomtomwatch.TrackerProto.Unknown01 parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static net.studioblueplanet.tomtomwatch.TrackerProto.Unknown01 parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static net.studioblueplanet.tomtomwatch.TrackerProto.Unknown01 parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static net.studioblueplanet.tomtomwatch.TrackerProto.Unknown01 parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static net.studioblueplanet.tomtomwatch.TrackerProto.Unknown01 parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static net.studioblueplanet.tomtomwatch.TrackerProto.Unknown01 parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static net.studioblueplanet.tomtomwatch.TrackerProto.Unknown01 parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static net.studioblueplanet.tomtomwatch.TrackerProto.Unknown01 parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static net.studioblueplanet.tomtomwatch.TrackerProto.Unknown01 parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static net.studioblueplanet.tomtomwatch.TrackerProto.Unknown01 parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static net.studioblueplanet.tomtomwatch.TrackerProto.Unknown01 parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static net.studioblueplanet.tomtomwatch.TrackerProto.Unknown01 parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(net.studioblueplanet.tomtomwatch.TrackerProto.Unknown01 prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code tutorial.Unknown01}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:tutorial.Unknown01)
        net.studioblueplanet.tomtomwatch.TrackerProto.Unknown01OrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return net.studioblueplanet.tomtomwatch.TrackerProto.internal_static_tutorial_Unknown01_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return net.studioblueplanet.tomtomwatch.TrackerProto.internal_static_tutorial_Unknown01_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                net.studioblueplanet.tomtomwatch.TrackerProto.Unknown01.class, net.studioblueplanet.tomtomwatch.TrackerProto.Unknown01.Builder.class);
      }

      // Construct using net.studioblueplanet.tomtomwatch.TrackerProto.Unknown01.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        dummy_ = 0;
        bitField0_ = (bitField0_ & ~0x00000001);
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return net.studioblueplanet.tomtomwatch.TrackerProto.internal_static_tutorial_Unknown01_descriptor;
      }

      @java.lang.Override
      public net.studioblueplanet.tomtomwatch.TrackerProto.Unknown01 getDefaultInstanceForType() {
        return net.studioblueplanet.tomtomwatch.TrackerProto.Unknown01.getDefaultInstance();
      }

      @java.lang.Override
      public net.studioblueplanet.tomtomwatch.TrackerProto.Unknown01 build() {
        net.studioblueplanet.tomtomwatch.TrackerProto.Unknown01 result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public net.studioblueplanet.tomtomwatch.TrackerProto.Unknown01 buildPartial() {
        net.studioblueplanet.tomtomwatch.TrackerProto.Unknown01 result = new net.studioblueplanet.tomtomwatch.TrackerProto.Unknown01(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) != 0)) {
          result.dummy_ = dummy_;
          to_bitField0_ |= 0x00000001;
        }
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof net.studioblueplanet.tomtomwatch.TrackerProto.Unknown01) {
          return mergeFrom((net.studioblueplanet.tomtomwatch.TrackerProto.Unknown01)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(net.studioblueplanet.tomtomwatch.TrackerProto.Unknown01 other) {
        if (other == net.studioblueplanet.tomtomwatch.TrackerProto.Unknown01.getDefaultInstance()) return this;
        if (other.hasDummy()) {
          setDummy(other.getDummy());
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        net.studioblueplanet.tomtomwatch.TrackerProto.Unknown01 parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (net.studioblueplanet.tomtomwatch.TrackerProto.Unknown01) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private int dummy_ ;
      /**
       * <code>optional int32 dummy = 1;</code>
       */
      public boolean hasDummy() {
        return ((bitField0_ & 0x00000001) != 0);
      }
      /**
       * <code>optional int32 dummy = 1;</code>
       */
      public int getDummy() {
        return dummy_;
      }
      /**
       * <code>optional int32 dummy = 1;</code>
       */
      public Builder setDummy(int value) {
        bitField0_ |= 0x00000001;
        dummy_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 dummy = 1;</code>
       */
      public Builder clearDummy() {
        bitField0_ = (bitField0_ & ~0x00000001);
        dummy_ = 0;
        onChanged();
        return this;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:tutorial.Unknown01)
    }

    // @@protoc_insertion_point(class_scope:tutorial.Unknown01)
    private static final net.studioblueplanet.tomtomwatch.TrackerProto.Unknown01 DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new net.studioblueplanet.tomtomwatch.TrackerProto.Unknown01();
    }

    public static net.studioblueplanet.tomtomwatch.TrackerProto.Unknown01 getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    @java.lang.Deprecated public static final com.google.protobuf.Parser<Unknown01>
        PARSER = new com.google.protobuf.AbstractParser<Unknown01>() {
      @java.lang.Override
      public Unknown01 parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new Unknown01(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<Unknown01> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<Unknown01> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public net.studioblueplanet.tomtomwatch.TrackerProto.Unknown01 getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface Unknown02OrBuilder extends
      // @@protoc_insertion_point(interface_extends:tutorial.Unknown02)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>optional int32 dummy = 1;</code>
     */
    boolean hasDummy();
    /**
     * <code>optional int32 dummy = 1;</code>
     */
    int getDummy();
  }
  /**
   * Protobuf type {@code tutorial.Unknown02}
   */
  public  static final class Unknown02 extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:tutorial.Unknown02)
      Unknown02OrBuilder {
  private static final long serialVersionUID = 0L;
    // Use Unknown02.newBuilder() to construct.
    private Unknown02(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private Unknown02() {
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new Unknown02();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private Unknown02(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 8: {
              bitField0_ |= 0x00000001;
              dummy_ = input.readInt32();
              break;
            }
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return net.studioblueplanet.tomtomwatch.TrackerProto.internal_static_tutorial_Unknown02_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return net.studioblueplanet.tomtomwatch.TrackerProto.internal_static_tutorial_Unknown02_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              net.studioblueplanet.tomtomwatch.TrackerProto.Unknown02.class, net.studioblueplanet.tomtomwatch.TrackerProto.Unknown02.Builder.class);
    }

    private int bitField0_;
    public static final int DUMMY_FIELD_NUMBER = 1;
    private int dummy_;
    /**
     * <code>optional int32 dummy = 1;</code>
     */
    public boolean hasDummy() {
      return ((bitField0_ & 0x00000001) != 0);
    }
    /**
     * <code>optional int32 dummy = 1;</code>
     */
    public int getDummy() {
      return dummy_;
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (((bitField0_ & 0x00000001) != 0)) {
        output.writeInt32(1, dummy_);
      }
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(1, dummy_);
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof net.studioblueplanet.tomtomwatch.TrackerProto.Unknown02)) {
        return super.equals(obj);
      }
      net.studioblueplanet.tomtomwatch.TrackerProto.Unknown02 other = (net.studioblueplanet.tomtomwatch.TrackerProto.Unknown02) obj;

      if (hasDummy() != other.hasDummy()) return false;
      if (hasDummy()) {
        if (getDummy()
            != other.getDummy()) return false;
      }
      if (!unknownFields.equals(other.unknownFields)) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (hasDummy()) {
        hash = (37 * hash) + DUMMY_FIELD_NUMBER;
        hash = (53 * hash) + getDummy();
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static net.studioblueplanet.tomtomwatch.TrackerProto.Unknown02 parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static net.studioblueplanet.tomtomwatch.TrackerProto.Unknown02 parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static net.studioblueplanet.tomtomwatch.TrackerProto.Unknown02 parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static net.studioblueplanet.tomtomwatch.TrackerProto.Unknown02 parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static net.studioblueplanet.tomtomwatch.TrackerProto.Unknown02 parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static net.studioblueplanet.tomtomwatch.TrackerProto.Unknown02 parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static net.studioblueplanet.tomtomwatch.TrackerProto.Unknown02 parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static net.studioblueplanet.tomtomwatch.TrackerProto.Unknown02 parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static net.studioblueplanet.tomtomwatch.TrackerProto.Unknown02 parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static net.studioblueplanet.tomtomwatch.TrackerProto.Unknown02 parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static net.studioblueplanet.tomtomwatch.TrackerProto.Unknown02 parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static net.studioblueplanet.tomtomwatch.TrackerProto.Unknown02 parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(net.studioblueplanet.tomtomwatch.TrackerProto.Unknown02 prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code tutorial.Unknown02}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:tutorial.Unknown02)
        net.studioblueplanet.tomtomwatch.TrackerProto.Unknown02OrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return net.studioblueplanet.tomtomwatch.TrackerProto.internal_static_tutorial_Unknown02_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return net.studioblueplanet.tomtomwatch.TrackerProto.internal_static_tutorial_Unknown02_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                net.studioblueplanet.tomtomwatch.TrackerProto.Unknown02.class, net.studioblueplanet.tomtomwatch.TrackerProto.Unknown02.Builder.class);
      }

      // Construct using net.studioblueplanet.tomtomwatch.TrackerProto.Unknown02.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        dummy_ = 0;
        bitField0_ = (bitField0_ & ~0x00000001);
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return net.studioblueplanet.tomtomwatch.TrackerProto.internal_static_tutorial_Unknown02_descriptor;
      }

      @java.lang.Override
      public net.studioblueplanet.tomtomwatch.TrackerProto.Unknown02 getDefaultInstanceForType() {
        return net.studioblueplanet.tomtomwatch.TrackerProto.Unknown02.getDefaultInstance();
      }

      @java.lang.Override
      public net.studioblueplanet.tomtomwatch.TrackerProto.Unknown02 build() {
        net.studioblueplanet.tomtomwatch.TrackerProto.Unknown02 result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public net.studioblueplanet.tomtomwatch.TrackerProto.Unknown02 buildPartial() {
        net.studioblueplanet.tomtomwatch.TrackerProto.Unknown02 result = new net.studioblueplanet.tomtomwatch.TrackerProto.Unknown02(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) != 0)) {
          result.dummy_ = dummy_;
          to_bitField0_ |= 0x00000001;
        }
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof net.studioblueplanet.tomtomwatch.TrackerProto.Unknown02) {
          return mergeFrom((net.studioblueplanet.tomtomwatch.TrackerProto.Unknown02)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(net.studioblueplanet.tomtomwatch.TrackerProto.Unknown02 other) {
        if (other == net.studioblueplanet.tomtomwatch.TrackerProto.Unknown02.getDefaultInstance()) return this;
        if (other.hasDummy()) {
          setDummy(other.getDummy());
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        net.studioblueplanet.tomtomwatch.TrackerProto.Unknown02 parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (net.studioblueplanet.tomtomwatch.TrackerProto.Unknown02) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private int dummy_ ;
      /**
       * <code>optional int32 dummy = 1;</code>
       */
      public boolean hasDummy() {
        return ((bitField0_ & 0x00000001) != 0);
      }
      /**
       * <code>optional int32 dummy = 1;</code>
       */
      public int getDummy() {
        return dummy_;
      }
      /**
       * <code>optional int32 dummy = 1;</code>
       */
      public Builder setDummy(int value) {
        bitField0_ |= 0x00000001;
        dummy_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 dummy = 1;</code>
       */
      public Builder clearDummy() {
        bitField0_ = (bitField0_ & ~0x00000001);
        dummy_ = 0;
        onChanged();
        return this;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:tutorial.Unknown02)
    }

    // @@protoc_insertion_point(class_scope:tutorial.Unknown02)
    private static final net.studioblueplanet.tomtomwatch.TrackerProto.Unknown02 DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new net.studioblueplanet.tomtomwatch.TrackerProto.Unknown02();
    }

    public static net.studioblueplanet.tomtomwatch.TrackerProto.Unknown02 getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    @java.lang.Deprecated public static final com.google.protobuf.Parser<Unknown02>
        PARSER = new com.google.protobuf.AbstractParser<Unknown02>() {
      @java.lang.Override
      public Unknown02 parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new Unknown02(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<Unknown02> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<Unknown02> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public net.studioblueplanet.tomtomwatch.TrackerProto.Unknown02 getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface TrackRecordOrBuilder extends
      // @@protoc_insertion_point(interface_extends:tutorial.TrackRecord)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>required int32 recordId = 1;</code>
     */
    boolean hasRecordId();
    /**
     * <code>required int32 recordId = 1;</code>
     */
    int getRecordId();

    /**
     * <pre>
     * Epoch time in seconds, 900 s interval = 15 min
     * </pre>
     *
     * <code>required int32 time = 2;</code>
     */
    boolean hasTime();
    /**
     * <pre>
     * Epoch time in seconds, 900 s interval = 15 min
     * </pre>
     *
     * <code>required int32 time = 2;</code>
     */
    int getTime();

    /**
     * <pre>
     * Difference between time and UTC in seconds (?)
     * </pre>
     *
     * <code>required int32 timeZone = 3;</code>
     */
    boolean hasTimeZone();
    /**
     * <pre>
     * Difference between time and UTC in seconds (?)
     * </pre>
     *
     * <code>required int32 timeZone = 3;</code>
     */
    int getTimeZone();

    /**
     * <pre>
     * Interval of this measurement = 900s often     
     * </pre>
     *
     * <code>required int32 interval = 4;</code>
     */
    boolean hasInterval();
    /**
     * <pre>
     * Interval of this measurement = 900s often     
     * </pre>
     *
     * <code>required int32 interval = 4;</code>
     */
    int getInterval();

    /**
     * <pre>
     * steps
     * </pre>
     *
     * <code>required int32 steps = 5;</code>
     */
    boolean hasSteps();
    /**
     * <pre>
     * steps
     * </pre>
     *
     * <code>required int32 steps = 5;</code>
     */
    int getSteps();

    /**
     * <pre>
     * active time in seconds
     * </pre>
     *
     * <code>required int32 active = 6;</code>
     */
    boolean hasActive();
    /**
     * <pre>
     * active time in seconds
     * </pre>
     *
     * <code>required int32 active = 6;</code>
     */
    int getActive();

    /**
     * <pre>
     * distance in m
     * </pre>
     *
     * <code>required int32 distance = 7;</code>
     */
    boolean hasDistance();
    /**
     * <pre>
     * distance in m
     * </pre>
     *
     * <code>required int32 distance = 7;</code>
     */
    int getDistance();

    /**
     * <pre>
     * kcal
     * </pre>
     *
     * <code>required int32 kcal = 8;</code>
     */
    boolean hasKcal();
    /**
     * <pre>
     * kcal
     * </pre>
     *
     * <code>required int32 kcal = 8;</code>
     */
    int getKcal();

    /**
     * <pre>
     * kcal in rest? (~12 kcal/10 min) 
     * </pre>
     *
     * <code>required int32 kcalRest = 9;</code>
     */
    boolean hasKcalRest();
    /**
     * <pre>
     * kcal in rest? (~12 kcal/10 min) 
     * </pre>
     *
     * <code>required int32 kcalRest = 9;</code>
     */
    int getKcalRest();

    /**
     * <pre>
     * 0
     * </pre>
     *
     * <code>required int32 unknown1 = 11;</code>
     */
    boolean hasUnknown1();
    /**
     * <pre>
     * 0
     * </pre>
     *
     * <code>required int32 unknown1 = 11;</code>
     */
    int getUnknown1();

    /**
     * <pre>
     * sleep time in seconds. 
     * </pre>
     *
     * <code>optional int32 sleepTime = 12;</code>
     */
    boolean hasSleepTime();
    /**
     * <pre>
     * sleep time in seconds. 
     * </pre>
     *
     * <code>optional int32 sleepTime = 12;</code>
     */
    int getSleepTime();

    /**
     * <pre>
     * 1: active, 2: charging? 3: 1st hour sleep 4: sleep
     * </pre>
     *
     * <code>optional int32 sleepMode = 13;</code>
     */
    boolean hasSleepMode();
    /**
     * <pre>
     * 1: active, 2: charging? 3: 1st hour sleep 4: sleep
     * </pre>
     *
     * <code>optional int32 sleepMode = 13;</code>
     */
    int getSleepMode();
  }
  /**
   * <pre>
   *#################################################################################################
   * 4th level: Tracker Record
   *#################################################################################################
   * </pre>
   *
   * Protobuf type {@code tutorial.TrackRecord}
   */
  public  static final class TrackRecord extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:tutorial.TrackRecord)
      TrackRecordOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use TrackRecord.newBuilder() to construct.
    private TrackRecord(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private TrackRecord() {
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new TrackRecord();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private TrackRecord(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 8: {
              bitField0_ |= 0x00000001;
              recordId_ = input.readInt32();
              break;
            }
            case 16: {
              bitField0_ |= 0x00000002;
              time_ = input.readInt32();
              break;
            }
            case 24: {
              bitField0_ |= 0x00000004;
              timeZone_ = input.readInt32();
              break;
            }
            case 32: {
              bitField0_ |= 0x00000008;
              interval_ = input.readInt32();
              break;
            }
            case 40: {
              bitField0_ |= 0x00000010;
              steps_ = input.readInt32();
              break;
            }
            case 48: {
              bitField0_ |= 0x00000020;
              active_ = input.readInt32();
              break;
            }
            case 56: {
              bitField0_ |= 0x00000040;
              distance_ = input.readInt32();
              break;
            }
            case 64: {
              bitField0_ |= 0x00000080;
              kcal_ = input.readInt32();
              break;
            }
            case 72: {
              bitField0_ |= 0x00000100;
              kcalRest_ = input.readInt32();
              break;
            }
            case 88: {
              bitField0_ |= 0x00000200;
              unknown1_ = input.readInt32();
              break;
            }
            case 96: {
              bitField0_ |= 0x00000400;
              sleepTime_ = input.readInt32();
              break;
            }
            case 104: {
              bitField0_ |= 0x00000800;
              sleepMode_ = input.readInt32();
              break;
            }
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return net.studioblueplanet.tomtomwatch.TrackerProto.internal_static_tutorial_TrackRecord_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return net.studioblueplanet.tomtomwatch.TrackerProto.internal_static_tutorial_TrackRecord_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              net.studioblueplanet.tomtomwatch.TrackerProto.TrackRecord.class, net.studioblueplanet.tomtomwatch.TrackerProto.TrackRecord.Builder.class);
    }

    private int bitField0_;
    public static final int RECORDID_FIELD_NUMBER = 1;
    private int recordId_;
    /**
     * <code>required int32 recordId = 1;</code>
     */
    public boolean hasRecordId() {
      return ((bitField0_ & 0x00000001) != 0);
    }
    /**
     * <code>required int32 recordId = 1;</code>
     */
    public int getRecordId() {
      return recordId_;
    }

    public static final int TIME_FIELD_NUMBER = 2;
    private int time_;
    /**
     * <pre>
     * Epoch time in seconds, 900 s interval = 15 min
     * </pre>
     *
     * <code>required int32 time = 2;</code>
     */
    public boolean hasTime() {
      return ((bitField0_ & 0x00000002) != 0);
    }
    /**
     * <pre>
     * Epoch time in seconds, 900 s interval = 15 min
     * </pre>
     *
     * <code>required int32 time = 2;</code>
     */
    public int getTime() {
      return time_;
    }

    public static final int TIMEZONE_FIELD_NUMBER = 3;
    private int timeZone_;
    /**
     * <pre>
     * Difference between time and UTC in seconds (?)
     * </pre>
     *
     * <code>required int32 timeZone = 3;</code>
     */
    public boolean hasTimeZone() {
      return ((bitField0_ & 0x00000004) != 0);
    }
    /**
     * <pre>
     * Difference between time and UTC in seconds (?)
     * </pre>
     *
     * <code>required int32 timeZone = 3;</code>
     */
    public int getTimeZone() {
      return timeZone_;
    }

    public static final int INTERVAL_FIELD_NUMBER = 4;
    private int interval_;
    /**
     * <pre>
     * Interval of this measurement = 900s often     
     * </pre>
     *
     * <code>required int32 interval = 4;</code>
     */
    public boolean hasInterval() {
      return ((bitField0_ & 0x00000008) != 0);
    }
    /**
     * <pre>
     * Interval of this measurement = 900s often     
     * </pre>
     *
     * <code>required int32 interval = 4;</code>
     */
    public int getInterval() {
      return interval_;
    }

    public static final int STEPS_FIELD_NUMBER = 5;
    private int steps_;
    /**
     * <pre>
     * steps
     * </pre>
     *
     * <code>required int32 steps = 5;</code>
     */
    public boolean hasSteps() {
      return ((bitField0_ & 0x00000010) != 0);
    }
    /**
     * <pre>
     * steps
     * </pre>
     *
     * <code>required int32 steps = 5;</code>
     */
    public int getSteps() {
      return steps_;
    }

    public static final int ACTIVE_FIELD_NUMBER = 6;
    private int active_;
    /**
     * <pre>
     * active time in seconds
     * </pre>
     *
     * <code>required int32 active = 6;</code>
     */
    public boolean hasActive() {
      return ((bitField0_ & 0x00000020) != 0);
    }
    /**
     * <pre>
     * active time in seconds
     * </pre>
     *
     * <code>required int32 active = 6;</code>
     */
    public int getActive() {
      return active_;
    }

    public static final int DISTANCE_FIELD_NUMBER = 7;
    private int distance_;
    /**
     * <pre>
     * distance in m
     * </pre>
     *
     * <code>required int32 distance = 7;</code>
     */
    public boolean hasDistance() {
      return ((bitField0_ & 0x00000040) != 0);
    }
    /**
     * <pre>
     * distance in m
     * </pre>
     *
     * <code>required int32 distance = 7;</code>
     */
    public int getDistance() {
      return distance_;
    }

    public static final int KCAL_FIELD_NUMBER = 8;
    private int kcal_;
    /**
     * <pre>
     * kcal
     * </pre>
     *
     * <code>required int32 kcal = 8;</code>
     */
    public boolean hasKcal() {
      return ((bitField0_ & 0x00000080) != 0);
    }
    /**
     * <pre>
     * kcal
     * </pre>
     *
     * <code>required int32 kcal = 8;</code>
     */
    public int getKcal() {
      return kcal_;
    }

    public static final int KCALREST_FIELD_NUMBER = 9;
    private int kcalRest_;
    /**
     * <pre>
     * kcal in rest? (~12 kcal/10 min) 
     * </pre>
     *
     * <code>required int32 kcalRest = 9;</code>
     */
    public boolean hasKcalRest() {
      return ((bitField0_ & 0x00000100) != 0);
    }
    /**
     * <pre>
     * kcal in rest? (~12 kcal/10 min) 
     * </pre>
     *
     * <code>required int32 kcalRest = 9;</code>
     */
    public int getKcalRest() {
      return kcalRest_;
    }

    public static final int UNKNOWN1_FIELD_NUMBER = 11;
    private int unknown1_;
    /**
     * <pre>
     * 0
     * </pre>
     *
     * <code>required int32 unknown1 = 11;</code>
     */
    public boolean hasUnknown1() {
      return ((bitField0_ & 0x00000200) != 0);
    }
    /**
     * <pre>
     * 0
     * </pre>
     *
     * <code>required int32 unknown1 = 11;</code>
     */
    public int getUnknown1() {
      return unknown1_;
    }

    public static final int SLEEPTIME_FIELD_NUMBER = 12;
    private int sleepTime_;
    /**
     * <pre>
     * sleep time in seconds. 
     * </pre>
     *
     * <code>optional int32 sleepTime = 12;</code>
     */
    public boolean hasSleepTime() {
      return ((bitField0_ & 0x00000400) != 0);
    }
    /**
     * <pre>
     * sleep time in seconds. 
     * </pre>
     *
     * <code>optional int32 sleepTime = 12;</code>
     */
    public int getSleepTime() {
      return sleepTime_;
    }

    public static final int SLEEPMODE_FIELD_NUMBER = 13;
    private int sleepMode_;
    /**
     * <pre>
     * 1: active, 2: charging? 3: 1st hour sleep 4: sleep
     * </pre>
     *
     * <code>optional int32 sleepMode = 13;</code>
     */
    public boolean hasSleepMode() {
      return ((bitField0_ & 0x00000800) != 0);
    }
    /**
     * <pre>
     * 1: active, 2: charging? 3: 1st hour sleep 4: sleep
     * </pre>
     *
     * <code>optional int32 sleepMode = 13;</code>
     */
    public int getSleepMode() {
      return sleepMode_;
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      if (!hasRecordId()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasTime()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasTimeZone()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasInterval()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasSteps()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasActive()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasDistance()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasKcal()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasKcalRest()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasUnknown1()) {
        memoizedIsInitialized = 0;
        return false;
      }
      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (((bitField0_ & 0x00000001) != 0)) {
        output.writeInt32(1, recordId_);
      }
      if (((bitField0_ & 0x00000002) != 0)) {
        output.writeInt32(2, time_);
      }
      if (((bitField0_ & 0x00000004) != 0)) {
        output.writeInt32(3, timeZone_);
      }
      if (((bitField0_ & 0x00000008) != 0)) {
        output.writeInt32(4, interval_);
      }
      if (((bitField0_ & 0x00000010) != 0)) {
        output.writeInt32(5, steps_);
      }
      if (((bitField0_ & 0x00000020) != 0)) {
        output.writeInt32(6, active_);
      }
      if (((bitField0_ & 0x00000040) != 0)) {
        output.writeInt32(7, distance_);
      }
      if (((bitField0_ & 0x00000080) != 0)) {
        output.writeInt32(8, kcal_);
      }
      if (((bitField0_ & 0x00000100) != 0)) {
        output.writeInt32(9, kcalRest_);
      }
      if (((bitField0_ & 0x00000200) != 0)) {
        output.writeInt32(11, unknown1_);
      }
      if (((bitField0_ & 0x00000400) != 0)) {
        output.writeInt32(12, sleepTime_);
      }
      if (((bitField0_ & 0x00000800) != 0)) {
        output.writeInt32(13, sleepMode_);
      }
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(1, recordId_);
      }
      if (((bitField0_ & 0x00000002) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(2, time_);
      }
      if (((bitField0_ & 0x00000004) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(3, timeZone_);
      }
      if (((bitField0_ & 0x00000008) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(4, interval_);
      }
      if (((bitField0_ & 0x00000010) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(5, steps_);
      }
      if (((bitField0_ & 0x00000020) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(6, active_);
      }
      if (((bitField0_ & 0x00000040) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(7, distance_);
      }
      if (((bitField0_ & 0x00000080) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(8, kcal_);
      }
      if (((bitField0_ & 0x00000100) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(9, kcalRest_);
      }
      if (((bitField0_ & 0x00000200) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(11, unknown1_);
      }
      if (((bitField0_ & 0x00000400) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(12, sleepTime_);
      }
      if (((bitField0_ & 0x00000800) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(13, sleepMode_);
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof net.studioblueplanet.tomtomwatch.TrackerProto.TrackRecord)) {
        return super.equals(obj);
      }
      net.studioblueplanet.tomtomwatch.TrackerProto.TrackRecord other = (net.studioblueplanet.tomtomwatch.TrackerProto.TrackRecord) obj;

      if (hasRecordId() != other.hasRecordId()) return false;
      if (hasRecordId()) {
        if (getRecordId()
            != other.getRecordId()) return false;
      }
      if (hasTime() != other.hasTime()) return false;
      if (hasTime()) {
        if (getTime()
            != other.getTime()) return false;
      }
      if (hasTimeZone() != other.hasTimeZone()) return false;
      if (hasTimeZone()) {
        if (getTimeZone()
            != other.getTimeZone()) return false;
      }
      if (hasInterval() != other.hasInterval()) return false;
      if (hasInterval()) {
        if (getInterval()
            != other.getInterval()) return false;
      }
      if (hasSteps() != other.hasSteps()) return false;
      if (hasSteps()) {
        if (getSteps()
            != other.getSteps()) return false;
      }
      if (hasActive() != other.hasActive()) return false;
      if (hasActive()) {
        if (getActive()
            != other.getActive()) return false;
      }
      if (hasDistance() != other.hasDistance()) return false;
      if (hasDistance()) {
        if (getDistance()
            != other.getDistance()) return false;
      }
      if (hasKcal() != other.hasKcal()) return false;
      if (hasKcal()) {
        if (getKcal()
            != other.getKcal()) return false;
      }
      if (hasKcalRest() != other.hasKcalRest()) return false;
      if (hasKcalRest()) {
        if (getKcalRest()
            != other.getKcalRest()) return false;
      }
      if (hasUnknown1() != other.hasUnknown1()) return false;
      if (hasUnknown1()) {
        if (getUnknown1()
            != other.getUnknown1()) return false;
      }
      if (hasSleepTime() != other.hasSleepTime()) return false;
      if (hasSleepTime()) {
        if (getSleepTime()
            != other.getSleepTime()) return false;
      }
      if (hasSleepMode() != other.hasSleepMode()) return false;
      if (hasSleepMode()) {
        if (getSleepMode()
            != other.getSleepMode()) return false;
      }
      if (!unknownFields.equals(other.unknownFields)) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (hasRecordId()) {
        hash = (37 * hash) + RECORDID_FIELD_NUMBER;
        hash = (53 * hash) + getRecordId();
      }
      if (hasTime()) {
        hash = (37 * hash) + TIME_FIELD_NUMBER;
        hash = (53 * hash) + getTime();
      }
      if (hasTimeZone()) {
        hash = (37 * hash) + TIMEZONE_FIELD_NUMBER;
        hash = (53 * hash) + getTimeZone();
      }
      if (hasInterval()) {
        hash = (37 * hash) + INTERVAL_FIELD_NUMBER;
        hash = (53 * hash) + getInterval();
      }
      if (hasSteps()) {
        hash = (37 * hash) + STEPS_FIELD_NUMBER;
        hash = (53 * hash) + getSteps();
      }
      if (hasActive()) {
        hash = (37 * hash) + ACTIVE_FIELD_NUMBER;
        hash = (53 * hash) + getActive();
      }
      if (hasDistance()) {
        hash = (37 * hash) + DISTANCE_FIELD_NUMBER;
        hash = (53 * hash) + getDistance();
      }
      if (hasKcal()) {
        hash = (37 * hash) + KCAL_FIELD_NUMBER;
        hash = (53 * hash) + getKcal();
      }
      if (hasKcalRest()) {
        hash = (37 * hash) + KCALREST_FIELD_NUMBER;
        hash = (53 * hash) + getKcalRest();
      }
      if (hasUnknown1()) {
        hash = (37 * hash) + UNKNOWN1_FIELD_NUMBER;
        hash = (53 * hash) + getUnknown1();
      }
      if (hasSleepTime()) {
        hash = (37 * hash) + SLEEPTIME_FIELD_NUMBER;
        hash = (53 * hash) + getSleepTime();
      }
      if (hasSleepMode()) {
        hash = (37 * hash) + SLEEPMODE_FIELD_NUMBER;
        hash = (53 * hash) + getSleepMode();
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static net.studioblueplanet.tomtomwatch.TrackerProto.TrackRecord parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static net.studioblueplanet.tomtomwatch.TrackerProto.TrackRecord parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static net.studioblueplanet.tomtomwatch.TrackerProto.TrackRecord parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static net.studioblueplanet.tomtomwatch.TrackerProto.TrackRecord parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static net.studioblueplanet.tomtomwatch.TrackerProto.TrackRecord parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static net.studioblueplanet.tomtomwatch.TrackerProto.TrackRecord parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static net.studioblueplanet.tomtomwatch.TrackerProto.TrackRecord parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static net.studioblueplanet.tomtomwatch.TrackerProto.TrackRecord parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static net.studioblueplanet.tomtomwatch.TrackerProto.TrackRecord parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static net.studioblueplanet.tomtomwatch.TrackerProto.TrackRecord parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static net.studioblueplanet.tomtomwatch.TrackerProto.TrackRecord parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static net.studioblueplanet.tomtomwatch.TrackerProto.TrackRecord parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(net.studioblueplanet.tomtomwatch.TrackerProto.TrackRecord prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     *#################################################################################################
     * 4th level: Tracker Record
     *#################################################################################################
     * </pre>
     *
     * Protobuf type {@code tutorial.TrackRecord}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:tutorial.TrackRecord)
        net.studioblueplanet.tomtomwatch.TrackerProto.TrackRecordOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return net.studioblueplanet.tomtomwatch.TrackerProto.internal_static_tutorial_TrackRecord_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return net.studioblueplanet.tomtomwatch.TrackerProto.internal_static_tutorial_TrackRecord_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                net.studioblueplanet.tomtomwatch.TrackerProto.TrackRecord.class, net.studioblueplanet.tomtomwatch.TrackerProto.TrackRecord.Builder.class);
      }

      // Construct using net.studioblueplanet.tomtomwatch.TrackerProto.TrackRecord.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        recordId_ = 0;
        bitField0_ = (bitField0_ & ~0x00000001);
        time_ = 0;
        bitField0_ = (bitField0_ & ~0x00000002);
        timeZone_ = 0;
        bitField0_ = (bitField0_ & ~0x00000004);
        interval_ = 0;
        bitField0_ = (bitField0_ & ~0x00000008);
        steps_ = 0;
        bitField0_ = (bitField0_ & ~0x00000010);
        active_ = 0;
        bitField0_ = (bitField0_ & ~0x00000020);
        distance_ = 0;
        bitField0_ = (bitField0_ & ~0x00000040);
        kcal_ = 0;
        bitField0_ = (bitField0_ & ~0x00000080);
        kcalRest_ = 0;
        bitField0_ = (bitField0_ & ~0x00000100);
        unknown1_ = 0;
        bitField0_ = (bitField0_ & ~0x00000200);
        sleepTime_ = 0;
        bitField0_ = (bitField0_ & ~0x00000400);
        sleepMode_ = 0;
        bitField0_ = (bitField0_ & ~0x00000800);
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return net.studioblueplanet.tomtomwatch.TrackerProto.internal_static_tutorial_TrackRecord_descriptor;
      }

      @java.lang.Override
      public net.studioblueplanet.tomtomwatch.TrackerProto.TrackRecord getDefaultInstanceForType() {
        return net.studioblueplanet.tomtomwatch.TrackerProto.TrackRecord.getDefaultInstance();
      }

      @java.lang.Override
      public net.studioblueplanet.tomtomwatch.TrackerProto.TrackRecord build() {
        net.studioblueplanet.tomtomwatch.TrackerProto.TrackRecord result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public net.studioblueplanet.tomtomwatch.TrackerProto.TrackRecord buildPartial() {
        net.studioblueplanet.tomtomwatch.TrackerProto.TrackRecord result = new net.studioblueplanet.tomtomwatch.TrackerProto.TrackRecord(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) != 0)) {
          result.recordId_ = recordId_;
          to_bitField0_ |= 0x00000001;
        }
        if (((from_bitField0_ & 0x00000002) != 0)) {
          result.time_ = time_;
          to_bitField0_ |= 0x00000002;
        }
        if (((from_bitField0_ & 0x00000004) != 0)) {
          result.timeZone_ = timeZone_;
          to_bitField0_ |= 0x00000004;
        }
        if (((from_bitField0_ & 0x00000008) != 0)) {
          result.interval_ = interval_;
          to_bitField0_ |= 0x00000008;
        }
        if (((from_bitField0_ & 0x00000010) != 0)) {
          result.steps_ = steps_;
          to_bitField0_ |= 0x00000010;
        }
        if (((from_bitField0_ & 0x00000020) != 0)) {
          result.active_ = active_;
          to_bitField0_ |= 0x00000020;
        }
        if (((from_bitField0_ & 0x00000040) != 0)) {
          result.distance_ = distance_;
          to_bitField0_ |= 0x00000040;
        }
        if (((from_bitField0_ & 0x00000080) != 0)) {
          result.kcal_ = kcal_;
          to_bitField0_ |= 0x00000080;
        }
        if (((from_bitField0_ & 0x00000100) != 0)) {
          result.kcalRest_ = kcalRest_;
          to_bitField0_ |= 0x00000100;
        }
        if (((from_bitField0_ & 0x00000200) != 0)) {
          result.unknown1_ = unknown1_;
          to_bitField0_ |= 0x00000200;
        }
        if (((from_bitField0_ & 0x00000400) != 0)) {
          result.sleepTime_ = sleepTime_;
          to_bitField0_ |= 0x00000400;
        }
        if (((from_bitField0_ & 0x00000800) != 0)) {
          result.sleepMode_ = sleepMode_;
          to_bitField0_ |= 0x00000800;
        }
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof net.studioblueplanet.tomtomwatch.TrackerProto.TrackRecord) {
          return mergeFrom((net.studioblueplanet.tomtomwatch.TrackerProto.TrackRecord)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(net.studioblueplanet.tomtomwatch.TrackerProto.TrackRecord other) {
        if (other == net.studioblueplanet.tomtomwatch.TrackerProto.TrackRecord.getDefaultInstance()) return this;
        if (other.hasRecordId()) {
          setRecordId(other.getRecordId());
        }
        if (other.hasTime()) {
          setTime(other.getTime());
        }
        if (other.hasTimeZone()) {
          setTimeZone(other.getTimeZone());
        }
        if (other.hasInterval()) {
          setInterval(other.getInterval());
        }
        if (other.hasSteps()) {
          setSteps(other.getSteps());
        }
        if (other.hasActive()) {
          setActive(other.getActive());
        }
        if (other.hasDistance()) {
          setDistance(other.getDistance());
        }
        if (other.hasKcal()) {
          setKcal(other.getKcal());
        }
        if (other.hasKcalRest()) {
          setKcalRest(other.getKcalRest());
        }
        if (other.hasUnknown1()) {
          setUnknown1(other.getUnknown1());
        }
        if (other.hasSleepTime()) {
          setSleepTime(other.getSleepTime());
        }
        if (other.hasSleepMode()) {
          setSleepMode(other.getSleepMode());
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        if (!hasRecordId()) {
          return false;
        }
        if (!hasTime()) {
          return false;
        }
        if (!hasTimeZone()) {
          return false;
        }
        if (!hasInterval()) {
          return false;
        }
        if (!hasSteps()) {
          return false;
        }
        if (!hasActive()) {
          return false;
        }
        if (!hasDistance()) {
          return false;
        }
        if (!hasKcal()) {
          return false;
        }
        if (!hasKcalRest()) {
          return false;
        }
        if (!hasUnknown1()) {
          return false;
        }
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        net.studioblueplanet.tomtomwatch.TrackerProto.TrackRecord parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (net.studioblueplanet.tomtomwatch.TrackerProto.TrackRecord) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private int recordId_ ;
      /**
       * <code>required int32 recordId = 1;</code>
       */
      public boolean hasRecordId() {
        return ((bitField0_ & 0x00000001) != 0);
      }
      /**
       * <code>required int32 recordId = 1;</code>
       */
      public int getRecordId() {
        return recordId_;
      }
      /**
       * <code>required int32 recordId = 1;</code>
       */
      public Builder setRecordId(int value) {
        bitField0_ |= 0x00000001;
        recordId_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required int32 recordId = 1;</code>
       */
      public Builder clearRecordId() {
        bitField0_ = (bitField0_ & ~0x00000001);
        recordId_ = 0;
        onChanged();
        return this;
      }

      private int time_ ;
      /**
       * <pre>
       * Epoch time in seconds, 900 s interval = 15 min
       * </pre>
       *
       * <code>required int32 time = 2;</code>
       */
      public boolean hasTime() {
        return ((bitField0_ & 0x00000002) != 0);
      }
      /**
       * <pre>
       * Epoch time in seconds, 900 s interval = 15 min
       * </pre>
       *
       * <code>required int32 time = 2;</code>
       */
      public int getTime() {
        return time_;
      }
      /**
       * <pre>
       * Epoch time in seconds, 900 s interval = 15 min
       * </pre>
       *
       * <code>required int32 time = 2;</code>
       */
      public Builder setTime(int value) {
        bitField0_ |= 0x00000002;
        time_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Epoch time in seconds, 900 s interval = 15 min
       * </pre>
       *
       * <code>required int32 time = 2;</code>
       */
      public Builder clearTime() {
        bitField0_ = (bitField0_ & ~0x00000002);
        time_ = 0;
        onChanged();
        return this;
      }

      private int timeZone_ ;
      /**
       * <pre>
       * Difference between time and UTC in seconds (?)
       * </pre>
       *
       * <code>required int32 timeZone = 3;</code>
       */
      public boolean hasTimeZone() {
        return ((bitField0_ & 0x00000004) != 0);
      }
      /**
       * <pre>
       * Difference between time and UTC in seconds (?)
       * </pre>
       *
       * <code>required int32 timeZone = 3;</code>
       */
      public int getTimeZone() {
        return timeZone_;
      }
      /**
       * <pre>
       * Difference between time and UTC in seconds (?)
       * </pre>
       *
       * <code>required int32 timeZone = 3;</code>
       */
      public Builder setTimeZone(int value) {
        bitField0_ |= 0x00000004;
        timeZone_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Difference between time and UTC in seconds (?)
       * </pre>
       *
       * <code>required int32 timeZone = 3;</code>
       */
      public Builder clearTimeZone() {
        bitField0_ = (bitField0_ & ~0x00000004);
        timeZone_ = 0;
        onChanged();
        return this;
      }

      private int interval_ ;
      /**
       * <pre>
       * Interval of this measurement = 900s often     
       * </pre>
       *
       * <code>required int32 interval = 4;</code>
       */
      public boolean hasInterval() {
        return ((bitField0_ & 0x00000008) != 0);
      }
      /**
       * <pre>
       * Interval of this measurement = 900s often     
       * </pre>
       *
       * <code>required int32 interval = 4;</code>
       */
      public int getInterval() {
        return interval_;
      }
      /**
       * <pre>
       * Interval of this measurement = 900s often     
       * </pre>
       *
       * <code>required int32 interval = 4;</code>
       */
      public Builder setInterval(int value) {
        bitField0_ |= 0x00000008;
        interval_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Interval of this measurement = 900s often     
       * </pre>
       *
       * <code>required int32 interval = 4;</code>
       */
      public Builder clearInterval() {
        bitField0_ = (bitField0_ & ~0x00000008);
        interval_ = 0;
        onChanged();
        return this;
      }

      private int steps_ ;
      /**
       * <pre>
       * steps
       * </pre>
       *
       * <code>required int32 steps = 5;</code>
       */
      public boolean hasSteps() {
        return ((bitField0_ & 0x00000010) != 0);
      }
      /**
       * <pre>
       * steps
       * </pre>
       *
       * <code>required int32 steps = 5;</code>
       */
      public int getSteps() {
        return steps_;
      }
      /**
       * <pre>
       * steps
       * </pre>
       *
       * <code>required int32 steps = 5;</code>
       */
      public Builder setSteps(int value) {
        bitField0_ |= 0x00000010;
        steps_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * steps
       * </pre>
       *
       * <code>required int32 steps = 5;</code>
       */
      public Builder clearSteps() {
        bitField0_ = (bitField0_ & ~0x00000010);
        steps_ = 0;
        onChanged();
        return this;
      }

      private int active_ ;
      /**
       * <pre>
       * active time in seconds
       * </pre>
       *
       * <code>required int32 active = 6;</code>
       */
      public boolean hasActive() {
        return ((bitField0_ & 0x00000020) != 0);
      }
      /**
       * <pre>
       * active time in seconds
       * </pre>
       *
       * <code>required int32 active = 6;</code>
       */
      public int getActive() {
        return active_;
      }
      /**
       * <pre>
       * active time in seconds
       * </pre>
       *
       * <code>required int32 active = 6;</code>
       */
      public Builder setActive(int value) {
        bitField0_ |= 0x00000020;
        active_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * active time in seconds
       * </pre>
       *
       * <code>required int32 active = 6;</code>
       */
      public Builder clearActive() {
        bitField0_ = (bitField0_ & ~0x00000020);
        active_ = 0;
        onChanged();
        return this;
      }

      private int distance_ ;
      /**
       * <pre>
       * distance in m
       * </pre>
       *
       * <code>required int32 distance = 7;</code>
       */
      public boolean hasDistance() {
        return ((bitField0_ & 0x00000040) != 0);
      }
      /**
       * <pre>
       * distance in m
       * </pre>
       *
       * <code>required int32 distance = 7;</code>
       */
      public int getDistance() {
        return distance_;
      }
      /**
       * <pre>
       * distance in m
       * </pre>
       *
       * <code>required int32 distance = 7;</code>
       */
      public Builder setDistance(int value) {
        bitField0_ |= 0x00000040;
        distance_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * distance in m
       * </pre>
       *
       * <code>required int32 distance = 7;</code>
       */
      public Builder clearDistance() {
        bitField0_ = (bitField0_ & ~0x00000040);
        distance_ = 0;
        onChanged();
        return this;
      }

      private int kcal_ ;
      /**
       * <pre>
       * kcal
       * </pre>
       *
       * <code>required int32 kcal = 8;</code>
       */
      public boolean hasKcal() {
        return ((bitField0_ & 0x00000080) != 0);
      }
      /**
       * <pre>
       * kcal
       * </pre>
       *
       * <code>required int32 kcal = 8;</code>
       */
      public int getKcal() {
        return kcal_;
      }
      /**
       * <pre>
       * kcal
       * </pre>
       *
       * <code>required int32 kcal = 8;</code>
       */
      public Builder setKcal(int value) {
        bitField0_ |= 0x00000080;
        kcal_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * kcal
       * </pre>
       *
       * <code>required int32 kcal = 8;</code>
       */
      public Builder clearKcal() {
        bitField0_ = (bitField0_ & ~0x00000080);
        kcal_ = 0;
        onChanged();
        return this;
      }

      private int kcalRest_ ;
      /**
       * <pre>
       * kcal in rest? (~12 kcal/10 min) 
       * </pre>
       *
       * <code>required int32 kcalRest = 9;</code>
       */
      public boolean hasKcalRest() {
        return ((bitField0_ & 0x00000100) != 0);
      }
      /**
       * <pre>
       * kcal in rest? (~12 kcal/10 min) 
       * </pre>
       *
       * <code>required int32 kcalRest = 9;</code>
       */
      public int getKcalRest() {
        return kcalRest_;
      }
      /**
       * <pre>
       * kcal in rest? (~12 kcal/10 min) 
       * </pre>
       *
       * <code>required int32 kcalRest = 9;</code>
       */
      public Builder setKcalRest(int value) {
        bitField0_ |= 0x00000100;
        kcalRest_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * kcal in rest? (~12 kcal/10 min) 
       * </pre>
       *
       * <code>required int32 kcalRest = 9;</code>
       */
      public Builder clearKcalRest() {
        bitField0_ = (bitField0_ & ~0x00000100);
        kcalRest_ = 0;
        onChanged();
        return this;
      }

      private int unknown1_ ;
      /**
       * <pre>
       * 0
       * </pre>
       *
       * <code>required int32 unknown1 = 11;</code>
       */
      public boolean hasUnknown1() {
        return ((bitField0_ & 0x00000200) != 0);
      }
      /**
       * <pre>
       * 0
       * </pre>
       *
       * <code>required int32 unknown1 = 11;</code>
       */
      public int getUnknown1() {
        return unknown1_;
      }
      /**
       * <pre>
       * 0
       * </pre>
       *
       * <code>required int32 unknown1 = 11;</code>
       */
      public Builder setUnknown1(int value) {
        bitField0_ |= 0x00000200;
        unknown1_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * 0
       * </pre>
       *
       * <code>required int32 unknown1 = 11;</code>
       */
      public Builder clearUnknown1() {
        bitField0_ = (bitField0_ & ~0x00000200);
        unknown1_ = 0;
        onChanged();
        return this;
      }

      private int sleepTime_ ;
      /**
       * <pre>
       * sleep time in seconds. 
       * </pre>
       *
       * <code>optional int32 sleepTime = 12;</code>
       */
      public boolean hasSleepTime() {
        return ((bitField0_ & 0x00000400) != 0);
      }
      /**
       * <pre>
       * sleep time in seconds. 
       * </pre>
       *
       * <code>optional int32 sleepTime = 12;</code>
       */
      public int getSleepTime() {
        return sleepTime_;
      }
      /**
       * <pre>
       * sleep time in seconds. 
       * </pre>
       *
       * <code>optional int32 sleepTime = 12;</code>
       */
      public Builder setSleepTime(int value) {
        bitField0_ |= 0x00000400;
        sleepTime_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * sleep time in seconds. 
       * </pre>
       *
       * <code>optional int32 sleepTime = 12;</code>
       */
      public Builder clearSleepTime() {
        bitField0_ = (bitField0_ & ~0x00000400);
        sleepTime_ = 0;
        onChanged();
        return this;
      }

      private int sleepMode_ ;
      /**
       * <pre>
       * 1: active, 2: charging? 3: 1st hour sleep 4: sleep
       * </pre>
       *
       * <code>optional int32 sleepMode = 13;</code>
       */
      public boolean hasSleepMode() {
        return ((bitField0_ & 0x00000800) != 0);
      }
      /**
       * <pre>
       * 1: active, 2: charging? 3: 1st hour sleep 4: sleep
       * </pre>
       *
       * <code>optional int32 sleepMode = 13;</code>
       */
      public int getSleepMode() {
        return sleepMode_;
      }
      /**
       * <pre>
       * 1: active, 2: charging? 3: 1st hour sleep 4: sleep
       * </pre>
       *
       * <code>optional int32 sleepMode = 13;</code>
       */
      public Builder setSleepMode(int value) {
        bitField0_ |= 0x00000800;
        sleepMode_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * 1: active, 2: charging? 3: 1st hour sleep 4: sleep
       * </pre>
       *
       * <code>optional int32 sleepMode = 13;</code>
       */
      public Builder clearSleepMode() {
        bitField0_ = (bitField0_ & ~0x00000800);
        sleepMode_ = 0;
        onChanged();
        return this;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:tutorial.TrackRecord)
    }

    // @@protoc_insertion_point(class_scope:tutorial.TrackRecord)
    private static final net.studioblueplanet.tomtomwatch.TrackerProto.TrackRecord DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new net.studioblueplanet.tomtomwatch.TrackerProto.TrackRecord();
    }

    public static net.studioblueplanet.tomtomwatch.TrackerProto.TrackRecord getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    @java.lang.Deprecated public static final com.google.protobuf.Parser<TrackRecord>
        PARSER = new com.google.protobuf.AbstractParser<TrackRecord>() {
      @java.lang.Override
      public TrackRecord parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new TrackRecord(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<TrackRecord> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<TrackRecord> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public net.studioblueplanet.tomtomwatch.TrackerProto.TrackRecord getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface Record2OrBuilder extends
      // @@protoc_insertion_point(interface_extends:tutorial.Record2)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     * Epoch time in seconds, 900 s interval = 15 min
     * </pre>
     *
     * <code>required fixed32 time = 1;</code>
     */
    boolean hasTime();
    /**
     * <pre>
     * Epoch time in seconds, 900 s interval = 15 min
     * </pre>
     *
     * <code>required fixed32 time = 1;</code>
     */
    int getTime();

    /**
     * <pre>
     * Interval in seconds? 14400=4h
     * </pre>
     *
     * <code>required int32 interval = 2;</code>
     */
    boolean hasInterval();
    /**
     * <pre>
     * Interval in seconds? 14400=4h
     * </pre>
     *
     * <code>required int32 interval = 2;</code>
     */
    int getInterval();

    /**
     * <code>repeated .tutorial.TagValueContainer tagValue = 3;</code>
     */
    java.util.List<net.studioblueplanet.tomtomwatch.TrackerProto.TagValueContainer> 
        getTagValueList();
    /**
     * <code>repeated .tutorial.TagValueContainer tagValue = 3;</code>
     */
    net.studioblueplanet.tomtomwatch.TrackerProto.TagValueContainer getTagValue(int index);
    /**
     * <code>repeated .tutorial.TagValueContainer tagValue = 3;</code>
     */
    int getTagValueCount();
    /**
     * <code>repeated .tutorial.TagValueContainer tagValue = 3;</code>
     */
    java.util.List<? extends net.studioblueplanet.tomtomwatch.TrackerProto.TagValueContainerOrBuilder> 
        getTagValueOrBuilderList();
    /**
     * <code>repeated .tutorial.TagValueContainer tagValue = 3;</code>
     */
    net.studioblueplanet.tomtomwatch.TrackerProto.TagValueContainerOrBuilder getTagValueOrBuilder(
        int index);

    /**
     * <code>required int32 unknown1 = 4;</code>
     */
    boolean hasUnknown1();
    /**
     * <code>required int32 unknown1 = 4;</code>
     */
    int getUnknown1();

    /**
     * <code>required int32 unknown2 = 5;</code>
     */
    boolean hasUnknown2();
    /**
     * <code>required int32 unknown2 = 5;</code>
     */
    int getUnknown2();

    /**
     * <code>optional int32 unknown3 = 6;</code>
     */
    boolean hasUnknown3();
    /**
     * <code>optional int32 unknown3 = 6;</code>
     */
    int getUnknown3();

    /**
     * <pre>
     * 1.6.26
     * </pre>
     *
     * <code>optional fixed32 unknown4 = 104;</code>
     */
    boolean hasUnknown4();
    /**
     * <pre>
     * 1.6.26
     * </pre>
     *
     * <code>optional fixed32 unknown4 = 104;</code>
     */
    int getUnknown4();
  }
  /**
   * Protobuf type {@code tutorial.Record2}
   */
  public  static final class Record2 extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:tutorial.Record2)
      Record2OrBuilder {
  private static final long serialVersionUID = 0L;
    // Use Record2.newBuilder() to construct.
    private Record2(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private Record2() {
      tagValue_ = java.util.Collections.emptyList();
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new Record2();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private Record2(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 13: {
              bitField0_ |= 0x00000001;
              time_ = input.readFixed32();
              break;
            }
            case 16: {
              bitField0_ |= 0x00000002;
              interval_ = input.readInt32();
              break;
            }
            case 26: {
              if (!((mutable_bitField0_ & 0x00000004) != 0)) {
                tagValue_ = new java.util.ArrayList<net.studioblueplanet.tomtomwatch.TrackerProto.TagValueContainer>();
                mutable_bitField0_ |= 0x00000004;
              }
              tagValue_.add(
                  input.readMessage(net.studioblueplanet.tomtomwatch.TrackerProto.TagValueContainer.PARSER, extensionRegistry));
              break;
            }
            case 32: {
              bitField0_ |= 0x00000004;
              unknown1_ = input.readInt32();
              break;
            }
            case 40: {
              bitField0_ |= 0x00000008;
              unknown2_ = input.readInt32();
              break;
            }
            case 48: {
              bitField0_ |= 0x00000010;
              unknown3_ = input.readInt32();
              break;
            }
            case 837: {
              bitField0_ |= 0x00000020;
              unknown4_ = input.readFixed32();
              break;
            }
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000004) != 0)) {
          tagValue_ = java.util.Collections.unmodifiableList(tagValue_);
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return net.studioblueplanet.tomtomwatch.TrackerProto.internal_static_tutorial_Record2_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return net.studioblueplanet.tomtomwatch.TrackerProto.internal_static_tutorial_Record2_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              net.studioblueplanet.tomtomwatch.TrackerProto.Record2.class, net.studioblueplanet.tomtomwatch.TrackerProto.Record2.Builder.class);
    }

    private int bitField0_;
    public static final int TIME_FIELD_NUMBER = 1;
    private int time_;
    /**
     * <pre>
     * Epoch time in seconds, 900 s interval = 15 min
     * </pre>
     *
     * <code>required fixed32 time = 1;</code>
     */
    public boolean hasTime() {
      return ((bitField0_ & 0x00000001) != 0);
    }
    /**
     * <pre>
     * Epoch time in seconds, 900 s interval = 15 min
     * </pre>
     *
     * <code>required fixed32 time = 1;</code>
     */
    public int getTime() {
      return time_;
    }

    public static final int INTERVAL_FIELD_NUMBER = 2;
    private int interval_;
    /**
     * <pre>
     * Interval in seconds? 14400=4h
     * </pre>
     *
     * <code>required int32 interval = 2;</code>
     */
    public boolean hasInterval() {
      return ((bitField0_ & 0x00000002) != 0);
    }
    /**
     * <pre>
     * Interval in seconds? 14400=4h
     * </pre>
     *
     * <code>required int32 interval = 2;</code>
     */
    public int getInterval() {
      return interval_;
    }

    public static final int TAGVALUE_FIELD_NUMBER = 3;
    private java.util.List<net.studioblueplanet.tomtomwatch.TrackerProto.TagValueContainer> tagValue_;
    /**
     * <code>repeated .tutorial.TagValueContainer tagValue = 3;</code>
     */
    public java.util.List<net.studioblueplanet.tomtomwatch.TrackerProto.TagValueContainer> getTagValueList() {
      return tagValue_;
    }
    /**
     * <code>repeated .tutorial.TagValueContainer tagValue = 3;</code>
     */
    public java.util.List<? extends net.studioblueplanet.tomtomwatch.TrackerProto.TagValueContainerOrBuilder> 
        getTagValueOrBuilderList() {
      return tagValue_;
    }
    /**
     * <code>repeated .tutorial.TagValueContainer tagValue = 3;</code>
     */
    public int getTagValueCount() {
      return tagValue_.size();
    }
    /**
     * <code>repeated .tutorial.TagValueContainer tagValue = 3;</code>
     */
    public net.studioblueplanet.tomtomwatch.TrackerProto.TagValueContainer getTagValue(int index) {
      return tagValue_.get(index);
    }
    /**
     * <code>repeated .tutorial.TagValueContainer tagValue = 3;</code>
     */
    public net.studioblueplanet.tomtomwatch.TrackerProto.TagValueContainerOrBuilder getTagValueOrBuilder(
        int index) {
      return tagValue_.get(index);
    }

    public static final int UNKNOWN1_FIELD_NUMBER = 4;
    private int unknown1_;
    /**
     * <code>required int32 unknown1 = 4;</code>
     */
    public boolean hasUnknown1() {
      return ((bitField0_ & 0x00000004) != 0);
    }
    /**
     * <code>required int32 unknown1 = 4;</code>
     */
    public int getUnknown1() {
      return unknown1_;
    }

    public static final int UNKNOWN2_FIELD_NUMBER = 5;
    private int unknown2_;
    /**
     * <code>required int32 unknown2 = 5;</code>
     */
    public boolean hasUnknown2() {
      return ((bitField0_ & 0x00000008) != 0);
    }
    /**
     * <code>required int32 unknown2 = 5;</code>
     */
    public int getUnknown2() {
      return unknown2_;
    }

    public static final int UNKNOWN3_FIELD_NUMBER = 6;
    private int unknown3_;
    /**
     * <code>optional int32 unknown3 = 6;</code>
     */
    public boolean hasUnknown3() {
      return ((bitField0_ & 0x00000010) != 0);
    }
    /**
     * <code>optional int32 unknown3 = 6;</code>
     */
    public int getUnknown3() {
      return unknown3_;
    }

    public static final int UNKNOWN4_FIELD_NUMBER = 104;
    private int unknown4_;
    /**
     * <pre>
     * 1.6.26
     * </pre>
     *
     * <code>optional fixed32 unknown4 = 104;</code>
     */
    public boolean hasUnknown4() {
      return ((bitField0_ & 0x00000020) != 0);
    }
    /**
     * <pre>
     * 1.6.26
     * </pre>
     *
     * <code>optional fixed32 unknown4 = 104;</code>
     */
    public int getUnknown4() {
      return unknown4_;
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      if (!hasTime()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasInterval()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasUnknown1()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasUnknown2()) {
        memoizedIsInitialized = 0;
        return false;
      }
      for (int i = 0; i < getTagValueCount(); i++) {
        if (!getTagValue(i).isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (((bitField0_ & 0x00000001) != 0)) {
        output.writeFixed32(1, time_);
      }
      if (((bitField0_ & 0x00000002) != 0)) {
        output.writeInt32(2, interval_);
      }
      for (int i = 0; i < tagValue_.size(); i++) {
        output.writeMessage(3, tagValue_.get(i));
      }
      if (((bitField0_ & 0x00000004) != 0)) {
        output.writeInt32(4, unknown1_);
      }
      if (((bitField0_ & 0x00000008) != 0)) {
        output.writeInt32(5, unknown2_);
      }
      if (((bitField0_ & 0x00000010) != 0)) {
        output.writeInt32(6, unknown3_);
      }
      if (((bitField0_ & 0x00000020) != 0)) {
        output.writeFixed32(104, unknown4_);
      }
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeFixed32Size(1, time_);
      }
      if (((bitField0_ & 0x00000002) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(2, interval_);
      }
      for (int i = 0; i < tagValue_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(3, tagValue_.get(i));
      }
      if (((bitField0_ & 0x00000004) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(4, unknown1_);
      }
      if (((bitField0_ & 0x00000008) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(5, unknown2_);
      }
      if (((bitField0_ & 0x00000010) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(6, unknown3_);
      }
      if (((bitField0_ & 0x00000020) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeFixed32Size(104, unknown4_);
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof net.studioblueplanet.tomtomwatch.TrackerProto.Record2)) {
        return super.equals(obj);
      }
      net.studioblueplanet.tomtomwatch.TrackerProto.Record2 other = (net.studioblueplanet.tomtomwatch.TrackerProto.Record2) obj;

      if (hasTime() != other.hasTime()) return false;
      if (hasTime()) {
        if (getTime()
            != other.getTime()) return false;
      }
      if (hasInterval() != other.hasInterval()) return false;
      if (hasInterval()) {
        if (getInterval()
            != other.getInterval()) return false;
      }
      if (!getTagValueList()
          .equals(other.getTagValueList())) return false;
      if (hasUnknown1() != other.hasUnknown1()) return false;
      if (hasUnknown1()) {
        if (getUnknown1()
            != other.getUnknown1()) return false;
      }
      if (hasUnknown2() != other.hasUnknown2()) return false;
      if (hasUnknown2()) {
        if (getUnknown2()
            != other.getUnknown2()) return false;
      }
      if (hasUnknown3() != other.hasUnknown3()) return false;
      if (hasUnknown3()) {
        if (getUnknown3()
            != other.getUnknown3()) return false;
      }
      if (hasUnknown4() != other.hasUnknown4()) return false;
      if (hasUnknown4()) {
        if (getUnknown4()
            != other.getUnknown4()) return false;
      }
      if (!unknownFields.equals(other.unknownFields)) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (hasTime()) {
        hash = (37 * hash) + TIME_FIELD_NUMBER;
        hash = (53 * hash) + getTime();
      }
      if (hasInterval()) {
        hash = (37 * hash) + INTERVAL_FIELD_NUMBER;
        hash = (53 * hash) + getInterval();
      }
      if (getTagValueCount() > 0) {
        hash = (37 * hash) + TAGVALUE_FIELD_NUMBER;
        hash = (53 * hash) + getTagValueList().hashCode();
      }
      if (hasUnknown1()) {
        hash = (37 * hash) + UNKNOWN1_FIELD_NUMBER;
        hash = (53 * hash) + getUnknown1();
      }
      if (hasUnknown2()) {
        hash = (37 * hash) + UNKNOWN2_FIELD_NUMBER;
        hash = (53 * hash) + getUnknown2();
      }
      if (hasUnknown3()) {
        hash = (37 * hash) + UNKNOWN3_FIELD_NUMBER;
        hash = (53 * hash) + getUnknown3();
      }
      if (hasUnknown4()) {
        hash = (37 * hash) + UNKNOWN4_FIELD_NUMBER;
        hash = (53 * hash) + getUnknown4();
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static net.studioblueplanet.tomtomwatch.TrackerProto.Record2 parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static net.studioblueplanet.tomtomwatch.TrackerProto.Record2 parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static net.studioblueplanet.tomtomwatch.TrackerProto.Record2 parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static net.studioblueplanet.tomtomwatch.TrackerProto.Record2 parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static net.studioblueplanet.tomtomwatch.TrackerProto.Record2 parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static net.studioblueplanet.tomtomwatch.TrackerProto.Record2 parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static net.studioblueplanet.tomtomwatch.TrackerProto.Record2 parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static net.studioblueplanet.tomtomwatch.TrackerProto.Record2 parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static net.studioblueplanet.tomtomwatch.TrackerProto.Record2 parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static net.studioblueplanet.tomtomwatch.TrackerProto.Record2 parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static net.studioblueplanet.tomtomwatch.TrackerProto.Record2 parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static net.studioblueplanet.tomtomwatch.TrackerProto.Record2 parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(net.studioblueplanet.tomtomwatch.TrackerProto.Record2 prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code tutorial.Record2}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:tutorial.Record2)
        net.studioblueplanet.tomtomwatch.TrackerProto.Record2OrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return net.studioblueplanet.tomtomwatch.TrackerProto.internal_static_tutorial_Record2_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return net.studioblueplanet.tomtomwatch.TrackerProto.internal_static_tutorial_Record2_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                net.studioblueplanet.tomtomwatch.TrackerProto.Record2.class, net.studioblueplanet.tomtomwatch.TrackerProto.Record2.Builder.class);
      }

      // Construct using net.studioblueplanet.tomtomwatch.TrackerProto.Record2.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
          getTagValueFieldBuilder();
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        time_ = 0;
        bitField0_ = (bitField0_ & ~0x00000001);
        interval_ = 0;
        bitField0_ = (bitField0_ & ~0x00000002);
        if (tagValueBuilder_ == null) {
          tagValue_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000004);
        } else {
          tagValueBuilder_.clear();
        }
        unknown1_ = 0;
        bitField0_ = (bitField0_ & ~0x00000008);
        unknown2_ = 0;
        bitField0_ = (bitField0_ & ~0x00000010);
        unknown3_ = 0;
        bitField0_ = (bitField0_ & ~0x00000020);
        unknown4_ = 0;
        bitField0_ = (bitField0_ & ~0x00000040);
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return net.studioblueplanet.tomtomwatch.TrackerProto.internal_static_tutorial_Record2_descriptor;
      }

      @java.lang.Override
      public net.studioblueplanet.tomtomwatch.TrackerProto.Record2 getDefaultInstanceForType() {
        return net.studioblueplanet.tomtomwatch.TrackerProto.Record2.getDefaultInstance();
      }

      @java.lang.Override
      public net.studioblueplanet.tomtomwatch.TrackerProto.Record2 build() {
        net.studioblueplanet.tomtomwatch.TrackerProto.Record2 result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public net.studioblueplanet.tomtomwatch.TrackerProto.Record2 buildPartial() {
        net.studioblueplanet.tomtomwatch.TrackerProto.Record2 result = new net.studioblueplanet.tomtomwatch.TrackerProto.Record2(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) != 0)) {
          result.time_ = time_;
          to_bitField0_ |= 0x00000001;
        }
        if (((from_bitField0_ & 0x00000002) != 0)) {
          result.interval_ = interval_;
          to_bitField0_ |= 0x00000002;
        }
        if (tagValueBuilder_ == null) {
          if (((bitField0_ & 0x00000004) != 0)) {
            tagValue_ = java.util.Collections.unmodifiableList(tagValue_);
            bitField0_ = (bitField0_ & ~0x00000004);
          }
          result.tagValue_ = tagValue_;
        } else {
          result.tagValue_ = tagValueBuilder_.build();
        }
        if (((from_bitField0_ & 0x00000008) != 0)) {
          result.unknown1_ = unknown1_;
          to_bitField0_ |= 0x00000004;
        }
        if (((from_bitField0_ & 0x00000010) != 0)) {
          result.unknown2_ = unknown2_;
          to_bitField0_ |= 0x00000008;
        }
        if (((from_bitField0_ & 0x00000020) != 0)) {
          result.unknown3_ = unknown3_;
          to_bitField0_ |= 0x00000010;
        }
        if (((from_bitField0_ & 0x00000040) != 0)) {
          result.unknown4_ = unknown4_;
          to_bitField0_ |= 0x00000020;
        }
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof net.studioblueplanet.tomtomwatch.TrackerProto.Record2) {
          return mergeFrom((net.studioblueplanet.tomtomwatch.TrackerProto.Record2)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(net.studioblueplanet.tomtomwatch.TrackerProto.Record2 other) {
        if (other == net.studioblueplanet.tomtomwatch.TrackerProto.Record2.getDefaultInstance()) return this;
        if (other.hasTime()) {
          setTime(other.getTime());
        }
        if (other.hasInterval()) {
          setInterval(other.getInterval());
        }
        if (tagValueBuilder_ == null) {
          if (!other.tagValue_.isEmpty()) {
            if (tagValue_.isEmpty()) {
              tagValue_ = other.tagValue_;
              bitField0_ = (bitField0_ & ~0x00000004);
            } else {
              ensureTagValueIsMutable();
              tagValue_.addAll(other.tagValue_);
            }
            onChanged();
          }
        } else {
          if (!other.tagValue_.isEmpty()) {
            if (tagValueBuilder_.isEmpty()) {
              tagValueBuilder_.dispose();
              tagValueBuilder_ = null;
              tagValue_ = other.tagValue_;
              bitField0_ = (bitField0_ & ~0x00000004);
              tagValueBuilder_ = 
                com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                   getTagValueFieldBuilder() : null;
            } else {
              tagValueBuilder_.addAllMessages(other.tagValue_);
            }
          }
        }
        if (other.hasUnknown1()) {
          setUnknown1(other.getUnknown1());
        }
        if (other.hasUnknown2()) {
          setUnknown2(other.getUnknown2());
        }
        if (other.hasUnknown3()) {
          setUnknown3(other.getUnknown3());
        }
        if (other.hasUnknown4()) {
          setUnknown4(other.getUnknown4());
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        if (!hasTime()) {
          return false;
        }
        if (!hasInterval()) {
          return false;
        }
        if (!hasUnknown1()) {
          return false;
        }
        if (!hasUnknown2()) {
          return false;
        }
        for (int i = 0; i < getTagValueCount(); i++) {
          if (!getTagValue(i).isInitialized()) {
            return false;
          }
        }
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        net.studioblueplanet.tomtomwatch.TrackerProto.Record2 parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (net.studioblueplanet.tomtomwatch.TrackerProto.Record2) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private int time_ ;
      /**
       * <pre>
       * Epoch time in seconds, 900 s interval = 15 min
       * </pre>
       *
       * <code>required fixed32 time = 1;</code>
       */
      public boolean hasTime() {
        return ((bitField0_ & 0x00000001) != 0);
      }
      /**
       * <pre>
       * Epoch time in seconds, 900 s interval = 15 min
       * </pre>
       *
       * <code>required fixed32 time = 1;</code>
       */
      public int getTime() {
        return time_;
      }
      /**
       * <pre>
       * Epoch time in seconds, 900 s interval = 15 min
       * </pre>
       *
       * <code>required fixed32 time = 1;</code>
       */
      public Builder setTime(int value) {
        bitField0_ |= 0x00000001;
        time_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Epoch time in seconds, 900 s interval = 15 min
       * </pre>
       *
       * <code>required fixed32 time = 1;</code>
       */
      public Builder clearTime() {
        bitField0_ = (bitField0_ & ~0x00000001);
        time_ = 0;
        onChanged();
        return this;
      }

      private int interval_ ;
      /**
       * <pre>
       * Interval in seconds? 14400=4h
       * </pre>
       *
       * <code>required int32 interval = 2;</code>
       */
      public boolean hasInterval() {
        return ((bitField0_ & 0x00000002) != 0);
      }
      /**
       * <pre>
       * Interval in seconds? 14400=4h
       * </pre>
       *
       * <code>required int32 interval = 2;</code>
       */
      public int getInterval() {
        return interval_;
      }
      /**
       * <pre>
       * Interval in seconds? 14400=4h
       * </pre>
       *
       * <code>required int32 interval = 2;</code>
       */
      public Builder setInterval(int value) {
        bitField0_ |= 0x00000002;
        interval_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Interval in seconds? 14400=4h
       * </pre>
       *
       * <code>required int32 interval = 2;</code>
       */
      public Builder clearInterval() {
        bitField0_ = (bitField0_ & ~0x00000002);
        interval_ = 0;
        onChanged();
        return this;
      }

      private java.util.List<net.studioblueplanet.tomtomwatch.TrackerProto.TagValueContainer> tagValue_ =
        java.util.Collections.emptyList();
      private void ensureTagValueIsMutable() {
        if (!((bitField0_ & 0x00000004) != 0)) {
          tagValue_ = new java.util.ArrayList<net.studioblueplanet.tomtomwatch.TrackerProto.TagValueContainer>(tagValue_);
          bitField0_ |= 0x00000004;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilderV3<
          net.studioblueplanet.tomtomwatch.TrackerProto.TagValueContainer, net.studioblueplanet.tomtomwatch.TrackerProto.TagValueContainer.Builder, net.studioblueplanet.tomtomwatch.TrackerProto.TagValueContainerOrBuilder> tagValueBuilder_;

      /**
       * <code>repeated .tutorial.TagValueContainer tagValue = 3;</code>
       */
      public java.util.List<net.studioblueplanet.tomtomwatch.TrackerProto.TagValueContainer> getTagValueList() {
        if (tagValueBuilder_ == null) {
          return java.util.Collections.unmodifiableList(tagValue_);
        } else {
          return tagValueBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .tutorial.TagValueContainer tagValue = 3;</code>
       */
      public int getTagValueCount() {
        if (tagValueBuilder_ == null) {
          return tagValue_.size();
        } else {
          return tagValueBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .tutorial.TagValueContainer tagValue = 3;</code>
       */
      public net.studioblueplanet.tomtomwatch.TrackerProto.TagValueContainer getTagValue(int index) {
        if (tagValueBuilder_ == null) {
          return tagValue_.get(index);
        } else {
          return tagValueBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .tutorial.TagValueContainer tagValue = 3;</code>
       */
      public Builder setTagValue(
          int index, net.studioblueplanet.tomtomwatch.TrackerProto.TagValueContainer value) {
        if (tagValueBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureTagValueIsMutable();
          tagValue_.set(index, value);
          onChanged();
        } else {
          tagValueBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .tutorial.TagValueContainer tagValue = 3;</code>
       */
      public Builder setTagValue(
          int index, net.studioblueplanet.tomtomwatch.TrackerProto.TagValueContainer.Builder builderForValue) {
        if (tagValueBuilder_ == null) {
          ensureTagValueIsMutable();
          tagValue_.set(index, builderForValue.build());
          onChanged();
        } else {
          tagValueBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .tutorial.TagValueContainer tagValue = 3;</code>
       */
      public Builder addTagValue(net.studioblueplanet.tomtomwatch.TrackerProto.TagValueContainer value) {
        if (tagValueBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureTagValueIsMutable();
          tagValue_.add(value);
          onChanged();
        } else {
          tagValueBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .tutorial.TagValueContainer tagValue = 3;</code>
       */
      public Builder addTagValue(
          int index, net.studioblueplanet.tomtomwatch.TrackerProto.TagValueContainer value) {
        if (tagValueBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureTagValueIsMutable();
          tagValue_.add(index, value);
          onChanged();
        } else {
          tagValueBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .tutorial.TagValueContainer tagValue = 3;</code>
       */
      public Builder addTagValue(
          net.studioblueplanet.tomtomwatch.TrackerProto.TagValueContainer.Builder builderForValue) {
        if (tagValueBuilder_ == null) {
          ensureTagValueIsMutable();
          tagValue_.add(builderForValue.build());
          onChanged();
        } else {
          tagValueBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .tutorial.TagValueContainer tagValue = 3;</code>
       */
      public Builder addTagValue(
          int index, net.studioblueplanet.tomtomwatch.TrackerProto.TagValueContainer.Builder builderForValue) {
        if (tagValueBuilder_ == null) {
          ensureTagValueIsMutable();
          tagValue_.add(index, builderForValue.build());
          onChanged();
        } else {
          tagValueBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .tutorial.TagValueContainer tagValue = 3;</code>
       */
      public Builder addAllTagValue(
          java.lang.Iterable<? extends net.studioblueplanet.tomtomwatch.TrackerProto.TagValueContainer> values) {
        if (tagValueBuilder_ == null) {
          ensureTagValueIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, tagValue_);
          onChanged();
        } else {
          tagValueBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .tutorial.TagValueContainer tagValue = 3;</code>
       */
      public Builder clearTagValue() {
        if (tagValueBuilder_ == null) {
          tagValue_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000004);
          onChanged();
        } else {
          tagValueBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .tutorial.TagValueContainer tagValue = 3;</code>
       */
      public Builder removeTagValue(int index) {
        if (tagValueBuilder_ == null) {
          ensureTagValueIsMutable();
          tagValue_.remove(index);
          onChanged();
        } else {
          tagValueBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .tutorial.TagValueContainer tagValue = 3;</code>
       */
      public net.studioblueplanet.tomtomwatch.TrackerProto.TagValueContainer.Builder getTagValueBuilder(
          int index) {
        return getTagValueFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .tutorial.TagValueContainer tagValue = 3;</code>
       */
      public net.studioblueplanet.tomtomwatch.TrackerProto.TagValueContainerOrBuilder getTagValueOrBuilder(
          int index) {
        if (tagValueBuilder_ == null) {
          return tagValue_.get(index);  } else {
          return tagValueBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .tutorial.TagValueContainer tagValue = 3;</code>
       */
      public java.util.List<? extends net.studioblueplanet.tomtomwatch.TrackerProto.TagValueContainerOrBuilder> 
           getTagValueOrBuilderList() {
        if (tagValueBuilder_ != null) {
          return tagValueBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(tagValue_);
        }
      }
      /**
       * <code>repeated .tutorial.TagValueContainer tagValue = 3;</code>
       */
      public net.studioblueplanet.tomtomwatch.TrackerProto.TagValueContainer.Builder addTagValueBuilder() {
        return getTagValueFieldBuilder().addBuilder(
            net.studioblueplanet.tomtomwatch.TrackerProto.TagValueContainer.getDefaultInstance());
      }
      /**
       * <code>repeated .tutorial.TagValueContainer tagValue = 3;</code>
       */
      public net.studioblueplanet.tomtomwatch.TrackerProto.TagValueContainer.Builder addTagValueBuilder(
          int index) {
        return getTagValueFieldBuilder().addBuilder(
            index, net.studioblueplanet.tomtomwatch.TrackerProto.TagValueContainer.getDefaultInstance());
      }
      /**
       * <code>repeated .tutorial.TagValueContainer tagValue = 3;</code>
       */
      public java.util.List<net.studioblueplanet.tomtomwatch.TrackerProto.TagValueContainer.Builder> 
           getTagValueBuilderList() {
        return getTagValueFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilderV3<
          net.studioblueplanet.tomtomwatch.TrackerProto.TagValueContainer, net.studioblueplanet.tomtomwatch.TrackerProto.TagValueContainer.Builder, net.studioblueplanet.tomtomwatch.TrackerProto.TagValueContainerOrBuilder> 
          getTagValueFieldBuilder() {
        if (tagValueBuilder_ == null) {
          tagValueBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
              net.studioblueplanet.tomtomwatch.TrackerProto.TagValueContainer, net.studioblueplanet.tomtomwatch.TrackerProto.TagValueContainer.Builder, net.studioblueplanet.tomtomwatch.TrackerProto.TagValueContainerOrBuilder>(
                  tagValue_,
                  ((bitField0_ & 0x00000004) != 0),
                  getParentForChildren(),
                  isClean());
          tagValue_ = null;
        }
        return tagValueBuilder_;
      }

      private int unknown1_ ;
      /**
       * <code>required int32 unknown1 = 4;</code>
       */
      public boolean hasUnknown1() {
        return ((bitField0_ & 0x00000008) != 0);
      }
      /**
       * <code>required int32 unknown1 = 4;</code>
       */
      public int getUnknown1() {
        return unknown1_;
      }
      /**
       * <code>required int32 unknown1 = 4;</code>
       */
      public Builder setUnknown1(int value) {
        bitField0_ |= 0x00000008;
        unknown1_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required int32 unknown1 = 4;</code>
       */
      public Builder clearUnknown1() {
        bitField0_ = (bitField0_ & ~0x00000008);
        unknown1_ = 0;
        onChanged();
        return this;
      }

      private int unknown2_ ;
      /**
       * <code>required int32 unknown2 = 5;</code>
       */
      public boolean hasUnknown2() {
        return ((bitField0_ & 0x00000010) != 0);
      }
      /**
       * <code>required int32 unknown2 = 5;</code>
       */
      public int getUnknown2() {
        return unknown2_;
      }
      /**
       * <code>required int32 unknown2 = 5;</code>
       */
      public Builder setUnknown2(int value) {
        bitField0_ |= 0x00000010;
        unknown2_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required int32 unknown2 = 5;</code>
       */
      public Builder clearUnknown2() {
        bitField0_ = (bitField0_ & ~0x00000010);
        unknown2_ = 0;
        onChanged();
        return this;
      }

      private int unknown3_ ;
      /**
       * <code>optional int32 unknown3 = 6;</code>
       */
      public boolean hasUnknown3() {
        return ((bitField0_ & 0x00000020) != 0);
      }
      /**
       * <code>optional int32 unknown3 = 6;</code>
       */
      public int getUnknown3() {
        return unknown3_;
      }
      /**
       * <code>optional int32 unknown3 = 6;</code>
       */
      public Builder setUnknown3(int value) {
        bitField0_ |= 0x00000020;
        unknown3_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 unknown3 = 6;</code>
       */
      public Builder clearUnknown3() {
        bitField0_ = (bitField0_ & ~0x00000020);
        unknown3_ = 0;
        onChanged();
        return this;
      }

      private int unknown4_ ;
      /**
       * <pre>
       * 1.6.26
       * </pre>
       *
       * <code>optional fixed32 unknown4 = 104;</code>
       */
      public boolean hasUnknown4() {
        return ((bitField0_ & 0x00000040) != 0);
      }
      /**
       * <pre>
       * 1.6.26
       * </pre>
       *
       * <code>optional fixed32 unknown4 = 104;</code>
       */
      public int getUnknown4() {
        return unknown4_;
      }
      /**
       * <pre>
       * 1.6.26
       * </pre>
       *
       * <code>optional fixed32 unknown4 = 104;</code>
       */
      public Builder setUnknown4(int value) {
        bitField0_ |= 0x00000040;
        unknown4_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * 1.6.26
       * </pre>
       *
       * <code>optional fixed32 unknown4 = 104;</code>
       */
      public Builder clearUnknown4() {
        bitField0_ = (bitField0_ & ~0x00000040);
        unknown4_ = 0;
        onChanged();
        return this;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:tutorial.Record2)
    }

    // @@protoc_insertion_point(class_scope:tutorial.Record2)
    private static final net.studioblueplanet.tomtomwatch.TrackerProto.Record2 DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new net.studioblueplanet.tomtomwatch.TrackerProto.Record2();
    }

    public static net.studioblueplanet.tomtomwatch.TrackerProto.Record2 getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    @java.lang.Deprecated public static final com.google.protobuf.Parser<Record2>
        PARSER = new com.google.protobuf.AbstractParser<Record2>() {
      @java.lang.Override
      public Record2 parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new Record2(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<Record2> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<Record2> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public net.studioblueplanet.tomtomwatch.TrackerProto.Record2 getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface TagValueContainerOrBuilder extends
      // @@protoc_insertion_point(interface_extends:tutorial.TagValueContainer)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>required int32 tag = 1;</code>
     */
    boolean hasTag();
    /**
     * <code>required int32 tag = 1;</code>
     */
    int getTag();

    /**
     * <code>required .tutorial.ValueContainer valueContainer = 2;</code>
     */
    boolean hasValueContainer();
    /**
     * <code>required .tutorial.ValueContainer valueContainer = 2;</code>
     */
    net.studioblueplanet.tomtomwatch.TrackerProto.ValueContainer getValueContainer();
    /**
     * <code>required .tutorial.ValueContainer valueContainer = 2;</code>
     */
    net.studioblueplanet.tomtomwatch.TrackerProto.ValueContainerOrBuilder getValueContainerOrBuilder();
  }
  /**
   * Protobuf type {@code tutorial.TagValueContainer}
   */
  public  static final class TagValueContainer extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:tutorial.TagValueContainer)
      TagValueContainerOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use TagValueContainer.newBuilder() to construct.
    private TagValueContainer(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private TagValueContainer() {
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new TagValueContainer();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private TagValueContainer(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 8: {
              bitField0_ |= 0x00000001;
              tag_ = input.readInt32();
              break;
            }
            case 18: {
              net.studioblueplanet.tomtomwatch.TrackerProto.ValueContainer.Builder subBuilder = null;
              if (((bitField0_ & 0x00000002) != 0)) {
                subBuilder = valueContainer_.toBuilder();
              }
              valueContainer_ = input.readMessage(net.studioblueplanet.tomtomwatch.TrackerProto.ValueContainer.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(valueContainer_);
                valueContainer_ = subBuilder.buildPartial();
              }
              bitField0_ |= 0x00000002;
              break;
            }
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return net.studioblueplanet.tomtomwatch.TrackerProto.internal_static_tutorial_TagValueContainer_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return net.studioblueplanet.tomtomwatch.TrackerProto.internal_static_tutorial_TagValueContainer_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              net.studioblueplanet.tomtomwatch.TrackerProto.TagValueContainer.class, net.studioblueplanet.tomtomwatch.TrackerProto.TagValueContainer.Builder.class);
    }

    private int bitField0_;
    public static final int TAG_FIELD_NUMBER = 1;
    private int tag_;
    /**
     * <code>required int32 tag = 1;</code>
     */
    public boolean hasTag() {
      return ((bitField0_ & 0x00000001) != 0);
    }
    /**
     * <code>required int32 tag = 1;</code>
     */
    public int getTag() {
      return tag_;
    }

    public static final int VALUECONTAINER_FIELD_NUMBER = 2;
    private net.studioblueplanet.tomtomwatch.TrackerProto.ValueContainer valueContainer_;
    /**
     * <code>required .tutorial.ValueContainer valueContainer = 2;</code>
     */
    public boolean hasValueContainer() {
      return ((bitField0_ & 0x00000002) != 0);
    }
    /**
     * <code>required .tutorial.ValueContainer valueContainer = 2;</code>
     */
    public net.studioblueplanet.tomtomwatch.TrackerProto.ValueContainer getValueContainer() {
      return valueContainer_ == null ? net.studioblueplanet.tomtomwatch.TrackerProto.ValueContainer.getDefaultInstance() : valueContainer_;
    }
    /**
     * <code>required .tutorial.ValueContainer valueContainer = 2;</code>
     */
    public net.studioblueplanet.tomtomwatch.TrackerProto.ValueContainerOrBuilder getValueContainerOrBuilder() {
      return valueContainer_ == null ? net.studioblueplanet.tomtomwatch.TrackerProto.ValueContainer.getDefaultInstance() : valueContainer_;
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      if (!hasTag()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasValueContainer()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!getValueContainer().isInitialized()) {
        memoizedIsInitialized = 0;
        return false;
      }
      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (((bitField0_ & 0x00000001) != 0)) {
        output.writeInt32(1, tag_);
      }
      if (((bitField0_ & 0x00000002) != 0)) {
        output.writeMessage(2, getValueContainer());
      }
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(1, tag_);
      }
      if (((bitField0_ & 0x00000002) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(2, getValueContainer());
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof net.studioblueplanet.tomtomwatch.TrackerProto.TagValueContainer)) {
        return super.equals(obj);
      }
      net.studioblueplanet.tomtomwatch.TrackerProto.TagValueContainer other = (net.studioblueplanet.tomtomwatch.TrackerProto.TagValueContainer) obj;

      if (hasTag() != other.hasTag()) return false;
      if (hasTag()) {
        if (getTag()
            != other.getTag()) return false;
      }
      if (hasValueContainer() != other.hasValueContainer()) return false;
      if (hasValueContainer()) {
        if (!getValueContainer()
            .equals(other.getValueContainer())) return false;
      }
      if (!unknownFields.equals(other.unknownFields)) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (hasTag()) {
        hash = (37 * hash) + TAG_FIELD_NUMBER;
        hash = (53 * hash) + getTag();
      }
      if (hasValueContainer()) {
        hash = (37 * hash) + VALUECONTAINER_FIELD_NUMBER;
        hash = (53 * hash) + getValueContainer().hashCode();
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static net.studioblueplanet.tomtomwatch.TrackerProto.TagValueContainer parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static net.studioblueplanet.tomtomwatch.TrackerProto.TagValueContainer parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static net.studioblueplanet.tomtomwatch.TrackerProto.TagValueContainer parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static net.studioblueplanet.tomtomwatch.TrackerProto.TagValueContainer parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static net.studioblueplanet.tomtomwatch.TrackerProto.TagValueContainer parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static net.studioblueplanet.tomtomwatch.TrackerProto.TagValueContainer parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static net.studioblueplanet.tomtomwatch.TrackerProto.TagValueContainer parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static net.studioblueplanet.tomtomwatch.TrackerProto.TagValueContainer parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static net.studioblueplanet.tomtomwatch.TrackerProto.TagValueContainer parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static net.studioblueplanet.tomtomwatch.TrackerProto.TagValueContainer parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static net.studioblueplanet.tomtomwatch.TrackerProto.TagValueContainer parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static net.studioblueplanet.tomtomwatch.TrackerProto.TagValueContainer parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(net.studioblueplanet.tomtomwatch.TrackerProto.TagValueContainer prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code tutorial.TagValueContainer}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:tutorial.TagValueContainer)
        net.studioblueplanet.tomtomwatch.TrackerProto.TagValueContainerOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return net.studioblueplanet.tomtomwatch.TrackerProto.internal_static_tutorial_TagValueContainer_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return net.studioblueplanet.tomtomwatch.TrackerProto.internal_static_tutorial_TagValueContainer_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                net.studioblueplanet.tomtomwatch.TrackerProto.TagValueContainer.class, net.studioblueplanet.tomtomwatch.TrackerProto.TagValueContainer.Builder.class);
      }

      // Construct using net.studioblueplanet.tomtomwatch.TrackerProto.TagValueContainer.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
          getValueContainerFieldBuilder();
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        tag_ = 0;
        bitField0_ = (bitField0_ & ~0x00000001);
        if (valueContainerBuilder_ == null) {
          valueContainer_ = null;
        } else {
          valueContainerBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000002);
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return net.studioblueplanet.tomtomwatch.TrackerProto.internal_static_tutorial_TagValueContainer_descriptor;
      }

      @java.lang.Override
      public net.studioblueplanet.tomtomwatch.TrackerProto.TagValueContainer getDefaultInstanceForType() {
        return net.studioblueplanet.tomtomwatch.TrackerProto.TagValueContainer.getDefaultInstance();
      }

      @java.lang.Override
      public net.studioblueplanet.tomtomwatch.TrackerProto.TagValueContainer build() {
        net.studioblueplanet.tomtomwatch.TrackerProto.TagValueContainer result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public net.studioblueplanet.tomtomwatch.TrackerProto.TagValueContainer buildPartial() {
        net.studioblueplanet.tomtomwatch.TrackerProto.TagValueContainer result = new net.studioblueplanet.tomtomwatch.TrackerProto.TagValueContainer(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) != 0)) {
          result.tag_ = tag_;
          to_bitField0_ |= 0x00000001;
        }
        if (((from_bitField0_ & 0x00000002) != 0)) {
          if (valueContainerBuilder_ == null) {
            result.valueContainer_ = valueContainer_;
          } else {
            result.valueContainer_ = valueContainerBuilder_.build();
          }
          to_bitField0_ |= 0x00000002;
        }
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof net.studioblueplanet.tomtomwatch.TrackerProto.TagValueContainer) {
          return mergeFrom((net.studioblueplanet.tomtomwatch.TrackerProto.TagValueContainer)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(net.studioblueplanet.tomtomwatch.TrackerProto.TagValueContainer other) {
        if (other == net.studioblueplanet.tomtomwatch.TrackerProto.TagValueContainer.getDefaultInstance()) return this;
        if (other.hasTag()) {
          setTag(other.getTag());
        }
        if (other.hasValueContainer()) {
          mergeValueContainer(other.getValueContainer());
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        if (!hasTag()) {
          return false;
        }
        if (!hasValueContainer()) {
          return false;
        }
        if (!getValueContainer().isInitialized()) {
          return false;
        }
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        net.studioblueplanet.tomtomwatch.TrackerProto.TagValueContainer parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (net.studioblueplanet.tomtomwatch.TrackerProto.TagValueContainer) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private int tag_ ;
      /**
       * <code>required int32 tag = 1;</code>
       */
      public boolean hasTag() {
        return ((bitField0_ & 0x00000001) != 0);
      }
      /**
       * <code>required int32 tag = 1;</code>
       */
      public int getTag() {
        return tag_;
      }
      /**
       * <code>required int32 tag = 1;</code>
       */
      public Builder setTag(int value) {
        bitField0_ |= 0x00000001;
        tag_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required int32 tag = 1;</code>
       */
      public Builder clearTag() {
        bitField0_ = (bitField0_ & ~0x00000001);
        tag_ = 0;
        onChanged();
        return this;
      }

      private net.studioblueplanet.tomtomwatch.TrackerProto.ValueContainer valueContainer_;
      private com.google.protobuf.SingleFieldBuilderV3<
          net.studioblueplanet.tomtomwatch.TrackerProto.ValueContainer, net.studioblueplanet.tomtomwatch.TrackerProto.ValueContainer.Builder, net.studioblueplanet.tomtomwatch.TrackerProto.ValueContainerOrBuilder> valueContainerBuilder_;
      /**
       * <code>required .tutorial.ValueContainer valueContainer = 2;</code>
       */
      public boolean hasValueContainer() {
        return ((bitField0_ & 0x00000002) != 0);
      }
      /**
       * <code>required .tutorial.ValueContainer valueContainer = 2;</code>
       */
      public net.studioblueplanet.tomtomwatch.TrackerProto.ValueContainer getValueContainer() {
        if (valueContainerBuilder_ == null) {
          return valueContainer_ == null ? net.studioblueplanet.tomtomwatch.TrackerProto.ValueContainer.getDefaultInstance() : valueContainer_;
        } else {
          return valueContainerBuilder_.getMessage();
        }
      }
      /**
       * <code>required .tutorial.ValueContainer valueContainer = 2;</code>
       */
      public Builder setValueContainer(net.studioblueplanet.tomtomwatch.TrackerProto.ValueContainer value) {
        if (valueContainerBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          valueContainer_ = value;
          onChanged();
        } else {
          valueContainerBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000002;
        return this;
      }
      /**
       * <code>required .tutorial.ValueContainer valueContainer = 2;</code>
       */
      public Builder setValueContainer(
          net.studioblueplanet.tomtomwatch.TrackerProto.ValueContainer.Builder builderForValue) {
        if (valueContainerBuilder_ == null) {
          valueContainer_ = builderForValue.build();
          onChanged();
        } else {
          valueContainerBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000002;
        return this;
      }
      /**
       * <code>required .tutorial.ValueContainer valueContainer = 2;</code>
       */
      public Builder mergeValueContainer(net.studioblueplanet.tomtomwatch.TrackerProto.ValueContainer value) {
        if (valueContainerBuilder_ == null) {
          if (((bitField0_ & 0x00000002) != 0) &&
              valueContainer_ != null &&
              valueContainer_ != net.studioblueplanet.tomtomwatch.TrackerProto.ValueContainer.getDefaultInstance()) {
            valueContainer_ =
              net.studioblueplanet.tomtomwatch.TrackerProto.ValueContainer.newBuilder(valueContainer_).mergeFrom(value).buildPartial();
          } else {
            valueContainer_ = value;
          }
          onChanged();
        } else {
          valueContainerBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000002;
        return this;
      }
      /**
       * <code>required .tutorial.ValueContainer valueContainer = 2;</code>
       */
      public Builder clearValueContainer() {
        if (valueContainerBuilder_ == null) {
          valueContainer_ = null;
          onChanged();
        } else {
          valueContainerBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000002);
        return this;
      }
      /**
       * <code>required .tutorial.ValueContainer valueContainer = 2;</code>
       */
      public net.studioblueplanet.tomtomwatch.TrackerProto.ValueContainer.Builder getValueContainerBuilder() {
        bitField0_ |= 0x00000002;
        onChanged();
        return getValueContainerFieldBuilder().getBuilder();
      }
      /**
       * <code>required .tutorial.ValueContainer valueContainer = 2;</code>
       */
      public net.studioblueplanet.tomtomwatch.TrackerProto.ValueContainerOrBuilder getValueContainerOrBuilder() {
        if (valueContainerBuilder_ != null) {
          return valueContainerBuilder_.getMessageOrBuilder();
        } else {
          return valueContainer_ == null ?
              net.studioblueplanet.tomtomwatch.TrackerProto.ValueContainer.getDefaultInstance() : valueContainer_;
        }
      }
      /**
       * <code>required .tutorial.ValueContainer valueContainer = 2;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          net.studioblueplanet.tomtomwatch.TrackerProto.ValueContainer, net.studioblueplanet.tomtomwatch.TrackerProto.ValueContainer.Builder, net.studioblueplanet.tomtomwatch.TrackerProto.ValueContainerOrBuilder> 
          getValueContainerFieldBuilder() {
        if (valueContainerBuilder_ == null) {
          valueContainerBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              net.studioblueplanet.tomtomwatch.TrackerProto.ValueContainer, net.studioblueplanet.tomtomwatch.TrackerProto.ValueContainer.Builder, net.studioblueplanet.tomtomwatch.TrackerProto.ValueContainerOrBuilder>(
                  getValueContainer(),
                  getParentForChildren(),
                  isClean());
          valueContainer_ = null;
        }
        return valueContainerBuilder_;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:tutorial.TagValueContainer)
    }

    // @@protoc_insertion_point(class_scope:tutorial.TagValueContainer)
    private static final net.studioblueplanet.tomtomwatch.TrackerProto.TagValueContainer DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new net.studioblueplanet.tomtomwatch.TrackerProto.TagValueContainer();
    }

    public static net.studioblueplanet.tomtomwatch.TrackerProto.TagValueContainer getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    @java.lang.Deprecated public static final com.google.protobuf.Parser<TagValueContainer>
        PARSER = new com.google.protobuf.AbstractParser<TagValueContainer>() {
      @java.lang.Override
      public TagValueContainer parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new TagValueContainer(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<TagValueContainer> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<TagValueContainer> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public net.studioblueplanet.tomtomwatch.TrackerProto.TagValueContainer getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface ValueContainerOrBuilder extends
      // @@protoc_insertion_point(interface_extends:tutorial.ValueContainer)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>required int32 value = 3;</code>
     */
    boolean hasValue();
    /**
     * <code>required int32 value = 3;</code>
     */
    int getValue();
  }
  /**
   * Protobuf type {@code tutorial.ValueContainer}
   */
  public  static final class ValueContainer extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:tutorial.ValueContainer)
      ValueContainerOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use ValueContainer.newBuilder() to construct.
    private ValueContainer(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private ValueContainer() {
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new ValueContainer();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private ValueContainer(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 24: {
              bitField0_ |= 0x00000001;
              value_ = input.readInt32();
              break;
            }
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return net.studioblueplanet.tomtomwatch.TrackerProto.internal_static_tutorial_ValueContainer_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return net.studioblueplanet.tomtomwatch.TrackerProto.internal_static_tutorial_ValueContainer_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              net.studioblueplanet.tomtomwatch.TrackerProto.ValueContainer.class, net.studioblueplanet.tomtomwatch.TrackerProto.ValueContainer.Builder.class);
    }

    private int bitField0_;
    public static final int VALUE_FIELD_NUMBER = 3;
    private int value_;
    /**
     * <code>required int32 value = 3;</code>
     */
    public boolean hasValue() {
      return ((bitField0_ & 0x00000001) != 0);
    }
    /**
     * <code>required int32 value = 3;</code>
     */
    public int getValue() {
      return value_;
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      if (!hasValue()) {
        memoizedIsInitialized = 0;
        return false;
      }
      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (((bitField0_ & 0x00000001) != 0)) {
        output.writeInt32(3, value_);
      }
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(3, value_);
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof net.studioblueplanet.tomtomwatch.TrackerProto.ValueContainer)) {
        return super.equals(obj);
      }
      net.studioblueplanet.tomtomwatch.TrackerProto.ValueContainer other = (net.studioblueplanet.tomtomwatch.TrackerProto.ValueContainer) obj;

      if (hasValue() != other.hasValue()) return false;
      if (hasValue()) {
        if (getValue()
            != other.getValue()) return false;
      }
      if (!unknownFields.equals(other.unknownFields)) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (hasValue()) {
        hash = (37 * hash) + VALUE_FIELD_NUMBER;
        hash = (53 * hash) + getValue();
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static net.studioblueplanet.tomtomwatch.TrackerProto.ValueContainer parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static net.studioblueplanet.tomtomwatch.TrackerProto.ValueContainer parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static net.studioblueplanet.tomtomwatch.TrackerProto.ValueContainer parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static net.studioblueplanet.tomtomwatch.TrackerProto.ValueContainer parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static net.studioblueplanet.tomtomwatch.TrackerProto.ValueContainer parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static net.studioblueplanet.tomtomwatch.TrackerProto.ValueContainer parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static net.studioblueplanet.tomtomwatch.TrackerProto.ValueContainer parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static net.studioblueplanet.tomtomwatch.TrackerProto.ValueContainer parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static net.studioblueplanet.tomtomwatch.TrackerProto.ValueContainer parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static net.studioblueplanet.tomtomwatch.TrackerProto.ValueContainer parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static net.studioblueplanet.tomtomwatch.TrackerProto.ValueContainer parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static net.studioblueplanet.tomtomwatch.TrackerProto.ValueContainer parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(net.studioblueplanet.tomtomwatch.TrackerProto.ValueContainer prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code tutorial.ValueContainer}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:tutorial.ValueContainer)
        net.studioblueplanet.tomtomwatch.TrackerProto.ValueContainerOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return net.studioblueplanet.tomtomwatch.TrackerProto.internal_static_tutorial_ValueContainer_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return net.studioblueplanet.tomtomwatch.TrackerProto.internal_static_tutorial_ValueContainer_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                net.studioblueplanet.tomtomwatch.TrackerProto.ValueContainer.class, net.studioblueplanet.tomtomwatch.TrackerProto.ValueContainer.Builder.class);
      }

      // Construct using net.studioblueplanet.tomtomwatch.TrackerProto.ValueContainer.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        value_ = 0;
        bitField0_ = (bitField0_ & ~0x00000001);
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return net.studioblueplanet.tomtomwatch.TrackerProto.internal_static_tutorial_ValueContainer_descriptor;
      }

      @java.lang.Override
      public net.studioblueplanet.tomtomwatch.TrackerProto.ValueContainer getDefaultInstanceForType() {
        return net.studioblueplanet.tomtomwatch.TrackerProto.ValueContainer.getDefaultInstance();
      }

      @java.lang.Override
      public net.studioblueplanet.tomtomwatch.TrackerProto.ValueContainer build() {
        net.studioblueplanet.tomtomwatch.TrackerProto.ValueContainer result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public net.studioblueplanet.tomtomwatch.TrackerProto.ValueContainer buildPartial() {
        net.studioblueplanet.tomtomwatch.TrackerProto.ValueContainer result = new net.studioblueplanet.tomtomwatch.TrackerProto.ValueContainer(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) != 0)) {
          result.value_ = value_;
          to_bitField0_ |= 0x00000001;
        }
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof net.studioblueplanet.tomtomwatch.TrackerProto.ValueContainer) {
          return mergeFrom((net.studioblueplanet.tomtomwatch.TrackerProto.ValueContainer)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(net.studioblueplanet.tomtomwatch.TrackerProto.ValueContainer other) {
        if (other == net.studioblueplanet.tomtomwatch.TrackerProto.ValueContainer.getDefaultInstance()) return this;
        if (other.hasValue()) {
          setValue(other.getValue());
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        if (!hasValue()) {
          return false;
        }
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        net.studioblueplanet.tomtomwatch.TrackerProto.ValueContainer parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (net.studioblueplanet.tomtomwatch.TrackerProto.ValueContainer) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private int value_ ;
      /**
       * <code>required int32 value = 3;</code>
       */
      public boolean hasValue() {
        return ((bitField0_ & 0x00000001) != 0);
      }
      /**
       * <code>required int32 value = 3;</code>
       */
      public int getValue() {
        return value_;
      }
      /**
       * <code>required int32 value = 3;</code>
       */
      public Builder setValue(int value) {
        bitField0_ |= 0x00000001;
        value_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required int32 value = 3;</code>
       */
      public Builder clearValue() {
        bitField0_ = (bitField0_ & ~0x00000001);
        value_ = 0;
        onChanged();
        return this;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:tutorial.ValueContainer)
    }

    // @@protoc_insertion_point(class_scope:tutorial.ValueContainer)
    private static final net.studioblueplanet.tomtomwatch.TrackerProto.ValueContainer DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new net.studioblueplanet.tomtomwatch.TrackerProto.ValueContainer();
    }

    public static net.studioblueplanet.tomtomwatch.TrackerProto.ValueContainer getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    @java.lang.Deprecated public static final com.google.protobuf.Parser<ValueContainer>
        PARSER = new com.google.protobuf.AbstractParser<ValueContainer>() {
      @java.lang.Override
      public ValueContainer parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new ValueContainer(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<ValueContainer> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<ValueContainer> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public net.studioblueplanet.tomtomwatch.TrackerProto.ValueContainer getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface HeartRecordOrBuilder extends
      // @@protoc_insertion_point(interface_extends:tutorial.HeartRecord)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     * Epoch time in seconds, 900 s interval = 15 min
     * </pre>
     *
     * <code>required fixed32 time = 1;</code>
     */
    boolean hasTime();
    /**
     * <pre>
     * Epoch time in seconds, 900 s interval = 15 min
     * </pre>
     *
     * <code>required fixed32 time = 1;</code>
     */
    int getTime();

    /**
     * <pre>
     * Interval in seconds?? 14400=4h
     * </pre>
     *
     * <code>required int32 interval = 2;</code>
     */
    boolean hasInterval();
    /**
     * <pre>
     * Interval in seconds?? 14400=4h
     * </pre>
     *
     * <code>required int32 interval = 2;</code>
     */
    int getInterval();

    /**
     * <pre>
     * Heartrate in bpm. This value is displayed by TomTom MySports
     * </pre>
     *
     * <code>required int32 heartRate = 3;</code>
     */
    boolean hasHeartRate();
    /**
     * <pre>
     * Heartrate in bpm. This value is displayed by TomTom MySports
     * </pre>
     *
     * <code>required int32 heartRate = 3;</code>
     */
    int getHeartRate();

    /**
     * <pre>
     * Some other heartrate value
     * </pre>
     *
     * <code>required int32 value01 = 4;</code>
     */
    boolean hasValue01();
    /**
     * <pre>
     * Some other heartrate value
     * </pre>
     *
     * <code>required int32 value01 = 4;</code>
     */
    int getValue01();

    /**
     * <pre>
     * ?
     * </pre>
     *
     * <code>required int32 value02 = 5;</code>
     */
    boolean hasValue02();
    /**
     * <pre>
     * ?
     * </pre>
     *
     * <code>required int32 value02 = 5;</code>
     */
    int getValue02();
  }
  /**
   * Protobuf type {@code tutorial.HeartRecord}
   */
  public  static final class HeartRecord extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:tutorial.HeartRecord)
      HeartRecordOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use HeartRecord.newBuilder() to construct.
    private HeartRecord(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private HeartRecord() {
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new HeartRecord();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private HeartRecord(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 13: {
              bitField0_ |= 0x00000001;
              time_ = input.readFixed32();
              break;
            }
            case 16: {
              bitField0_ |= 0x00000002;
              interval_ = input.readInt32();
              break;
            }
            case 24: {
              bitField0_ |= 0x00000004;
              heartRate_ = input.readInt32();
              break;
            }
            case 32: {
              bitField0_ |= 0x00000008;
              value01_ = input.readInt32();
              break;
            }
            case 40: {
              bitField0_ |= 0x00000010;
              value02_ = input.readInt32();
              break;
            }
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return net.studioblueplanet.tomtomwatch.TrackerProto.internal_static_tutorial_HeartRecord_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return net.studioblueplanet.tomtomwatch.TrackerProto.internal_static_tutorial_HeartRecord_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              net.studioblueplanet.tomtomwatch.TrackerProto.HeartRecord.class, net.studioblueplanet.tomtomwatch.TrackerProto.HeartRecord.Builder.class);
    }

    private int bitField0_;
    public static final int TIME_FIELD_NUMBER = 1;
    private int time_;
    /**
     * <pre>
     * Epoch time in seconds, 900 s interval = 15 min
     * </pre>
     *
     * <code>required fixed32 time = 1;</code>
     */
    public boolean hasTime() {
      return ((bitField0_ & 0x00000001) != 0);
    }
    /**
     * <pre>
     * Epoch time in seconds, 900 s interval = 15 min
     * </pre>
     *
     * <code>required fixed32 time = 1;</code>
     */
    public int getTime() {
      return time_;
    }

    public static final int INTERVAL_FIELD_NUMBER = 2;
    private int interval_;
    /**
     * <pre>
     * Interval in seconds?? 14400=4h
     * </pre>
     *
     * <code>required int32 interval = 2;</code>
     */
    public boolean hasInterval() {
      return ((bitField0_ & 0x00000002) != 0);
    }
    /**
     * <pre>
     * Interval in seconds?? 14400=4h
     * </pre>
     *
     * <code>required int32 interval = 2;</code>
     */
    public int getInterval() {
      return interval_;
    }

    public static final int HEARTRATE_FIELD_NUMBER = 3;
    private int heartRate_;
    /**
     * <pre>
     * Heartrate in bpm. This value is displayed by TomTom MySports
     * </pre>
     *
     * <code>required int32 heartRate = 3;</code>
     */
    public boolean hasHeartRate() {
      return ((bitField0_ & 0x00000004) != 0);
    }
    /**
     * <pre>
     * Heartrate in bpm. This value is displayed by TomTom MySports
     * </pre>
     *
     * <code>required int32 heartRate = 3;</code>
     */
    public int getHeartRate() {
      return heartRate_;
    }

    public static final int VALUE01_FIELD_NUMBER = 4;
    private int value01_;
    /**
     * <pre>
     * Some other heartrate value
     * </pre>
     *
     * <code>required int32 value01 = 4;</code>
     */
    public boolean hasValue01() {
      return ((bitField0_ & 0x00000008) != 0);
    }
    /**
     * <pre>
     * Some other heartrate value
     * </pre>
     *
     * <code>required int32 value01 = 4;</code>
     */
    public int getValue01() {
      return value01_;
    }

    public static final int VALUE02_FIELD_NUMBER = 5;
    private int value02_;
    /**
     * <pre>
     * ?
     * </pre>
     *
     * <code>required int32 value02 = 5;</code>
     */
    public boolean hasValue02() {
      return ((bitField0_ & 0x00000010) != 0);
    }
    /**
     * <pre>
     * ?
     * </pre>
     *
     * <code>required int32 value02 = 5;</code>
     */
    public int getValue02() {
      return value02_;
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      if (!hasTime()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasInterval()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasHeartRate()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasValue01()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasValue02()) {
        memoizedIsInitialized = 0;
        return false;
      }
      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (((bitField0_ & 0x00000001) != 0)) {
        output.writeFixed32(1, time_);
      }
      if (((bitField0_ & 0x00000002) != 0)) {
        output.writeInt32(2, interval_);
      }
      if (((bitField0_ & 0x00000004) != 0)) {
        output.writeInt32(3, heartRate_);
      }
      if (((bitField0_ & 0x00000008) != 0)) {
        output.writeInt32(4, value01_);
      }
      if (((bitField0_ & 0x00000010) != 0)) {
        output.writeInt32(5, value02_);
      }
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeFixed32Size(1, time_);
      }
      if (((bitField0_ & 0x00000002) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(2, interval_);
      }
      if (((bitField0_ & 0x00000004) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(3, heartRate_);
      }
      if (((bitField0_ & 0x00000008) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(4, value01_);
      }
      if (((bitField0_ & 0x00000010) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(5, value02_);
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof net.studioblueplanet.tomtomwatch.TrackerProto.HeartRecord)) {
        return super.equals(obj);
      }
      net.studioblueplanet.tomtomwatch.TrackerProto.HeartRecord other = (net.studioblueplanet.tomtomwatch.TrackerProto.HeartRecord) obj;

      if (hasTime() != other.hasTime()) return false;
      if (hasTime()) {
        if (getTime()
            != other.getTime()) return false;
      }
      if (hasInterval() != other.hasInterval()) return false;
      if (hasInterval()) {
        if (getInterval()
            != other.getInterval()) return false;
      }
      if (hasHeartRate() != other.hasHeartRate()) return false;
      if (hasHeartRate()) {
        if (getHeartRate()
            != other.getHeartRate()) return false;
      }
      if (hasValue01() != other.hasValue01()) return false;
      if (hasValue01()) {
        if (getValue01()
            != other.getValue01()) return false;
      }
      if (hasValue02() != other.hasValue02()) return false;
      if (hasValue02()) {
        if (getValue02()
            != other.getValue02()) return false;
      }
      if (!unknownFields.equals(other.unknownFields)) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (hasTime()) {
        hash = (37 * hash) + TIME_FIELD_NUMBER;
        hash = (53 * hash) + getTime();
      }
      if (hasInterval()) {
        hash = (37 * hash) + INTERVAL_FIELD_NUMBER;
        hash = (53 * hash) + getInterval();
      }
      if (hasHeartRate()) {
        hash = (37 * hash) + HEARTRATE_FIELD_NUMBER;
        hash = (53 * hash) + getHeartRate();
      }
      if (hasValue01()) {
        hash = (37 * hash) + VALUE01_FIELD_NUMBER;
        hash = (53 * hash) + getValue01();
      }
      if (hasValue02()) {
        hash = (37 * hash) + VALUE02_FIELD_NUMBER;
        hash = (53 * hash) + getValue02();
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static net.studioblueplanet.tomtomwatch.TrackerProto.HeartRecord parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static net.studioblueplanet.tomtomwatch.TrackerProto.HeartRecord parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static net.studioblueplanet.tomtomwatch.TrackerProto.HeartRecord parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static net.studioblueplanet.tomtomwatch.TrackerProto.HeartRecord parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static net.studioblueplanet.tomtomwatch.TrackerProto.HeartRecord parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static net.studioblueplanet.tomtomwatch.TrackerProto.HeartRecord parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static net.studioblueplanet.tomtomwatch.TrackerProto.HeartRecord parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static net.studioblueplanet.tomtomwatch.TrackerProto.HeartRecord parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static net.studioblueplanet.tomtomwatch.TrackerProto.HeartRecord parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static net.studioblueplanet.tomtomwatch.TrackerProto.HeartRecord parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static net.studioblueplanet.tomtomwatch.TrackerProto.HeartRecord parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static net.studioblueplanet.tomtomwatch.TrackerProto.HeartRecord parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(net.studioblueplanet.tomtomwatch.TrackerProto.HeartRecord prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code tutorial.HeartRecord}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:tutorial.HeartRecord)
        net.studioblueplanet.tomtomwatch.TrackerProto.HeartRecordOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return net.studioblueplanet.tomtomwatch.TrackerProto.internal_static_tutorial_HeartRecord_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return net.studioblueplanet.tomtomwatch.TrackerProto.internal_static_tutorial_HeartRecord_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                net.studioblueplanet.tomtomwatch.TrackerProto.HeartRecord.class, net.studioblueplanet.tomtomwatch.TrackerProto.HeartRecord.Builder.class);
      }

      // Construct using net.studioblueplanet.tomtomwatch.TrackerProto.HeartRecord.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        time_ = 0;
        bitField0_ = (bitField0_ & ~0x00000001);
        interval_ = 0;
        bitField0_ = (bitField0_ & ~0x00000002);
        heartRate_ = 0;
        bitField0_ = (bitField0_ & ~0x00000004);
        value01_ = 0;
        bitField0_ = (bitField0_ & ~0x00000008);
        value02_ = 0;
        bitField0_ = (bitField0_ & ~0x00000010);
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return net.studioblueplanet.tomtomwatch.TrackerProto.internal_static_tutorial_HeartRecord_descriptor;
      }

      @java.lang.Override
      public net.studioblueplanet.tomtomwatch.TrackerProto.HeartRecord getDefaultInstanceForType() {
        return net.studioblueplanet.tomtomwatch.TrackerProto.HeartRecord.getDefaultInstance();
      }

      @java.lang.Override
      public net.studioblueplanet.tomtomwatch.TrackerProto.HeartRecord build() {
        net.studioblueplanet.tomtomwatch.TrackerProto.HeartRecord result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public net.studioblueplanet.tomtomwatch.TrackerProto.HeartRecord buildPartial() {
        net.studioblueplanet.tomtomwatch.TrackerProto.HeartRecord result = new net.studioblueplanet.tomtomwatch.TrackerProto.HeartRecord(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) != 0)) {
          result.time_ = time_;
          to_bitField0_ |= 0x00000001;
        }
        if (((from_bitField0_ & 0x00000002) != 0)) {
          result.interval_ = interval_;
          to_bitField0_ |= 0x00000002;
        }
        if (((from_bitField0_ & 0x00000004) != 0)) {
          result.heartRate_ = heartRate_;
          to_bitField0_ |= 0x00000004;
        }
        if (((from_bitField0_ & 0x00000008) != 0)) {
          result.value01_ = value01_;
          to_bitField0_ |= 0x00000008;
        }
        if (((from_bitField0_ & 0x00000010) != 0)) {
          result.value02_ = value02_;
          to_bitField0_ |= 0x00000010;
        }
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof net.studioblueplanet.tomtomwatch.TrackerProto.HeartRecord) {
          return mergeFrom((net.studioblueplanet.tomtomwatch.TrackerProto.HeartRecord)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(net.studioblueplanet.tomtomwatch.TrackerProto.HeartRecord other) {
        if (other == net.studioblueplanet.tomtomwatch.TrackerProto.HeartRecord.getDefaultInstance()) return this;
        if (other.hasTime()) {
          setTime(other.getTime());
        }
        if (other.hasInterval()) {
          setInterval(other.getInterval());
        }
        if (other.hasHeartRate()) {
          setHeartRate(other.getHeartRate());
        }
        if (other.hasValue01()) {
          setValue01(other.getValue01());
        }
        if (other.hasValue02()) {
          setValue02(other.getValue02());
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        if (!hasTime()) {
          return false;
        }
        if (!hasInterval()) {
          return false;
        }
        if (!hasHeartRate()) {
          return false;
        }
        if (!hasValue01()) {
          return false;
        }
        if (!hasValue02()) {
          return false;
        }
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        net.studioblueplanet.tomtomwatch.TrackerProto.HeartRecord parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (net.studioblueplanet.tomtomwatch.TrackerProto.HeartRecord) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private int time_ ;
      /**
       * <pre>
       * Epoch time in seconds, 900 s interval = 15 min
       * </pre>
       *
       * <code>required fixed32 time = 1;</code>
       */
      public boolean hasTime() {
        return ((bitField0_ & 0x00000001) != 0);
      }
      /**
       * <pre>
       * Epoch time in seconds, 900 s interval = 15 min
       * </pre>
       *
       * <code>required fixed32 time = 1;</code>
       */
      public int getTime() {
        return time_;
      }
      /**
       * <pre>
       * Epoch time in seconds, 900 s interval = 15 min
       * </pre>
       *
       * <code>required fixed32 time = 1;</code>
       */
      public Builder setTime(int value) {
        bitField0_ |= 0x00000001;
        time_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Epoch time in seconds, 900 s interval = 15 min
       * </pre>
       *
       * <code>required fixed32 time = 1;</code>
       */
      public Builder clearTime() {
        bitField0_ = (bitField0_ & ~0x00000001);
        time_ = 0;
        onChanged();
        return this;
      }

      private int interval_ ;
      /**
       * <pre>
       * Interval in seconds?? 14400=4h
       * </pre>
       *
       * <code>required int32 interval = 2;</code>
       */
      public boolean hasInterval() {
        return ((bitField0_ & 0x00000002) != 0);
      }
      /**
       * <pre>
       * Interval in seconds?? 14400=4h
       * </pre>
       *
       * <code>required int32 interval = 2;</code>
       */
      public int getInterval() {
        return interval_;
      }
      /**
       * <pre>
       * Interval in seconds?? 14400=4h
       * </pre>
       *
       * <code>required int32 interval = 2;</code>
       */
      public Builder setInterval(int value) {
        bitField0_ |= 0x00000002;
        interval_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Interval in seconds?? 14400=4h
       * </pre>
       *
       * <code>required int32 interval = 2;</code>
       */
      public Builder clearInterval() {
        bitField0_ = (bitField0_ & ~0x00000002);
        interval_ = 0;
        onChanged();
        return this;
      }

      private int heartRate_ ;
      /**
       * <pre>
       * Heartrate in bpm. This value is displayed by TomTom MySports
       * </pre>
       *
       * <code>required int32 heartRate = 3;</code>
       */
      public boolean hasHeartRate() {
        return ((bitField0_ & 0x00000004) != 0);
      }
      /**
       * <pre>
       * Heartrate in bpm. This value is displayed by TomTom MySports
       * </pre>
       *
       * <code>required int32 heartRate = 3;</code>
       */
      public int getHeartRate() {
        return heartRate_;
      }
      /**
       * <pre>
       * Heartrate in bpm. This value is displayed by TomTom MySports
       * </pre>
       *
       * <code>required int32 heartRate = 3;</code>
       */
      public Builder setHeartRate(int value) {
        bitField0_ |= 0x00000004;
        heartRate_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Heartrate in bpm. This value is displayed by TomTom MySports
       * </pre>
       *
       * <code>required int32 heartRate = 3;</code>
       */
      public Builder clearHeartRate() {
        bitField0_ = (bitField0_ & ~0x00000004);
        heartRate_ = 0;
        onChanged();
        return this;
      }

      private int value01_ ;
      /**
       * <pre>
       * Some other heartrate value
       * </pre>
       *
       * <code>required int32 value01 = 4;</code>
       */
      public boolean hasValue01() {
        return ((bitField0_ & 0x00000008) != 0);
      }
      /**
       * <pre>
       * Some other heartrate value
       * </pre>
       *
       * <code>required int32 value01 = 4;</code>
       */
      public int getValue01() {
        return value01_;
      }
      /**
       * <pre>
       * Some other heartrate value
       * </pre>
       *
       * <code>required int32 value01 = 4;</code>
       */
      public Builder setValue01(int value) {
        bitField0_ |= 0x00000008;
        value01_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Some other heartrate value
       * </pre>
       *
       * <code>required int32 value01 = 4;</code>
       */
      public Builder clearValue01() {
        bitField0_ = (bitField0_ & ~0x00000008);
        value01_ = 0;
        onChanged();
        return this;
      }

      private int value02_ ;
      /**
       * <pre>
       * ?
       * </pre>
       *
       * <code>required int32 value02 = 5;</code>
       */
      public boolean hasValue02() {
        return ((bitField0_ & 0x00000010) != 0);
      }
      /**
       * <pre>
       * ?
       * </pre>
       *
       * <code>required int32 value02 = 5;</code>
       */
      public int getValue02() {
        return value02_;
      }
      /**
       * <pre>
       * ?
       * </pre>
       *
       * <code>required int32 value02 = 5;</code>
       */
      public Builder setValue02(int value) {
        bitField0_ |= 0x00000010;
        value02_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * ?
       * </pre>
       *
       * <code>required int32 value02 = 5;</code>
       */
      public Builder clearValue02() {
        bitField0_ = (bitField0_ & ~0x00000010);
        value02_ = 0;
        onChanged();
        return this;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:tutorial.HeartRecord)
    }

    // @@protoc_insertion_point(class_scope:tutorial.HeartRecord)
    private static final net.studioblueplanet.tomtomwatch.TrackerProto.HeartRecord DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new net.studioblueplanet.tomtomwatch.TrackerProto.HeartRecord();
    }

    public static net.studioblueplanet.tomtomwatch.TrackerProto.HeartRecord getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    @java.lang.Deprecated public static final com.google.protobuf.Parser<HeartRecord>
        PARSER = new com.google.protobuf.AbstractParser<HeartRecord>() {
      @java.lang.Override
      public HeartRecord parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new HeartRecord(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<HeartRecord> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<HeartRecord> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public net.studioblueplanet.tomtomwatch.TrackerProto.HeartRecord getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface Record4OrBuilder extends
      // @@protoc_insertion_point(interface_extends:tutorial.Record4)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     * Epoch time in seconds, 900 s interval = 15 min
     * </pre>
     *
     * <code>required fixed32 time = 1;</code>
     */
    boolean hasTime();
    /**
     * <pre>
     * Epoch time in seconds, 900 s interval = 15 min
     * </pre>
     *
     * <code>required fixed32 time = 1;</code>
     */
    int getTime();

    /**
     * <pre>
     * Interval in seconds?? 14400=4h or 14280=3h58'???
     * </pre>
     *
     * <code>required int32 interval = 2;</code>
     */
    boolean hasInterval();
    /**
     * <pre>
     * Interval in seconds?? 14400=4h or 14280=3h58'???
     * </pre>
     *
     * <code>required int32 interval = 2;</code>
     */
    int getInterval();

    /**
     * <pre>
     * 6 values in the message
     * </pre>
     *
     * <code>repeated int32 value = 3;</code>
     */
    java.util.List<java.lang.Integer> getValueList();
    /**
     * <pre>
     * 6 values in the message
     * </pre>
     *
     * <code>repeated int32 value = 3;</code>
     */
    int getValueCount();
    /**
     * <pre>
     * 6 values in the message
     * </pre>
     *
     * <code>repeated int32 value = 3;</code>
     */
    int getValue(int index);
  }
  /**
   * Protobuf type {@code tutorial.Record4}
   */
  public  static final class Record4 extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:tutorial.Record4)
      Record4OrBuilder {
  private static final long serialVersionUID = 0L;
    // Use Record4.newBuilder() to construct.
    private Record4(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private Record4() {
      value_ = emptyIntList();
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new Record4();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private Record4(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 13: {
              bitField0_ |= 0x00000001;
              time_ = input.readFixed32();
              break;
            }
            case 16: {
              bitField0_ |= 0x00000002;
              interval_ = input.readInt32();
              break;
            }
            case 24: {
              if (!((mutable_bitField0_ & 0x00000004) != 0)) {
                value_ = newIntList();
                mutable_bitField0_ |= 0x00000004;
              }
              value_.addInt(input.readInt32());
              break;
            }
            case 26: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              if (!((mutable_bitField0_ & 0x00000004) != 0) && input.getBytesUntilLimit() > 0) {
                value_ = newIntList();
                mutable_bitField0_ |= 0x00000004;
              }
              while (input.getBytesUntilLimit() > 0) {
                value_.addInt(input.readInt32());
              }
              input.popLimit(limit);
              break;
            }
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000004) != 0)) {
          value_.makeImmutable(); // C
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return net.studioblueplanet.tomtomwatch.TrackerProto.internal_static_tutorial_Record4_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return net.studioblueplanet.tomtomwatch.TrackerProto.internal_static_tutorial_Record4_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              net.studioblueplanet.tomtomwatch.TrackerProto.Record4.class, net.studioblueplanet.tomtomwatch.TrackerProto.Record4.Builder.class);
    }

    private int bitField0_;
    public static final int TIME_FIELD_NUMBER = 1;
    private int time_;
    /**
     * <pre>
     * Epoch time in seconds, 900 s interval = 15 min
     * </pre>
     *
     * <code>required fixed32 time = 1;</code>
     */
    public boolean hasTime() {
      return ((bitField0_ & 0x00000001) != 0);
    }
    /**
     * <pre>
     * Epoch time in seconds, 900 s interval = 15 min
     * </pre>
     *
     * <code>required fixed32 time = 1;</code>
     */
    public int getTime() {
      return time_;
    }

    public static final int INTERVAL_FIELD_NUMBER = 2;
    private int interval_;
    /**
     * <pre>
     * Interval in seconds?? 14400=4h or 14280=3h58'???
     * </pre>
     *
     * <code>required int32 interval = 2;</code>
     */
    public boolean hasInterval() {
      return ((bitField0_ & 0x00000002) != 0);
    }
    /**
     * <pre>
     * Interval in seconds?? 14400=4h or 14280=3h58'???
     * </pre>
     *
     * <code>required int32 interval = 2;</code>
     */
    public int getInterval() {
      return interval_;
    }

    public static final int VALUE_FIELD_NUMBER = 3;
    private com.google.protobuf.Internal.IntList value_;
    /**
     * <pre>
     * 6 values in the message
     * </pre>
     *
     * <code>repeated int32 value = 3;</code>
     */
    public java.util.List<java.lang.Integer>
        getValueList() {
      return value_;
    }
    /**
     * <pre>
     * 6 values in the message
     * </pre>
     *
     * <code>repeated int32 value = 3;</code>
     */
    public int getValueCount() {
      return value_.size();
    }
    /**
     * <pre>
     * 6 values in the message
     * </pre>
     *
     * <code>repeated int32 value = 3;</code>
     */
    public int getValue(int index) {
      return value_.getInt(index);
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      if (!hasTime()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasInterval()) {
        memoizedIsInitialized = 0;
        return false;
      }
      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (((bitField0_ & 0x00000001) != 0)) {
        output.writeFixed32(1, time_);
      }
      if (((bitField0_ & 0x00000002) != 0)) {
        output.writeInt32(2, interval_);
      }
      for (int i = 0; i < value_.size(); i++) {
        output.writeInt32(3, value_.getInt(i));
      }
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeFixed32Size(1, time_);
      }
      if (((bitField0_ & 0x00000002) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(2, interval_);
      }
      {
        int dataSize = 0;
        for (int i = 0; i < value_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeInt32SizeNoTag(value_.getInt(i));
        }
        size += dataSize;
        size += 1 * getValueList().size();
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof net.studioblueplanet.tomtomwatch.TrackerProto.Record4)) {
        return super.equals(obj);
      }
      net.studioblueplanet.tomtomwatch.TrackerProto.Record4 other = (net.studioblueplanet.tomtomwatch.TrackerProto.Record4) obj;

      if (hasTime() != other.hasTime()) return false;
      if (hasTime()) {
        if (getTime()
            != other.getTime()) return false;
      }
      if (hasInterval() != other.hasInterval()) return false;
      if (hasInterval()) {
        if (getInterval()
            != other.getInterval()) return false;
      }
      if (!getValueList()
          .equals(other.getValueList())) return false;
      if (!unknownFields.equals(other.unknownFields)) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (hasTime()) {
        hash = (37 * hash) + TIME_FIELD_NUMBER;
        hash = (53 * hash) + getTime();
      }
      if (hasInterval()) {
        hash = (37 * hash) + INTERVAL_FIELD_NUMBER;
        hash = (53 * hash) + getInterval();
      }
      if (getValueCount() > 0) {
        hash = (37 * hash) + VALUE_FIELD_NUMBER;
        hash = (53 * hash) + getValueList().hashCode();
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static net.studioblueplanet.tomtomwatch.TrackerProto.Record4 parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static net.studioblueplanet.tomtomwatch.TrackerProto.Record4 parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static net.studioblueplanet.tomtomwatch.TrackerProto.Record4 parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static net.studioblueplanet.tomtomwatch.TrackerProto.Record4 parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static net.studioblueplanet.tomtomwatch.TrackerProto.Record4 parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static net.studioblueplanet.tomtomwatch.TrackerProto.Record4 parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static net.studioblueplanet.tomtomwatch.TrackerProto.Record4 parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static net.studioblueplanet.tomtomwatch.TrackerProto.Record4 parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static net.studioblueplanet.tomtomwatch.TrackerProto.Record4 parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static net.studioblueplanet.tomtomwatch.TrackerProto.Record4 parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static net.studioblueplanet.tomtomwatch.TrackerProto.Record4 parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static net.studioblueplanet.tomtomwatch.TrackerProto.Record4 parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(net.studioblueplanet.tomtomwatch.TrackerProto.Record4 prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code tutorial.Record4}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:tutorial.Record4)
        net.studioblueplanet.tomtomwatch.TrackerProto.Record4OrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return net.studioblueplanet.tomtomwatch.TrackerProto.internal_static_tutorial_Record4_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return net.studioblueplanet.tomtomwatch.TrackerProto.internal_static_tutorial_Record4_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                net.studioblueplanet.tomtomwatch.TrackerProto.Record4.class, net.studioblueplanet.tomtomwatch.TrackerProto.Record4.Builder.class);
      }

      // Construct using net.studioblueplanet.tomtomwatch.TrackerProto.Record4.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        time_ = 0;
        bitField0_ = (bitField0_ & ~0x00000001);
        interval_ = 0;
        bitField0_ = (bitField0_ & ~0x00000002);
        value_ = emptyIntList();
        bitField0_ = (bitField0_ & ~0x00000004);
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return net.studioblueplanet.tomtomwatch.TrackerProto.internal_static_tutorial_Record4_descriptor;
      }

      @java.lang.Override
      public net.studioblueplanet.tomtomwatch.TrackerProto.Record4 getDefaultInstanceForType() {
        return net.studioblueplanet.tomtomwatch.TrackerProto.Record4.getDefaultInstance();
      }

      @java.lang.Override
      public net.studioblueplanet.tomtomwatch.TrackerProto.Record4 build() {
        net.studioblueplanet.tomtomwatch.TrackerProto.Record4 result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public net.studioblueplanet.tomtomwatch.TrackerProto.Record4 buildPartial() {
        net.studioblueplanet.tomtomwatch.TrackerProto.Record4 result = new net.studioblueplanet.tomtomwatch.TrackerProto.Record4(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) != 0)) {
          result.time_ = time_;
          to_bitField0_ |= 0x00000001;
        }
        if (((from_bitField0_ & 0x00000002) != 0)) {
          result.interval_ = interval_;
          to_bitField0_ |= 0x00000002;
        }
        if (((bitField0_ & 0x00000004) != 0)) {
          value_.makeImmutable();
          bitField0_ = (bitField0_ & ~0x00000004);
        }
        result.value_ = value_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof net.studioblueplanet.tomtomwatch.TrackerProto.Record4) {
          return mergeFrom((net.studioblueplanet.tomtomwatch.TrackerProto.Record4)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(net.studioblueplanet.tomtomwatch.TrackerProto.Record4 other) {
        if (other == net.studioblueplanet.tomtomwatch.TrackerProto.Record4.getDefaultInstance()) return this;
        if (other.hasTime()) {
          setTime(other.getTime());
        }
        if (other.hasInterval()) {
          setInterval(other.getInterval());
        }
        if (!other.value_.isEmpty()) {
          if (value_.isEmpty()) {
            value_ = other.value_;
            bitField0_ = (bitField0_ & ~0x00000004);
          } else {
            ensureValueIsMutable();
            value_.addAll(other.value_);
          }
          onChanged();
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        if (!hasTime()) {
          return false;
        }
        if (!hasInterval()) {
          return false;
        }
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        net.studioblueplanet.tomtomwatch.TrackerProto.Record4 parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (net.studioblueplanet.tomtomwatch.TrackerProto.Record4) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private int time_ ;
      /**
       * <pre>
       * Epoch time in seconds, 900 s interval = 15 min
       * </pre>
       *
       * <code>required fixed32 time = 1;</code>
       */
      public boolean hasTime() {
        return ((bitField0_ & 0x00000001) != 0);
      }
      /**
       * <pre>
       * Epoch time in seconds, 900 s interval = 15 min
       * </pre>
       *
       * <code>required fixed32 time = 1;</code>
       */
      public int getTime() {
        return time_;
      }
      /**
       * <pre>
       * Epoch time in seconds, 900 s interval = 15 min
       * </pre>
       *
       * <code>required fixed32 time = 1;</code>
       */
      public Builder setTime(int value) {
        bitField0_ |= 0x00000001;
        time_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Epoch time in seconds, 900 s interval = 15 min
       * </pre>
       *
       * <code>required fixed32 time = 1;</code>
       */
      public Builder clearTime() {
        bitField0_ = (bitField0_ & ~0x00000001);
        time_ = 0;
        onChanged();
        return this;
      }

      private int interval_ ;
      /**
       * <pre>
       * Interval in seconds?? 14400=4h or 14280=3h58'???
       * </pre>
       *
       * <code>required int32 interval = 2;</code>
       */
      public boolean hasInterval() {
        return ((bitField0_ & 0x00000002) != 0);
      }
      /**
       * <pre>
       * Interval in seconds?? 14400=4h or 14280=3h58'???
       * </pre>
       *
       * <code>required int32 interval = 2;</code>
       */
      public int getInterval() {
        return interval_;
      }
      /**
       * <pre>
       * Interval in seconds?? 14400=4h or 14280=3h58'???
       * </pre>
       *
       * <code>required int32 interval = 2;</code>
       */
      public Builder setInterval(int value) {
        bitField0_ |= 0x00000002;
        interval_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Interval in seconds?? 14400=4h or 14280=3h58'???
       * </pre>
       *
       * <code>required int32 interval = 2;</code>
       */
      public Builder clearInterval() {
        bitField0_ = (bitField0_ & ~0x00000002);
        interval_ = 0;
        onChanged();
        return this;
      }

      private com.google.protobuf.Internal.IntList value_ = emptyIntList();
      private void ensureValueIsMutable() {
        if (!((bitField0_ & 0x00000004) != 0)) {
          value_ = mutableCopy(value_);
          bitField0_ |= 0x00000004;
         }
      }
      /**
       * <pre>
       * 6 values in the message
       * </pre>
       *
       * <code>repeated int32 value = 3;</code>
       */
      public java.util.List<java.lang.Integer>
          getValueList() {
        return ((bitField0_ & 0x00000004) != 0) ?
                 java.util.Collections.unmodifiableList(value_) : value_;
      }
      /**
       * <pre>
       * 6 values in the message
       * </pre>
       *
       * <code>repeated int32 value = 3;</code>
       */
      public int getValueCount() {
        return value_.size();
      }
      /**
       * <pre>
       * 6 values in the message
       * </pre>
       *
       * <code>repeated int32 value = 3;</code>
       */
      public int getValue(int index) {
        return value_.getInt(index);
      }
      /**
       * <pre>
       * 6 values in the message
       * </pre>
       *
       * <code>repeated int32 value = 3;</code>
       */
      public Builder setValue(
          int index, int value) {
        ensureValueIsMutable();
        value_.setInt(index, value);
        onChanged();
        return this;
      }
      /**
       * <pre>
       * 6 values in the message
       * </pre>
       *
       * <code>repeated int32 value = 3;</code>
       */
      public Builder addValue(int value) {
        ensureValueIsMutable();
        value_.addInt(value);
        onChanged();
        return this;
      }
      /**
       * <pre>
       * 6 values in the message
       * </pre>
       *
       * <code>repeated int32 value = 3;</code>
       */
      public Builder addAllValue(
          java.lang.Iterable<? extends java.lang.Integer> values) {
        ensureValueIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, value_);
        onChanged();
        return this;
      }
      /**
       * <pre>
       * 6 values in the message
       * </pre>
       *
       * <code>repeated int32 value = 3;</code>
       */
      public Builder clearValue() {
        value_ = emptyIntList();
        bitField0_ = (bitField0_ & ~0x00000004);
        onChanged();
        return this;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:tutorial.Record4)
    }

    // @@protoc_insertion_point(class_scope:tutorial.Record4)
    private static final net.studioblueplanet.tomtomwatch.TrackerProto.Record4 DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new net.studioblueplanet.tomtomwatch.TrackerProto.Record4();
    }

    public static net.studioblueplanet.tomtomwatch.TrackerProto.Record4 getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    @java.lang.Deprecated public static final com.google.protobuf.Parser<Record4>
        PARSER = new com.google.protobuf.AbstractParser<Record4>() {
      @java.lang.Override
      public Record4 parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new Record4(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<Record4> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<Record4> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public net.studioblueplanet.tomtomwatch.TrackerProto.Record4 getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface UserDataOrBuilder extends
      // @@protoc_insertion_point(interface_extends:tutorial.UserData)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>required string version = 1;</code>
     */
    boolean hasVersion();
    /**
     * <code>required string version = 1;</code>
     */
    java.lang.String getVersion();
    /**
     * <code>required string version = 1;</code>
     */
    com.google.protobuf.ByteString
        getVersionBytes();

    /**
     * <code>required int32 unknown1 = 2;</code>
     */
    boolean hasUnknown1();
    /**
     * <code>required int32 unknown1 = 2;</code>
     */
    int getUnknown1();

    /**
     * <code>required int32 unknown2 = 3;</code>
     */
    boolean hasUnknown2();
    /**
     * <code>required int32 unknown2 = 3;</code>
     */
    int getUnknown2();

    /**
     * <code>required int32 unknown3 = 4;</code>
     */
    boolean hasUnknown3();
    /**
     * <code>required int32 unknown3 = 4;</code>
     */
    int getUnknown3();

    /**
     * <pre>
     * Users heigth in cm 
     * </pre>
     *
     * <code>required int32 length = 5;</code>
     */
    boolean hasLength();
    /**
     * <pre>
     * Users heigth in cm 
     * </pre>
     *
     * <code>required int32 length = 5;</code>
     */
    int getLength();

    /**
     * <pre>
     * User weight              
     * </pre>
     *
     * <code>required int32 weight = 6;</code>
     */
    boolean hasWeight();
    /**
     * <pre>
     * User weight              
     * </pre>
     *
     * <code>required int32 weight = 6;</code>
     */
    int getWeight();

    /**
     * <code>required int32 unknown4 = 7;</code>
     */
    boolean hasUnknown4();
    /**
     * <code>required int32 unknown4 = 7;</code>
     */
    int getUnknown4();

    /**
     * <code>required int32 unknown5 = 8;</code>
     */
    boolean hasUnknown5();
    /**
     * <code>required int32 unknown5 = 8;</code>
     */
    int getUnknown5();

    /**
     * <code>required int32 unknown6 = 9;</code>
     */
    boolean hasUnknown6();
    /**
     * <code>required int32 unknown6 = 9;</code>
     */
    int getUnknown6();

    /**
     * <code>required int32 unknown7 = 10;</code>
     */
    boolean hasUnknown7();
    /**
     * <code>required int32 unknown7 = 10;</code>
     */
    int getUnknown7();

    /**
     * <code>required int32 unknown8 = 11;</code>
     */
    boolean hasUnknown8();
    /**
     * <code>required int32 unknown8 = 11;</code>
     */
    int getUnknown8();

    /**
     * <code>required int32 unknown9 = 12;</code>
     */
    boolean hasUnknown9();
    /**
     * <code>required int32 unknown9 = 12;</code>
     */
    int getUnknown9();

    /**
     * <code>required int32 unknown10 = 13;</code>
     */
    boolean hasUnknown10();
    /**
     * <code>required int32 unknown10 = 13;</code>
     */
    int getUnknown10();

    /**
     * <code>required int32 unknown13 = 16;</code>
     */
    boolean hasUnknown13();
    /**
     * <code>required int32 unknown13 = 16;</code>
     */
    int getUnknown13();

    /**
     * <code>required int32 unknown14 = 17;</code>
     */
    boolean hasUnknown14();
    /**
     * <code>required int32 unknown14 = 17;</code>
     */
    int getUnknown14();

    /**
     * <code>required int32 unknown15 = 18;</code>
     */
    boolean hasUnknown15();
    /**
     * <code>required int32 unknown15 = 18;</code>
     */
    int getUnknown15();

    /**
     * <code>required int32 unknown16 = 19;</code>
     */
    boolean hasUnknown16();
    /**
     * <code>required int32 unknown16 = 19;</code>
     */
    int getUnknown16();
  }
  /**
   * Protobuf type {@code tutorial.UserData}
   */
  public  static final class UserData extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:tutorial.UserData)
      UserDataOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use UserData.newBuilder() to construct.
    private UserData(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private UserData() {
      version_ = "";
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new UserData();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private UserData(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 10: {
              com.google.protobuf.ByteString bs = input.readBytes();
              bitField0_ |= 0x00000001;
              version_ = bs;
              break;
            }
            case 16: {
              bitField0_ |= 0x00000002;
              unknown1_ = input.readInt32();
              break;
            }
            case 24: {
              bitField0_ |= 0x00000004;
              unknown2_ = input.readInt32();
              break;
            }
            case 32: {
              bitField0_ |= 0x00000008;
              unknown3_ = input.readInt32();
              break;
            }
            case 40: {
              bitField0_ |= 0x00000010;
              length_ = input.readInt32();
              break;
            }
            case 48: {
              bitField0_ |= 0x00000020;
              weight_ = input.readInt32();
              break;
            }
            case 56: {
              bitField0_ |= 0x00000040;
              unknown4_ = input.readInt32();
              break;
            }
            case 64: {
              bitField0_ |= 0x00000080;
              unknown5_ = input.readInt32();
              break;
            }
            case 72: {
              bitField0_ |= 0x00000100;
              unknown6_ = input.readInt32();
              break;
            }
            case 80: {
              bitField0_ |= 0x00000200;
              unknown7_ = input.readInt32();
              break;
            }
            case 88: {
              bitField0_ |= 0x00000400;
              unknown8_ = input.readInt32();
              break;
            }
            case 96: {
              bitField0_ |= 0x00000800;
              unknown9_ = input.readInt32();
              break;
            }
            case 104: {
              bitField0_ |= 0x00001000;
              unknown10_ = input.readInt32();
              break;
            }
            case 128: {
              bitField0_ |= 0x00002000;
              unknown13_ = input.readInt32();
              break;
            }
            case 136: {
              bitField0_ |= 0x00004000;
              unknown14_ = input.readInt32();
              break;
            }
            case 144: {
              bitField0_ |= 0x00008000;
              unknown15_ = input.readInt32();
              break;
            }
            case 152: {
              bitField0_ |= 0x00010000;
              unknown16_ = input.readInt32();
              break;
            }
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return net.studioblueplanet.tomtomwatch.TrackerProto.internal_static_tutorial_UserData_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return net.studioblueplanet.tomtomwatch.TrackerProto.internal_static_tutorial_UserData_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              net.studioblueplanet.tomtomwatch.TrackerProto.UserData.class, net.studioblueplanet.tomtomwatch.TrackerProto.UserData.Builder.class);
    }

    private int bitField0_;
    public static final int VERSION_FIELD_NUMBER = 1;
    private volatile java.lang.Object version_;
    /**
     * <code>required string version = 1;</code>
     */
    public boolean hasVersion() {
      return ((bitField0_ & 0x00000001) != 0);
    }
    /**
     * <code>required string version = 1;</code>
     */
    public java.lang.String getVersion() {
      java.lang.Object ref = version_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          version_ = s;
        }
        return s;
      }
    }
    /**
     * <code>required string version = 1;</code>
     */
    public com.google.protobuf.ByteString
        getVersionBytes() {
      java.lang.Object ref = version_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        version_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int UNKNOWN1_FIELD_NUMBER = 2;
    private int unknown1_;
    /**
     * <code>required int32 unknown1 = 2;</code>
     */
    public boolean hasUnknown1() {
      return ((bitField0_ & 0x00000002) != 0);
    }
    /**
     * <code>required int32 unknown1 = 2;</code>
     */
    public int getUnknown1() {
      return unknown1_;
    }

    public static final int UNKNOWN2_FIELD_NUMBER = 3;
    private int unknown2_;
    /**
     * <code>required int32 unknown2 = 3;</code>
     */
    public boolean hasUnknown2() {
      return ((bitField0_ & 0x00000004) != 0);
    }
    /**
     * <code>required int32 unknown2 = 3;</code>
     */
    public int getUnknown2() {
      return unknown2_;
    }

    public static final int UNKNOWN3_FIELD_NUMBER = 4;
    private int unknown3_;
    /**
     * <code>required int32 unknown3 = 4;</code>
     */
    public boolean hasUnknown3() {
      return ((bitField0_ & 0x00000008) != 0);
    }
    /**
     * <code>required int32 unknown3 = 4;</code>
     */
    public int getUnknown3() {
      return unknown3_;
    }

    public static final int LENGTH_FIELD_NUMBER = 5;
    private int length_;
    /**
     * <pre>
     * Users heigth in cm 
     * </pre>
     *
     * <code>required int32 length = 5;</code>
     */
    public boolean hasLength() {
      return ((bitField0_ & 0x00000010) != 0);
    }
    /**
     * <pre>
     * Users heigth in cm 
     * </pre>
     *
     * <code>required int32 length = 5;</code>
     */
    public int getLength() {
      return length_;
    }

    public static final int WEIGHT_FIELD_NUMBER = 6;
    private int weight_;
    /**
     * <pre>
     * User weight              
     * </pre>
     *
     * <code>required int32 weight = 6;</code>
     */
    public boolean hasWeight() {
      return ((bitField0_ & 0x00000020) != 0);
    }
    /**
     * <pre>
     * User weight              
     * </pre>
     *
     * <code>required int32 weight = 6;</code>
     */
    public int getWeight() {
      return weight_;
    }

    public static final int UNKNOWN4_FIELD_NUMBER = 7;
    private int unknown4_;
    /**
     * <code>required int32 unknown4 = 7;</code>
     */
    public boolean hasUnknown4() {
      return ((bitField0_ & 0x00000040) != 0);
    }
    /**
     * <code>required int32 unknown4 = 7;</code>
     */
    public int getUnknown4() {
      return unknown4_;
    }

    public static final int UNKNOWN5_FIELD_NUMBER = 8;
    private int unknown5_;
    /**
     * <code>required int32 unknown5 = 8;</code>
     */
    public boolean hasUnknown5() {
      return ((bitField0_ & 0x00000080) != 0);
    }
    /**
     * <code>required int32 unknown5 = 8;</code>
     */
    public int getUnknown5() {
      return unknown5_;
    }

    public static final int UNKNOWN6_FIELD_NUMBER = 9;
    private int unknown6_;
    /**
     * <code>required int32 unknown6 = 9;</code>
     */
    public boolean hasUnknown6() {
      return ((bitField0_ & 0x00000100) != 0);
    }
    /**
     * <code>required int32 unknown6 = 9;</code>
     */
    public int getUnknown6() {
      return unknown6_;
    }

    public static final int UNKNOWN7_FIELD_NUMBER = 10;
    private int unknown7_;
    /**
     * <code>required int32 unknown7 = 10;</code>
     */
    public boolean hasUnknown7() {
      return ((bitField0_ & 0x00000200) != 0);
    }
    /**
     * <code>required int32 unknown7 = 10;</code>
     */
    public int getUnknown7() {
      return unknown7_;
    }

    public static final int UNKNOWN8_FIELD_NUMBER = 11;
    private int unknown8_;
    /**
     * <code>required int32 unknown8 = 11;</code>
     */
    public boolean hasUnknown8() {
      return ((bitField0_ & 0x00000400) != 0);
    }
    /**
     * <code>required int32 unknown8 = 11;</code>
     */
    public int getUnknown8() {
      return unknown8_;
    }

    public static final int UNKNOWN9_FIELD_NUMBER = 12;
    private int unknown9_;
    /**
     * <code>required int32 unknown9 = 12;</code>
     */
    public boolean hasUnknown9() {
      return ((bitField0_ & 0x00000800) != 0);
    }
    /**
     * <code>required int32 unknown9 = 12;</code>
     */
    public int getUnknown9() {
      return unknown9_;
    }

    public static final int UNKNOWN10_FIELD_NUMBER = 13;
    private int unknown10_;
    /**
     * <code>required int32 unknown10 = 13;</code>
     */
    public boolean hasUnknown10() {
      return ((bitField0_ & 0x00001000) != 0);
    }
    /**
     * <code>required int32 unknown10 = 13;</code>
     */
    public int getUnknown10() {
      return unknown10_;
    }

    public static final int UNKNOWN13_FIELD_NUMBER = 16;
    private int unknown13_;
    /**
     * <code>required int32 unknown13 = 16;</code>
     */
    public boolean hasUnknown13() {
      return ((bitField0_ & 0x00002000) != 0);
    }
    /**
     * <code>required int32 unknown13 = 16;</code>
     */
    public int getUnknown13() {
      return unknown13_;
    }

    public static final int UNKNOWN14_FIELD_NUMBER = 17;
    private int unknown14_;
    /**
     * <code>required int32 unknown14 = 17;</code>
     */
    public boolean hasUnknown14() {
      return ((bitField0_ & 0x00004000) != 0);
    }
    /**
     * <code>required int32 unknown14 = 17;</code>
     */
    public int getUnknown14() {
      return unknown14_;
    }

    public static final int UNKNOWN15_FIELD_NUMBER = 18;
    private int unknown15_;
    /**
     * <code>required int32 unknown15 = 18;</code>
     */
    public boolean hasUnknown15() {
      return ((bitField0_ & 0x00008000) != 0);
    }
    /**
     * <code>required int32 unknown15 = 18;</code>
     */
    public int getUnknown15() {
      return unknown15_;
    }

    public static final int UNKNOWN16_FIELD_NUMBER = 19;
    private int unknown16_;
    /**
     * <code>required int32 unknown16 = 19;</code>
     */
    public boolean hasUnknown16() {
      return ((bitField0_ & 0x00010000) != 0);
    }
    /**
     * <code>required int32 unknown16 = 19;</code>
     */
    public int getUnknown16() {
      return unknown16_;
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      if (!hasVersion()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasUnknown1()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasUnknown2()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasUnknown3()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasLength()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasWeight()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasUnknown4()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasUnknown5()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasUnknown6()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasUnknown7()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasUnknown8()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasUnknown9()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasUnknown10()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasUnknown13()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasUnknown14()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasUnknown15()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasUnknown16()) {
        memoizedIsInitialized = 0;
        return false;
      }
      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (((bitField0_ & 0x00000001) != 0)) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 1, version_);
      }
      if (((bitField0_ & 0x00000002) != 0)) {
        output.writeInt32(2, unknown1_);
      }
      if (((bitField0_ & 0x00000004) != 0)) {
        output.writeInt32(3, unknown2_);
      }
      if (((bitField0_ & 0x00000008) != 0)) {
        output.writeInt32(4, unknown3_);
      }
      if (((bitField0_ & 0x00000010) != 0)) {
        output.writeInt32(5, length_);
      }
      if (((bitField0_ & 0x00000020) != 0)) {
        output.writeInt32(6, weight_);
      }
      if (((bitField0_ & 0x00000040) != 0)) {
        output.writeInt32(7, unknown4_);
      }
      if (((bitField0_ & 0x00000080) != 0)) {
        output.writeInt32(8, unknown5_);
      }
      if (((bitField0_ & 0x00000100) != 0)) {
        output.writeInt32(9, unknown6_);
      }
      if (((bitField0_ & 0x00000200) != 0)) {
        output.writeInt32(10, unknown7_);
      }
      if (((bitField0_ & 0x00000400) != 0)) {
        output.writeInt32(11, unknown8_);
      }
      if (((bitField0_ & 0x00000800) != 0)) {
        output.writeInt32(12, unknown9_);
      }
      if (((bitField0_ & 0x00001000) != 0)) {
        output.writeInt32(13, unknown10_);
      }
      if (((bitField0_ & 0x00002000) != 0)) {
        output.writeInt32(16, unknown13_);
      }
      if (((bitField0_ & 0x00004000) != 0)) {
        output.writeInt32(17, unknown14_);
      }
      if (((bitField0_ & 0x00008000) != 0)) {
        output.writeInt32(18, unknown15_);
      }
      if (((bitField0_ & 0x00010000) != 0)) {
        output.writeInt32(19, unknown16_);
      }
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) != 0)) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(1, version_);
      }
      if (((bitField0_ & 0x00000002) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(2, unknown1_);
      }
      if (((bitField0_ & 0x00000004) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(3, unknown2_);
      }
      if (((bitField0_ & 0x00000008) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(4, unknown3_);
      }
      if (((bitField0_ & 0x00000010) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(5, length_);
      }
      if (((bitField0_ & 0x00000020) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(6, weight_);
      }
      if (((bitField0_ & 0x00000040) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(7, unknown4_);
      }
      if (((bitField0_ & 0x00000080) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(8, unknown5_);
      }
      if (((bitField0_ & 0x00000100) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(9, unknown6_);
      }
      if (((bitField0_ & 0x00000200) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(10, unknown7_);
      }
      if (((bitField0_ & 0x00000400) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(11, unknown8_);
      }
      if (((bitField0_ & 0x00000800) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(12, unknown9_);
      }
      if (((bitField0_ & 0x00001000) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(13, unknown10_);
      }
      if (((bitField0_ & 0x00002000) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(16, unknown13_);
      }
      if (((bitField0_ & 0x00004000) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(17, unknown14_);
      }
      if (((bitField0_ & 0x00008000) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(18, unknown15_);
      }
      if (((bitField0_ & 0x00010000) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(19, unknown16_);
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof net.studioblueplanet.tomtomwatch.TrackerProto.UserData)) {
        return super.equals(obj);
      }
      net.studioblueplanet.tomtomwatch.TrackerProto.UserData other = (net.studioblueplanet.tomtomwatch.TrackerProto.UserData) obj;

      if (hasVersion() != other.hasVersion()) return false;
      if (hasVersion()) {
        if (!getVersion()
            .equals(other.getVersion())) return false;
      }
      if (hasUnknown1() != other.hasUnknown1()) return false;
      if (hasUnknown1()) {
        if (getUnknown1()
            != other.getUnknown1()) return false;
      }
      if (hasUnknown2() != other.hasUnknown2()) return false;
      if (hasUnknown2()) {
        if (getUnknown2()
            != other.getUnknown2()) return false;
      }
      if (hasUnknown3() != other.hasUnknown3()) return false;
      if (hasUnknown3()) {
        if (getUnknown3()
            != other.getUnknown3()) return false;
      }
      if (hasLength() != other.hasLength()) return false;
      if (hasLength()) {
        if (getLength()
            != other.getLength()) return false;
      }
      if (hasWeight() != other.hasWeight()) return false;
      if (hasWeight()) {
        if (getWeight()
            != other.getWeight()) return false;
      }
      if (hasUnknown4() != other.hasUnknown4()) return false;
      if (hasUnknown4()) {
        if (getUnknown4()
            != other.getUnknown4()) return false;
      }
      if (hasUnknown5() != other.hasUnknown5()) return false;
      if (hasUnknown5()) {
        if (getUnknown5()
            != other.getUnknown5()) return false;
      }
      if (hasUnknown6() != other.hasUnknown6()) return false;
      if (hasUnknown6()) {
        if (getUnknown6()
            != other.getUnknown6()) return false;
      }
      if (hasUnknown7() != other.hasUnknown7()) return false;
      if (hasUnknown7()) {
        if (getUnknown7()
            != other.getUnknown7()) return false;
      }
      if (hasUnknown8() != other.hasUnknown8()) return false;
      if (hasUnknown8()) {
        if (getUnknown8()
            != other.getUnknown8()) return false;
      }
      if (hasUnknown9() != other.hasUnknown9()) return false;
      if (hasUnknown9()) {
        if (getUnknown9()
            != other.getUnknown9()) return false;
      }
      if (hasUnknown10() != other.hasUnknown10()) return false;
      if (hasUnknown10()) {
        if (getUnknown10()
            != other.getUnknown10()) return false;
      }
      if (hasUnknown13() != other.hasUnknown13()) return false;
      if (hasUnknown13()) {
        if (getUnknown13()
            != other.getUnknown13()) return false;
      }
      if (hasUnknown14() != other.hasUnknown14()) return false;
      if (hasUnknown14()) {
        if (getUnknown14()
            != other.getUnknown14()) return false;
      }
      if (hasUnknown15() != other.hasUnknown15()) return false;
      if (hasUnknown15()) {
        if (getUnknown15()
            != other.getUnknown15()) return false;
      }
      if (hasUnknown16() != other.hasUnknown16()) return false;
      if (hasUnknown16()) {
        if (getUnknown16()
            != other.getUnknown16()) return false;
      }
      if (!unknownFields.equals(other.unknownFields)) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (hasVersion()) {
        hash = (37 * hash) + VERSION_FIELD_NUMBER;
        hash = (53 * hash) + getVersion().hashCode();
      }
      if (hasUnknown1()) {
        hash = (37 * hash) + UNKNOWN1_FIELD_NUMBER;
        hash = (53 * hash) + getUnknown1();
      }
      if (hasUnknown2()) {
        hash = (37 * hash) + UNKNOWN2_FIELD_NUMBER;
        hash = (53 * hash) + getUnknown2();
      }
      if (hasUnknown3()) {
        hash = (37 * hash) + UNKNOWN3_FIELD_NUMBER;
        hash = (53 * hash) + getUnknown3();
      }
      if (hasLength()) {
        hash = (37 * hash) + LENGTH_FIELD_NUMBER;
        hash = (53 * hash) + getLength();
      }
      if (hasWeight()) {
        hash = (37 * hash) + WEIGHT_FIELD_NUMBER;
        hash = (53 * hash) + getWeight();
      }
      if (hasUnknown4()) {
        hash = (37 * hash) + UNKNOWN4_FIELD_NUMBER;
        hash = (53 * hash) + getUnknown4();
      }
      if (hasUnknown5()) {
        hash = (37 * hash) + UNKNOWN5_FIELD_NUMBER;
        hash = (53 * hash) + getUnknown5();
      }
      if (hasUnknown6()) {
        hash = (37 * hash) + UNKNOWN6_FIELD_NUMBER;
        hash = (53 * hash) + getUnknown6();
      }
      if (hasUnknown7()) {
        hash = (37 * hash) + UNKNOWN7_FIELD_NUMBER;
        hash = (53 * hash) + getUnknown7();
      }
      if (hasUnknown8()) {
        hash = (37 * hash) + UNKNOWN8_FIELD_NUMBER;
        hash = (53 * hash) + getUnknown8();
      }
      if (hasUnknown9()) {
        hash = (37 * hash) + UNKNOWN9_FIELD_NUMBER;
        hash = (53 * hash) + getUnknown9();
      }
      if (hasUnknown10()) {
        hash = (37 * hash) + UNKNOWN10_FIELD_NUMBER;
        hash = (53 * hash) + getUnknown10();
      }
      if (hasUnknown13()) {
        hash = (37 * hash) + UNKNOWN13_FIELD_NUMBER;
        hash = (53 * hash) + getUnknown13();
      }
      if (hasUnknown14()) {
        hash = (37 * hash) + UNKNOWN14_FIELD_NUMBER;
        hash = (53 * hash) + getUnknown14();
      }
      if (hasUnknown15()) {
        hash = (37 * hash) + UNKNOWN15_FIELD_NUMBER;
        hash = (53 * hash) + getUnknown15();
      }
      if (hasUnknown16()) {
        hash = (37 * hash) + UNKNOWN16_FIELD_NUMBER;
        hash = (53 * hash) + getUnknown16();
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static net.studioblueplanet.tomtomwatch.TrackerProto.UserData parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static net.studioblueplanet.tomtomwatch.TrackerProto.UserData parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static net.studioblueplanet.tomtomwatch.TrackerProto.UserData parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static net.studioblueplanet.tomtomwatch.TrackerProto.UserData parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static net.studioblueplanet.tomtomwatch.TrackerProto.UserData parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static net.studioblueplanet.tomtomwatch.TrackerProto.UserData parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static net.studioblueplanet.tomtomwatch.TrackerProto.UserData parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static net.studioblueplanet.tomtomwatch.TrackerProto.UserData parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static net.studioblueplanet.tomtomwatch.TrackerProto.UserData parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static net.studioblueplanet.tomtomwatch.TrackerProto.UserData parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static net.studioblueplanet.tomtomwatch.TrackerProto.UserData parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static net.studioblueplanet.tomtomwatch.TrackerProto.UserData parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(net.studioblueplanet.tomtomwatch.TrackerProto.UserData prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code tutorial.UserData}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:tutorial.UserData)
        net.studioblueplanet.tomtomwatch.TrackerProto.UserDataOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return net.studioblueplanet.tomtomwatch.TrackerProto.internal_static_tutorial_UserData_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return net.studioblueplanet.tomtomwatch.TrackerProto.internal_static_tutorial_UserData_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                net.studioblueplanet.tomtomwatch.TrackerProto.UserData.class, net.studioblueplanet.tomtomwatch.TrackerProto.UserData.Builder.class);
      }

      // Construct using net.studioblueplanet.tomtomwatch.TrackerProto.UserData.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        version_ = "";
        bitField0_ = (bitField0_ & ~0x00000001);
        unknown1_ = 0;
        bitField0_ = (bitField0_ & ~0x00000002);
        unknown2_ = 0;
        bitField0_ = (bitField0_ & ~0x00000004);
        unknown3_ = 0;
        bitField0_ = (bitField0_ & ~0x00000008);
        length_ = 0;
        bitField0_ = (bitField0_ & ~0x00000010);
        weight_ = 0;
        bitField0_ = (bitField0_ & ~0x00000020);
        unknown4_ = 0;
        bitField0_ = (bitField0_ & ~0x00000040);
        unknown5_ = 0;
        bitField0_ = (bitField0_ & ~0x00000080);
        unknown6_ = 0;
        bitField0_ = (bitField0_ & ~0x00000100);
        unknown7_ = 0;
        bitField0_ = (bitField0_ & ~0x00000200);
        unknown8_ = 0;
        bitField0_ = (bitField0_ & ~0x00000400);
        unknown9_ = 0;
        bitField0_ = (bitField0_ & ~0x00000800);
        unknown10_ = 0;
        bitField0_ = (bitField0_ & ~0x00001000);
        unknown13_ = 0;
        bitField0_ = (bitField0_ & ~0x00002000);
        unknown14_ = 0;
        bitField0_ = (bitField0_ & ~0x00004000);
        unknown15_ = 0;
        bitField0_ = (bitField0_ & ~0x00008000);
        unknown16_ = 0;
        bitField0_ = (bitField0_ & ~0x00010000);
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return net.studioblueplanet.tomtomwatch.TrackerProto.internal_static_tutorial_UserData_descriptor;
      }

      @java.lang.Override
      public net.studioblueplanet.tomtomwatch.TrackerProto.UserData getDefaultInstanceForType() {
        return net.studioblueplanet.tomtomwatch.TrackerProto.UserData.getDefaultInstance();
      }

      @java.lang.Override
      public net.studioblueplanet.tomtomwatch.TrackerProto.UserData build() {
        net.studioblueplanet.tomtomwatch.TrackerProto.UserData result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public net.studioblueplanet.tomtomwatch.TrackerProto.UserData buildPartial() {
        net.studioblueplanet.tomtomwatch.TrackerProto.UserData result = new net.studioblueplanet.tomtomwatch.TrackerProto.UserData(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) != 0)) {
          to_bitField0_ |= 0x00000001;
        }
        result.version_ = version_;
        if (((from_bitField0_ & 0x00000002) != 0)) {
          result.unknown1_ = unknown1_;
          to_bitField0_ |= 0x00000002;
        }
        if (((from_bitField0_ & 0x00000004) != 0)) {
          result.unknown2_ = unknown2_;
          to_bitField0_ |= 0x00000004;
        }
        if (((from_bitField0_ & 0x00000008) != 0)) {
          result.unknown3_ = unknown3_;
          to_bitField0_ |= 0x00000008;
        }
        if (((from_bitField0_ & 0x00000010) != 0)) {
          result.length_ = length_;
          to_bitField0_ |= 0x00000010;
        }
        if (((from_bitField0_ & 0x00000020) != 0)) {
          result.weight_ = weight_;
          to_bitField0_ |= 0x00000020;
        }
        if (((from_bitField0_ & 0x00000040) != 0)) {
          result.unknown4_ = unknown4_;
          to_bitField0_ |= 0x00000040;
        }
        if (((from_bitField0_ & 0x00000080) != 0)) {
          result.unknown5_ = unknown5_;
          to_bitField0_ |= 0x00000080;
        }
        if (((from_bitField0_ & 0x00000100) != 0)) {
          result.unknown6_ = unknown6_;
          to_bitField0_ |= 0x00000100;
        }
        if (((from_bitField0_ & 0x00000200) != 0)) {
          result.unknown7_ = unknown7_;
          to_bitField0_ |= 0x00000200;
        }
        if (((from_bitField0_ & 0x00000400) != 0)) {
          result.unknown8_ = unknown8_;
          to_bitField0_ |= 0x00000400;
        }
        if (((from_bitField0_ & 0x00000800) != 0)) {
          result.unknown9_ = unknown9_;
          to_bitField0_ |= 0x00000800;
        }
        if (((from_bitField0_ & 0x00001000) != 0)) {
          result.unknown10_ = unknown10_;
          to_bitField0_ |= 0x00001000;
        }
        if (((from_bitField0_ & 0x00002000) != 0)) {
          result.unknown13_ = unknown13_;
          to_bitField0_ |= 0x00002000;
        }
        if (((from_bitField0_ & 0x00004000) != 0)) {
          result.unknown14_ = unknown14_;
          to_bitField0_ |= 0x00004000;
        }
        if (((from_bitField0_ & 0x00008000) != 0)) {
          result.unknown15_ = unknown15_;
          to_bitField0_ |= 0x00008000;
        }
        if (((from_bitField0_ & 0x00010000) != 0)) {
          result.unknown16_ = unknown16_;
          to_bitField0_ |= 0x00010000;
        }
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof net.studioblueplanet.tomtomwatch.TrackerProto.UserData) {
          return mergeFrom((net.studioblueplanet.tomtomwatch.TrackerProto.UserData)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(net.studioblueplanet.tomtomwatch.TrackerProto.UserData other) {
        if (other == net.studioblueplanet.tomtomwatch.TrackerProto.UserData.getDefaultInstance()) return this;
        if (other.hasVersion()) {
          bitField0_ |= 0x00000001;
          version_ = other.version_;
          onChanged();
        }
        if (other.hasUnknown1()) {
          setUnknown1(other.getUnknown1());
        }
        if (other.hasUnknown2()) {
          setUnknown2(other.getUnknown2());
        }
        if (other.hasUnknown3()) {
          setUnknown3(other.getUnknown3());
        }
        if (other.hasLength()) {
          setLength(other.getLength());
        }
        if (other.hasWeight()) {
          setWeight(other.getWeight());
        }
        if (other.hasUnknown4()) {
          setUnknown4(other.getUnknown4());
        }
        if (other.hasUnknown5()) {
          setUnknown5(other.getUnknown5());
        }
        if (other.hasUnknown6()) {
          setUnknown6(other.getUnknown6());
        }
        if (other.hasUnknown7()) {
          setUnknown7(other.getUnknown7());
        }
        if (other.hasUnknown8()) {
          setUnknown8(other.getUnknown8());
        }
        if (other.hasUnknown9()) {
          setUnknown9(other.getUnknown9());
        }
        if (other.hasUnknown10()) {
          setUnknown10(other.getUnknown10());
        }
        if (other.hasUnknown13()) {
          setUnknown13(other.getUnknown13());
        }
        if (other.hasUnknown14()) {
          setUnknown14(other.getUnknown14());
        }
        if (other.hasUnknown15()) {
          setUnknown15(other.getUnknown15());
        }
        if (other.hasUnknown16()) {
          setUnknown16(other.getUnknown16());
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        if (!hasVersion()) {
          return false;
        }
        if (!hasUnknown1()) {
          return false;
        }
        if (!hasUnknown2()) {
          return false;
        }
        if (!hasUnknown3()) {
          return false;
        }
        if (!hasLength()) {
          return false;
        }
        if (!hasWeight()) {
          return false;
        }
        if (!hasUnknown4()) {
          return false;
        }
        if (!hasUnknown5()) {
          return false;
        }
        if (!hasUnknown6()) {
          return false;
        }
        if (!hasUnknown7()) {
          return false;
        }
        if (!hasUnknown8()) {
          return false;
        }
        if (!hasUnknown9()) {
          return false;
        }
        if (!hasUnknown10()) {
          return false;
        }
        if (!hasUnknown13()) {
          return false;
        }
        if (!hasUnknown14()) {
          return false;
        }
        if (!hasUnknown15()) {
          return false;
        }
        if (!hasUnknown16()) {
          return false;
        }
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        net.studioblueplanet.tomtomwatch.TrackerProto.UserData parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (net.studioblueplanet.tomtomwatch.TrackerProto.UserData) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private java.lang.Object version_ = "";
      /**
       * <code>required string version = 1;</code>
       */
      public boolean hasVersion() {
        return ((bitField0_ & 0x00000001) != 0);
      }
      /**
       * <code>required string version = 1;</code>
       */
      public java.lang.String getVersion() {
        java.lang.Object ref = version_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          if (bs.isValidUtf8()) {
            version_ = s;
          }
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>required string version = 1;</code>
       */
      public com.google.protobuf.ByteString
          getVersionBytes() {
        java.lang.Object ref = version_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          version_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>required string version = 1;</code>
       */
      public Builder setVersion(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
        version_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required string version = 1;</code>
       */
      public Builder clearVersion() {
        bitField0_ = (bitField0_ & ~0x00000001);
        version_ = getDefaultInstance().getVersion();
        onChanged();
        return this;
      }
      /**
       * <code>required string version = 1;</code>
       */
      public Builder setVersionBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
        version_ = value;
        onChanged();
        return this;
      }

      private int unknown1_ ;
      /**
       * <code>required int32 unknown1 = 2;</code>
       */
      public boolean hasUnknown1() {
        return ((bitField0_ & 0x00000002) != 0);
      }
      /**
       * <code>required int32 unknown1 = 2;</code>
       */
      public int getUnknown1() {
        return unknown1_;
      }
      /**
       * <code>required int32 unknown1 = 2;</code>
       */
      public Builder setUnknown1(int value) {
        bitField0_ |= 0x00000002;
        unknown1_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required int32 unknown1 = 2;</code>
       */
      public Builder clearUnknown1() {
        bitField0_ = (bitField0_ & ~0x00000002);
        unknown1_ = 0;
        onChanged();
        return this;
      }

      private int unknown2_ ;
      /**
       * <code>required int32 unknown2 = 3;</code>
       */
      public boolean hasUnknown2() {
        return ((bitField0_ & 0x00000004) != 0);
      }
      /**
       * <code>required int32 unknown2 = 3;</code>
       */
      public int getUnknown2() {
        return unknown2_;
      }
      /**
       * <code>required int32 unknown2 = 3;</code>
       */
      public Builder setUnknown2(int value) {
        bitField0_ |= 0x00000004;
        unknown2_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required int32 unknown2 = 3;</code>
       */
      public Builder clearUnknown2() {
        bitField0_ = (bitField0_ & ~0x00000004);
        unknown2_ = 0;
        onChanged();
        return this;
      }

      private int unknown3_ ;
      /**
       * <code>required int32 unknown3 = 4;</code>
       */
      public boolean hasUnknown3() {
        return ((bitField0_ & 0x00000008) != 0);
      }
      /**
       * <code>required int32 unknown3 = 4;</code>
       */
      public int getUnknown3() {
        return unknown3_;
      }
      /**
       * <code>required int32 unknown3 = 4;</code>
       */
      public Builder setUnknown3(int value) {
        bitField0_ |= 0x00000008;
        unknown3_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required int32 unknown3 = 4;</code>
       */
      public Builder clearUnknown3() {
        bitField0_ = (bitField0_ & ~0x00000008);
        unknown3_ = 0;
        onChanged();
        return this;
      }

      private int length_ ;
      /**
       * <pre>
       * Users heigth in cm 
       * </pre>
       *
       * <code>required int32 length = 5;</code>
       */
      public boolean hasLength() {
        return ((bitField0_ & 0x00000010) != 0);
      }
      /**
       * <pre>
       * Users heigth in cm 
       * </pre>
       *
       * <code>required int32 length = 5;</code>
       */
      public int getLength() {
        return length_;
      }
      /**
       * <pre>
       * Users heigth in cm 
       * </pre>
       *
       * <code>required int32 length = 5;</code>
       */
      public Builder setLength(int value) {
        bitField0_ |= 0x00000010;
        length_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Users heigth in cm 
       * </pre>
       *
       * <code>required int32 length = 5;</code>
       */
      public Builder clearLength() {
        bitField0_ = (bitField0_ & ~0x00000010);
        length_ = 0;
        onChanged();
        return this;
      }

      private int weight_ ;
      /**
       * <pre>
       * User weight              
       * </pre>
       *
       * <code>required int32 weight = 6;</code>
       */
      public boolean hasWeight() {
        return ((bitField0_ & 0x00000020) != 0);
      }
      /**
       * <pre>
       * User weight              
       * </pre>
       *
       * <code>required int32 weight = 6;</code>
       */
      public int getWeight() {
        return weight_;
      }
      /**
       * <pre>
       * User weight              
       * </pre>
       *
       * <code>required int32 weight = 6;</code>
       */
      public Builder setWeight(int value) {
        bitField0_ |= 0x00000020;
        weight_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * User weight              
       * </pre>
       *
       * <code>required int32 weight = 6;</code>
       */
      public Builder clearWeight() {
        bitField0_ = (bitField0_ & ~0x00000020);
        weight_ = 0;
        onChanged();
        return this;
      }

      private int unknown4_ ;
      /**
       * <code>required int32 unknown4 = 7;</code>
       */
      public boolean hasUnknown4() {
        return ((bitField0_ & 0x00000040) != 0);
      }
      /**
       * <code>required int32 unknown4 = 7;</code>
       */
      public int getUnknown4() {
        return unknown4_;
      }
      /**
       * <code>required int32 unknown4 = 7;</code>
       */
      public Builder setUnknown4(int value) {
        bitField0_ |= 0x00000040;
        unknown4_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required int32 unknown4 = 7;</code>
       */
      public Builder clearUnknown4() {
        bitField0_ = (bitField0_ & ~0x00000040);
        unknown4_ = 0;
        onChanged();
        return this;
      }

      private int unknown5_ ;
      /**
       * <code>required int32 unknown5 = 8;</code>
       */
      public boolean hasUnknown5() {
        return ((bitField0_ & 0x00000080) != 0);
      }
      /**
       * <code>required int32 unknown5 = 8;</code>
       */
      public int getUnknown5() {
        return unknown5_;
      }
      /**
       * <code>required int32 unknown5 = 8;</code>
       */
      public Builder setUnknown5(int value) {
        bitField0_ |= 0x00000080;
        unknown5_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required int32 unknown5 = 8;</code>
       */
      public Builder clearUnknown5() {
        bitField0_ = (bitField0_ & ~0x00000080);
        unknown5_ = 0;
        onChanged();
        return this;
      }

      private int unknown6_ ;
      /**
       * <code>required int32 unknown6 = 9;</code>
       */
      public boolean hasUnknown6() {
        return ((bitField0_ & 0x00000100) != 0);
      }
      /**
       * <code>required int32 unknown6 = 9;</code>
       */
      public int getUnknown6() {
        return unknown6_;
      }
      /**
       * <code>required int32 unknown6 = 9;</code>
       */
      public Builder setUnknown6(int value) {
        bitField0_ |= 0x00000100;
        unknown6_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required int32 unknown6 = 9;</code>
       */
      public Builder clearUnknown6() {
        bitField0_ = (bitField0_ & ~0x00000100);
        unknown6_ = 0;
        onChanged();
        return this;
      }

      private int unknown7_ ;
      /**
       * <code>required int32 unknown7 = 10;</code>
       */
      public boolean hasUnknown7() {
        return ((bitField0_ & 0x00000200) != 0);
      }
      /**
       * <code>required int32 unknown7 = 10;</code>
       */
      public int getUnknown7() {
        return unknown7_;
      }
      /**
       * <code>required int32 unknown7 = 10;</code>
       */
      public Builder setUnknown7(int value) {
        bitField0_ |= 0x00000200;
        unknown7_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required int32 unknown7 = 10;</code>
       */
      public Builder clearUnknown7() {
        bitField0_ = (bitField0_ & ~0x00000200);
        unknown7_ = 0;
        onChanged();
        return this;
      }

      private int unknown8_ ;
      /**
       * <code>required int32 unknown8 = 11;</code>
       */
      public boolean hasUnknown8() {
        return ((bitField0_ & 0x00000400) != 0);
      }
      /**
       * <code>required int32 unknown8 = 11;</code>
       */
      public int getUnknown8() {
        return unknown8_;
      }
      /**
       * <code>required int32 unknown8 = 11;</code>
       */
      public Builder setUnknown8(int value) {
        bitField0_ |= 0x00000400;
        unknown8_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required int32 unknown8 = 11;</code>
       */
      public Builder clearUnknown8() {
        bitField0_ = (bitField0_ & ~0x00000400);
        unknown8_ = 0;
        onChanged();
        return this;
      }

      private int unknown9_ ;
      /**
       * <code>required int32 unknown9 = 12;</code>
       */
      public boolean hasUnknown9() {
        return ((bitField0_ & 0x00000800) != 0);
      }
      /**
       * <code>required int32 unknown9 = 12;</code>
       */
      public int getUnknown9() {
        return unknown9_;
      }
      /**
       * <code>required int32 unknown9 = 12;</code>
       */
      public Builder setUnknown9(int value) {
        bitField0_ |= 0x00000800;
        unknown9_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required int32 unknown9 = 12;</code>
       */
      public Builder clearUnknown9() {
        bitField0_ = (bitField0_ & ~0x00000800);
        unknown9_ = 0;
        onChanged();
        return this;
      }

      private int unknown10_ ;
      /**
       * <code>required int32 unknown10 = 13;</code>
       */
      public boolean hasUnknown10() {
        return ((bitField0_ & 0x00001000) != 0);
      }
      /**
       * <code>required int32 unknown10 = 13;</code>
       */
      public int getUnknown10() {
        return unknown10_;
      }
      /**
       * <code>required int32 unknown10 = 13;</code>
       */
      public Builder setUnknown10(int value) {
        bitField0_ |= 0x00001000;
        unknown10_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required int32 unknown10 = 13;</code>
       */
      public Builder clearUnknown10() {
        bitField0_ = (bitField0_ & ~0x00001000);
        unknown10_ = 0;
        onChanged();
        return this;
      }

      private int unknown13_ ;
      /**
       * <code>required int32 unknown13 = 16;</code>
       */
      public boolean hasUnknown13() {
        return ((bitField0_ & 0x00002000) != 0);
      }
      /**
       * <code>required int32 unknown13 = 16;</code>
       */
      public int getUnknown13() {
        return unknown13_;
      }
      /**
       * <code>required int32 unknown13 = 16;</code>
       */
      public Builder setUnknown13(int value) {
        bitField0_ |= 0x00002000;
        unknown13_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required int32 unknown13 = 16;</code>
       */
      public Builder clearUnknown13() {
        bitField0_ = (bitField0_ & ~0x00002000);
        unknown13_ = 0;
        onChanged();
        return this;
      }

      private int unknown14_ ;
      /**
       * <code>required int32 unknown14 = 17;</code>
       */
      public boolean hasUnknown14() {
        return ((bitField0_ & 0x00004000) != 0);
      }
      /**
       * <code>required int32 unknown14 = 17;</code>
       */
      public int getUnknown14() {
        return unknown14_;
      }
      /**
       * <code>required int32 unknown14 = 17;</code>
       */
      public Builder setUnknown14(int value) {
        bitField0_ |= 0x00004000;
        unknown14_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required int32 unknown14 = 17;</code>
       */
      public Builder clearUnknown14() {
        bitField0_ = (bitField0_ & ~0x00004000);
        unknown14_ = 0;
        onChanged();
        return this;
      }

      private int unknown15_ ;
      /**
       * <code>required int32 unknown15 = 18;</code>
       */
      public boolean hasUnknown15() {
        return ((bitField0_ & 0x00008000) != 0);
      }
      /**
       * <code>required int32 unknown15 = 18;</code>
       */
      public int getUnknown15() {
        return unknown15_;
      }
      /**
       * <code>required int32 unknown15 = 18;</code>
       */
      public Builder setUnknown15(int value) {
        bitField0_ |= 0x00008000;
        unknown15_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required int32 unknown15 = 18;</code>
       */
      public Builder clearUnknown15() {
        bitField0_ = (bitField0_ & ~0x00008000);
        unknown15_ = 0;
        onChanged();
        return this;
      }

      private int unknown16_ ;
      /**
       * <code>required int32 unknown16 = 19;</code>
       */
      public boolean hasUnknown16() {
        return ((bitField0_ & 0x00010000) != 0);
      }
      /**
       * <code>required int32 unknown16 = 19;</code>
       */
      public int getUnknown16() {
        return unknown16_;
      }
      /**
       * <code>required int32 unknown16 = 19;</code>
       */
      public Builder setUnknown16(int value) {
        bitField0_ |= 0x00010000;
        unknown16_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required int32 unknown16 = 19;</code>
       */
      public Builder clearUnknown16() {
        bitField0_ = (bitField0_ & ~0x00010000);
        unknown16_ = 0;
        onChanged();
        return this;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:tutorial.UserData)
    }

    // @@protoc_insertion_point(class_scope:tutorial.UserData)
    private static final net.studioblueplanet.tomtomwatch.TrackerProto.UserData DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new net.studioblueplanet.tomtomwatch.TrackerProto.UserData();
    }

    public static net.studioblueplanet.tomtomwatch.TrackerProto.UserData getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    @java.lang.Deprecated public static final com.google.protobuf.Parser<UserData>
        PARSER = new com.google.protobuf.AbstractParser<UserData>() {
      @java.lang.Override
      public UserData parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new UserData(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<UserData> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<UserData> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public net.studioblueplanet.tomtomwatch.TrackerProto.UserData getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface FitnessRecordOrBuilder extends
      // @@protoc_insertion_point(interface_extends:tutorial.FitnessRecord)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     * Epoch time in seconds, 120 s interval = 2 min during activity
     * </pre>
     *
     * <code>required int32 time = 2;</code>
     */
    boolean hasTime();
    /**
     * <pre>
     * Epoch time in seconds, 120 s interval = 2 min during activity
     * </pre>
     *
     * <code>required int32 time = 2;</code>
     */
    int getTime();

    /**
     * <pre>
     * Interval in seconds?? 14280=238 min = 3h58'??
     * </pre>
     *
     * <code>required int32 interval = 3;</code>
     */
    boolean hasInterval();
    /**
     * <pre>
     * Interval in seconds?? 14280=238 min = 3h58'??
     * </pre>
     *
     * <code>required int32 interval = 3;</code>
     */
    int getInterval();

    /**
     * <pre>
     * User data
     * </pre>
     *
     * <code>optional .tutorial.UserData userData = 5;</code>
     */
    boolean hasUserData();
    /**
     * <pre>
     * User data
     * </pre>
     *
     * <code>optional .tutorial.UserData userData = 5;</code>
     */
    net.studioblueplanet.tomtomwatch.TrackerProto.UserData getUserData();
    /**
     * <pre>
     * User data
     * </pre>
     *
     * <code>optional .tutorial.UserData userData = 5;</code>
     */
    net.studioblueplanet.tomtomwatch.TrackerProto.UserDataOrBuilder getUserDataOrBuilder();

    /**
     * <code>optional int32 unknown1 = 7;</code>
     */
    boolean hasUnknown1();
    /**
     * <code>optional int32 unknown1 = 7;</code>
     */
    int getUnknown1();

    /**
     * <code>optional int32 unknown2 = 8;</code>
     */
    boolean hasUnknown2();
    /**
     * <code>optional int32 unknown2 = 8;</code>
     */
    int getUnknown2();

    /**
     * <code>optional int32 unknown3 = 10;</code>
     */
    boolean hasUnknown3();
    /**
     * <code>optional int32 unknown3 = 10;</code>
     */
    int getUnknown3();

    /**
     * <code>optional int32 unknown4 = 11;</code>
     */
    boolean hasUnknown4();
    /**
     * <code>optional int32 unknown4 = 11;</code>
     */
    int getUnknown4();

    /**
     * <code>optional int32 unknown5 = 12;</code>
     */
    boolean hasUnknown5();
    /**
     * <code>optional int32 unknown5 = 12;</code>
     */
    int getUnknown5();

    /**
     * <pre>
     * Cummulative TomTom activity points counter
     * </pre>
     *
     * <code>required int32 fitnessPoints1 = 15;</code>
     */
    boolean hasFitnessPoints1();
    /**
     * <pre>
     * Cummulative TomTom activity points counter
     * </pre>
     *
     * <code>required int32 fitnessPoints1 = 15;</code>
     */
    int getFitnessPoints1();

    /**
     * <pre>
     * Cummulative TomTom activity points counter
     * </pre>
     *
     * <code>required int32 fitnessPoints2 = 16;</code>
     */
    boolean hasFitnessPoints2();
    /**
     * <pre>
     * Cummulative TomTom activity points counter
     * </pre>
     *
     * <code>required int32 fitnessPoints2 = 16;</code>
     */
    int getFitnessPoints2();
  }
  /**
   * Protobuf type {@code tutorial.FitnessRecord}
   */
  public  static final class FitnessRecord extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:tutorial.FitnessRecord)
      FitnessRecordOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use FitnessRecord.newBuilder() to construct.
    private FitnessRecord(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private FitnessRecord() {
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new FitnessRecord();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private FitnessRecord(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 16: {
              bitField0_ |= 0x00000001;
              time_ = input.readInt32();
              break;
            }
            case 24: {
              bitField0_ |= 0x00000002;
              interval_ = input.readInt32();
              break;
            }
            case 42: {
              net.studioblueplanet.tomtomwatch.TrackerProto.UserData.Builder subBuilder = null;
              if (((bitField0_ & 0x00000004) != 0)) {
                subBuilder = userData_.toBuilder();
              }
              userData_ = input.readMessage(net.studioblueplanet.tomtomwatch.TrackerProto.UserData.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(userData_);
                userData_ = subBuilder.buildPartial();
              }
              bitField0_ |= 0x00000004;
              break;
            }
            case 56: {
              bitField0_ |= 0x00000008;
              unknown1_ = input.readInt32();
              break;
            }
            case 64: {
              bitField0_ |= 0x00000010;
              unknown2_ = input.readInt32();
              break;
            }
            case 80: {
              bitField0_ |= 0x00000020;
              unknown3_ = input.readInt32();
              break;
            }
            case 88: {
              bitField0_ |= 0x00000040;
              unknown4_ = input.readInt32();
              break;
            }
            case 96: {
              bitField0_ |= 0x00000080;
              unknown5_ = input.readInt32();
              break;
            }
            case 120: {
              bitField0_ |= 0x00000100;
              fitnessPoints1_ = input.readInt32();
              break;
            }
            case 128: {
              bitField0_ |= 0x00000200;
              fitnessPoints2_ = input.readInt32();
              break;
            }
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return net.studioblueplanet.tomtomwatch.TrackerProto.internal_static_tutorial_FitnessRecord_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return net.studioblueplanet.tomtomwatch.TrackerProto.internal_static_tutorial_FitnessRecord_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              net.studioblueplanet.tomtomwatch.TrackerProto.FitnessRecord.class, net.studioblueplanet.tomtomwatch.TrackerProto.FitnessRecord.Builder.class);
    }

    private int bitField0_;
    public static final int TIME_FIELD_NUMBER = 2;
    private int time_;
    /**
     * <pre>
     * Epoch time in seconds, 120 s interval = 2 min during activity
     * </pre>
     *
     * <code>required int32 time = 2;</code>
     */
    public boolean hasTime() {
      return ((bitField0_ & 0x00000001) != 0);
    }
    /**
     * <pre>
     * Epoch time in seconds, 120 s interval = 2 min during activity
     * </pre>
     *
     * <code>required int32 time = 2;</code>
     */
    public int getTime() {
      return time_;
    }

    public static final int INTERVAL_FIELD_NUMBER = 3;
    private int interval_;
    /**
     * <pre>
     * Interval in seconds?? 14280=238 min = 3h58'??
     * </pre>
     *
     * <code>required int32 interval = 3;</code>
     */
    public boolean hasInterval() {
      return ((bitField0_ & 0x00000002) != 0);
    }
    /**
     * <pre>
     * Interval in seconds?? 14280=238 min = 3h58'??
     * </pre>
     *
     * <code>required int32 interval = 3;</code>
     */
    public int getInterval() {
      return interval_;
    }

    public static final int USERDATA_FIELD_NUMBER = 5;
    private net.studioblueplanet.tomtomwatch.TrackerProto.UserData userData_;
    /**
     * <pre>
     * User data
     * </pre>
     *
     * <code>optional .tutorial.UserData userData = 5;</code>
     */
    public boolean hasUserData() {
      return ((bitField0_ & 0x00000004) != 0);
    }
    /**
     * <pre>
     * User data
     * </pre>
     *
     * <code>optional .tutorial.UserData userData = 5;</code>
     */
    public net.studioblueplanet.tomtomwatch.TrackerProto.UserData getUserData() {
      return userData_ == null ? net.studioblueplanet.tomtomwatch.TrackerProto.UserData.getDefaultInstance() : userData_;
    }
    /**
     * <pre>
     * User data
     * </pre>
     *
     * <code>optional .tutorial.UserData userData = 5;</code>
     */
    public net.studioblueplanet.tomtomwatch.TrackerProto.UserDataOrBuilder getUserDataOrBuilder() {
      return userData_ == null ? net.studioblueplanet.tomtomwatch.TrackerProto.UserData.getDefaultInstance() : userData_;
    }

    public static final int UNKNOWN1_FIELD_NUMBER = 7;
    private int unknown1_;
    /**
     * <code>optional int32 unknown1 = 7;</code>
     */
    public boolean hasUnknown1() {
      return ((bitField0_ & 0x00000008) != 0);
    }
    /**
     * <code>optional int32 unknown1 = 7;</code>
     */
    public int getUnknown1() {
      return unknown1_;
    }

    public static final int UNKNOWN2_FIELD_NUMBER = 8;
    private int unknown2_;
    /**
     * <code>optional int32 unknown2 = 8;</code>
     */
    public boolean hasUnknown2() {
      return ((bitField0_ & 0x00000010) != 0);
    }
    /**
     * <code>optional int32 unknown2 = 8;</code>
     */
    public int getUnknown2() {
      return unknown2_;
    }

    public static final int UNKNOWN3_FIELD_NUMBER = 10;
    private int unknown3_;
    /**
     * <code>optional int32 unknown3 = 10;</code>
     */
    public boolean hasUnknown3() {
      return ((bitField0_ & 0x00000020) != 0);
    }
    /**
     * <code>optional int32 unknown3 = 10;</code>
     */
    public int getUnknown3() {
      return unknown3_;
    }

    public static final int UNKNOWN4_FIELD_NUMBER = 11;
    private int unknown4_;
    /**
     * <code>optional int32 unknown4 = 11;</code>
     */
    public boolean hasUnknown4() {
      return ((bitField0_ & 0x00000040) != 0);
    }
    /**
     * <code>optional int32 unknown4 = 11;</code>
     */
    public int getUnknown4() {
      return unknown4_;
    }

    public static final int UNKNOWN5_FIELD_NUMBER = 12;
    private int unknown5_;
    /**
     * <code>optional int32 unknown5 = 12;</code>
     */
    public boolean hasUnknown5() {
      return ((bitField0_ & 0x00000080) != 0);
    }
    /**
     * <code>optional int32 unknown5 = 12;</code>
     */
    public int getUnknown5() {
      return unknown5_;
    }

    public static final int FITNESSPOINTS1_FIELD_NUMBER = 15;
    private int fitnessPoints1_;
    /**
     * <pre>
     * Cummulative TomTom activity points counter
     * </pre>
     *
     * <code>required int32 fitnessPoints1 = 15;</code>
     */
    public boolean hasFitnessPoints1() {
      return ((bitField0_ & 0x00000100) != 0);
    }
    /**
     * <pre>
     * Cummulative TomTom activity points counter
     * </pre>
     *
     * <code>required int32 fitnessPoints1 = 15;</code>
     */
    public int getFitnessPoints1() {
      return fitnessPoints1_;
    }

    public static final int FITNESSPOINTS2_FIELD_NUMBER = 16;
    private int fitnessPoints2_;
    /**
     * <pre>
     * Cummulative TomTom activity points counter
     * </pre>
     *
     * <code>required int32 fitnessPoints2 = 16;</code>
     */
    public boolean hasFitnessPoints2() {
      return ((bitField0_ & 0x00000200) != 0);
    }
    /**
     * <pre>
     * Cummulative TomTom activity points counter
     * </pre>
     *
     * <code>required int32 fitnessPoints2 = 16;</code>
     */
    public int getFitnessPoints2() {
      return fitnessPoints2_;
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      if (!hasTime()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasInterval()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasFitnessPoints1()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasFitnessPoints2()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (hasUserData()) {
        if (!getUserData().isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (((bitField0_ & 0x00000001) != 0)) {
        output.writeInt32(2, time_);
      }
      if (((bitField0_ & 0x00000002) != 0)) {
        output.writeInt32(3, interval_);
      }
      if (((bitField0_ & 0x00000004) != 0)) {
        output.writeMessage(5, getUserData());
      }
      if (((bitField0_ & 0x00000008) != 0)) {
        output.writeInt32(7, unknown1_);
      }
      if (((bitField0_ & 0x00000010) != 0)) {
        output.writeInt32(8, unknown2_);
      }
      if (((bitField0_ & 0x00000020) != 0)) {
        output.writeInt32(10, unknown3_);
      }
      if (((bitField0_ & 0x00000040) != 0)) {
        output.writeInt32(11, unknown4_);
      }
      if (((bitField0_ & 0x00000080) != 0)) {
        output.writeInt32(12, unknown5_);
      }
      if (((bitField0_ & 0x00000100) != 0)) {
        output.writeInt32(15, fitnessPoints1_);
      }
      if (((bitField0_ & 0x00000200) != 0)) {
        output.writeInt32(16, fitnessPoints2_);
      }
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(2, time_);
      }
      if (((bitField0_ & 0x00000002) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(3, interval_);
      }
      if (((bitField0_ & 0x00000004) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(5, getUserData());
      }
      if (((bitField0_ & 0x00000008) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(7, unknown1_);
      }
      if (((bitField0_ & 0x00000010) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(8, unknown2_);
      }
      if (((bitField0_ & 0x00000020) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(10, unknown3_);
      }
      if (((bitField0_ & 0x00000040) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(11, unknown4_);
      }
      if (((bitField0_ & 0x00000080) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(12, unknown5_);
      }
      if (((bitField0_ & 0x00000100) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(15, fitnessPoints1_);
      }
      if (((bitField0_ & 0x00000200) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(16, fitnessPoints2_);
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof net.studioblueplanet.tomtomwatch.TrackerProto.FitnessRecord)) {
        return super.equals(obj);
      }
      net.studioblueplanet.tomtomwatch.TrackerProto.FitnessRecord other = (net.studioblueplanet.tomtomwatch.TrackerProto.FitnessRecord) obj;

      if (hasTime() != other.hasTime()) return false;
      if (hasTime()) {
        if (getTime()
            != other.getTime()) return false;
      }
      if (hasInterval() != other.hasInterval()) return false;
      if (hasInterval()) {
        if (getInterval()
            != other.getInterval()) return false;
      }
      if (hasUserData() != other.hasUserData()) return false;
      if (hasUserData()) {
        if (!getUserData()
            .equals(other.getUserData())) return false;
      }
      if (hasUnknown1() != other.hasUnknown1()) return false;
      if (hasUnknown1()) {
        if (getUnknown1()
            != other.getUnknown1()) return false;
      }
      if (hasUnknown2() != other.hasUnknown2()) return false;
      if (hasUnknown2()) {
        if (getUnknown2()
            != other.getUnknown2()) return false;
      }
      if (hasUnknown3() != other.hasUnknown3()) return false;
      if (hasUnknown3()) {
        if (getUnknown3()
            != other.getUnknown3()) return false;
      }
      if (hasUnknown4() != other.hasUnknown4()) return false;
      if (hasUnknown4()) {
        if (getUnknown4()
            != other.getUnknown4()) return false;
      }
      if (hasUnknown5() != other.hasUnknown5()) return false;
      if (hasUnknown5()) {
        if (getUnknown5()
            != other.getUnknown5()) return false;
      }
      if (hasFitnessPoints1() != other.hasFitnessPoints1()) return false;
      if (hasFitnessPoints1()) {
        if (getFitnessPoints1()
            != other.getFitnessPoints1()) return false;
      }
      if (hasFitnessPoints2() != other.hasFitnessPoints2()) return false;
      if (hasFitnessPoints2()) {
        if (getFitnessPoints2()
            != other.getFitnessPoints2()) return false;
      }
      if (!unknownFields.equals(other.unknownFields)) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (hasTime()) {
        hash = (37 * hash) + TIME_FIELD_NUMBER;
        hash = (53 * hash) + getTime();
      }
      if (hasInterval()) {
        hash = (37 * hash) + INTERVAL_FIELD_NUMBER;
        hash = (53 * hash) + getInterval();
      }
      if (hasUserData()) {
        hash = (37 * hash) + USERDATA_FIELD_NUMBER;
        hash = (53 * hash) + getUserData().hashCode();
      }
      if (hasUnknown1()) {
        hash = (37 * hash) + UNKNOWN1_FIELD_NUMBER;
        hash = (53 * hash) + getUnknown1();
      }
      if (hasUnknown2()) {
        hash = (37 * hash) + UNKNOWN2_FIELD_NUMBER;
        hash = (53 * hash) + getUnknown2();
      }
      if (hasUnknown3()) {
        hash = (37 * hash) + UNKNOWN3_FIELD_NUMBER;
        hash = (53 * hash) + getUnknown3();
      }
      if (hasUnknown4()) {
        hash = (37 * hash) + UNKNOWN4_FIELD_NUMBER;
        hash = (53 * hash) + getUnknown4();
      }
      if (hasUnknown5()) {
        hash = (37 * hash) + UNKNOWN5_FIELD_NUMBER;
        hash = (53 * hash) + getUnknown5();
      }
      if (hasFitnessPoints1()) {
        hash = (37 * hash) + FITNESSPOINTS1_FIELD_NUMBER;
        hash = (53 * hash) + getFitnessPoints1();
      }
      if (hasFitnessPoints2()) {
        hash = (37 * hash) + FITNESSPOINTS2_FIELD_NUMBER;
        hash = (53 * hash) + getFitnessPoints2();
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static net.studioblueplanet.tomtomwatch.TrackerProto.FitnessRecord parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static net.studioblueplanet.tomtomwatch.TrackerProto.FitnessRecord parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static net.studioblueplanet.tomtomwatch.TrackerProto.FitnessRecord parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static net.studioblueplanet.tomtomwatch.TrackerProto.FitnessRecord parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static net.studioblueplanet.tomtomwatch.TrackerProto.FitnessRecord parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static net.studioblueplanet.tomtomwatch.TrackerProto.FitnessRecord parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static net.studioblueplanet.tomtomwatch.TrackerProto.FitnessRecord parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static net.studioblueplanet.tomtomwatch.TrackerProto.FitnessRecord parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static net.studioblueplanet.tomtomwatch.TrackerProto.FitnessRecord parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static net.studioblueplanet.tomtomwatch.TrackerProto.FitnessRecord parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static net.studioblueplanet.tomtomwatch.TrackerProto.FitnessRecord parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static net.studioblueplanet.tomtomwatch.TrackerProto.FitnessRecord parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(net.studioblueplanet.tomtomwatch.TrackerProto.FitnessRecord prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code tutorial.FitnessRecord}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:tutorial.FitnessRecord)
        net.studioblueplanet.tomtomwatch.TrackerProto.FitnessRecordOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return net.studioblueplanet.tomtomwatch.TrackerProto.internal_static_tutorial_FitnessRecord_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return net.studioblueplanet.tomtomwatch.TrackerProto.internal_static_tutorial_FitnessRecord_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                net.studioblueplanet.tomtomwatch.TrackerProto.FitnessRecord.class, net.studioblueplanet.tomtomwatch.TrackerProto.FitnessRecord.Builder.class);
      }

      // Construct using net.studioblueplanet.tomtomwatch.TrackerProto.FitnessRecord.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
          getUserDataFieldBuilder();
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        time_ = 0;
        bitField0_ = (bitField0_ & ~0x00000001);
        interval_ = 0;
        bitField0_ = (bitField0_ & ~0x00000002);
        if (userDataBuilder_ == null) {
          userData_ = null;
        } else {
          userDataBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000004);
        unknown1_ = 0;
        bitField0_ = (bitField0_ & ~0x00000008);
        unknown2_ = 0;
        bitField0_ = (bitField0_ & ~0x00000010);
        unknown3_ = 0;
        bitField0_ = (bitField0_ & ~0x00000020);
        unknown4_ = 0;
        bitField0_ = (bitField0_ & ~0x00000040);
        unknown5_ = 0;
        bitField0_ = (bitField0_ & ~0x00000080);
        fitnessPoints1_ = 0;
        bitField0_ = (bitField0_ & ~0x00000100);
        fitnessPoints2_ = 0;
        bitField0_ = (bitField0_ & ~0x00000200);
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return net.studioblueplanet.tomtomwatch.TrackerProto.internal_static_tutorial_FitnessRecord_descriptor;
      }

      @java.lang.Override
      public net.studioblueplanet.tomtomwatch.TrackerProto.FitnessRecord getDefaultInstanceForType() {
        return net.studioblueplanet.tomtomwatch.TrackerProto.FitnessRecord.getDefaultInstance();
      }

      @java.lang.Override
      public net.studioblueplanet.tomtomwatch.TrackerProto.FitnessRecord build() {
        net.studioblueplanet.tomtomwatch.TrackerProto.FitnessRecord result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public net.studioblueplanet.tomtomwatch.TrackerProto.FitnessRecord buildPartial() {
        net.studioblueplanet.tomtomwatch.TrackerProto.FitnessRecord result = new net.studioblueplanet.tomtomwatch.TrackerProto.FitnessRecord(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) != 0)) {
          result.time_ = time_;
          to_bitField0_ |= 0x00000001;
        }
        if (((from_bitField0_ & 0x00000002) != 0)) {
          result.interval_ = interval_;
          to_bitField0_ |= 0x00000002;
        }
        if (((from_bitField0_ & 0x00000004) != 0)) {
          if (userDataBuilder_ == null) {
            result.userData_ = userData_;
          } else {
            result.userData_ = userDataBuilder_.build();
          }
          to_bitField0_ |= 0x00000004;
        }
        if (((from_bitField0_ & 0x00000008) != 0)) {
          result.unknown1_ = unknown1_;
          to_bitField0_ |= 0x00000008;
        }
        if (((from_bitField0_ & 0x00000010) != 0)) {
          result.unknown2_ = unknown2_;
          to_bitField0_ |= 0x00000010;
        }
        if (((from_bitField0_ & 0x00000020) != 0)) {
          result.unknown3_ = unknown3_;
          to_bitField0_ |= 0x00000020;
        }
        if (((from_bitField0_ & 0x00000040) != 0)) {
          result.unknown4_ = unknown4_;
          to_bitField0_ |= 0x00000040;
        }
        if (((from_bitField0_ & 0x00000080) != 0)) {
          result.unknown5_ = unknown5_;
          to_bitField0_ |= 0x00000080;
        }
        if (((from_bitField0_ & 0x00000100) != 0)) {
          result.fitnessPoints1_ = fitnessPoints1_;
          to_bitField0_ |= 0x00000100;
        }
        if (((from_bitField0_ & 0x00000200) != 0)) {
          result.fitnessPoints2_ = fitnessPoints2_;
          to_bitField0_ |= 0x00000200;
        }
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof net.studioblueplanet.tomtomwatch.TrackerProto.FitnessRecord) {
          return mergeFrom((net.studioblueplanet.tomtomwatch.TrackerProto.FitnessRecord)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(net.studioblueplanet.tomtomwatch.TrackerProto.FitnessRecord other) {
        if (other == net.studioblueplanet.tomtomwatch.TrackerProto.FitnessRecord.getDefaultInstance()) return this;
        if (other.hasTime()) {
          setTime(other.getTime());
        }
        if (other.hasInterval()) {
          setInterval(other.getInterval());
        }
        if (other.hasUserData()) {
          mergeUserData(other.getUserData());
        }
        if (other.hasUnknown1()) {
          setUnknown1(other.getUnknown1());
        }
        if (other.hasUnknown2()) {
          setUnknown2(other.getUnknown2());
        }
        if (other.hasUnknown3()) {
          setUnknown3(other.getUnknown3());
        }
        if (other.hasUnknown4()) {
          setUnknown4(other.getUnknown4());
        }
        if (other.hasUnknown5()) {
          setUnknown5(other.getUnknown5());
        }
        if (other.hasFitnessPoints1()) {
          setFitnessPoints1(other.getFitnessPoints1());
        }
        if (other.hasFitnessPoints2()) {
          setFitnessPoints2(other.getFitnessPoints2());
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        if (!hasTime()) {
          return false;
        }
        if (!hasInterval()) {
          return false;
        }
        if (!hasFitnessPoints1()) {
          return false;
        }
        if (!hasFitnessPoints2()) {
          return false;
        }
        if (hasUserData()) {
          if (!getUserData().isInitialized()) {
            return false;
          }
        }
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        net.studioblueplanet.tomtomwatch.TrackerProto.FitnessRecord parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (net.studioblueplanet.tomtomwatch.TrackerProto.FitnessRecord) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private int time_ ;
      /**
       * <pre>
       * Epoch time in seconds, 120 s interval = 2 min during activity
       * </pre>
       *
       * <code>required int32 time = 2;</code>
       */
      public boolean hasTime() {
        return ((bitField0_ & 0x00000001) != 0);
      }
      /**
       * <pre>
       * Epoch time in seconds, 120 s interval = 2 min during activity
       * </pre>
       *
       * <code>required int32 time = 2;</code>
       */
      public int getTime() {
        return time_;
      }
      /**
       * <pre>
       * Epoch time in seconds, 120 s interval = 2 min during activity
       * </pre>
       *
       * <code>required int32 time = 2;</code>
       */
      public Builder setTime(int value) {
        bitField0_ |= 0x00000001;
        time_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Epoch time in seconds, 120 s interval = 2 min during activity
       * </pre>
       *
       * <code>required int32 time = 2;</code>
       */
      public Builder clearTime() {
        bitField0_ = (bitField0_ & ~0x00000001);
        time_ = 0;
        onChanged();
        return this;
      }

      private int interval_ ;
      /**
       * <pre>
       * Interval in seconds?? 14280=238 min = 3h58'??
       * </pre>
       *
       * <code>required int32 interval = 3;</code>
       */
      public boolean hasInterval() {
        return ((bitField0_ & 0x00000002) != 0);
      }
      /**
       * <pre>
       * Interval in seconds?? 14280=238 min = 3h58'??
       * </pre>
       *
       * <code>required int32 interval = 3;</code>
       */
      public int getInterval() {
        return interval_;
      }
      /**
       * <pre>
       * Interval in seconds?? 14280=238 min = 3h58'??
       * </pre>
       *
       * <code>required int32 interval = 3;</code>
       */
      public Builder setInterval(int value) {
        bitField0_ |= 0x00000002;
        interval_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Interval in seconds?? 14280=238 min = 3h58'??
       * </pre>
       *
       * <code>required int32 interval = 3;</code>
       */
      public Builder clearInterval() {
        bitField0_ = (bitField0_ & ~0x00000002);
        interval_ = 0;
        onChanged();
        return this;
      }

      private net.studioblueplanet.tomtomwatch.TrackerProto.UserData userData_;
      private com.google.protobuf.SingleFieldBuilderV3<
          net.studioblueplanet.tomtomwatch.TrackerProto.UserData, net.studioblueplanet.tomtomwatch.TrackerProto.UserData.Builder, net.studioblueplanet.tomtomwatch.TrackerProto.UserDataOrBuilder> userDataBuilder_;
      /**
       * <pre>
       * User data
       * </pre>
       *
       * <code>optional .tutorial.UserData userData = 5;</code>
       */
      public boolean hasUserData() {
        return ((bitField0_ & 0x00000004) != 0);
      }
      /**
       * <pre>
       * User data
       * </pre>
       *
       * <code>optional .tutorial.UserData userData = 5;</code>
       */
      public net.studioblueplanet.tomtomwatch.TrackerProto.UserData getUserData() {
        if (userDataBuilder_ == null) {
          return userData_ == null ? net.studioblueplanet.tomtomwatch.TrackerProto.UserData.getDefaultInstance() : userData_;
        } else {
          return userDataBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       * User data
       * </pre>
       *
       * <code>optional .tutorial.UserData userData = 5;</code>
       */
      public Builder setUserData(net.studioblueplanet.tomtomwatch.TrackerProto.UserData value) {
        if (userDataBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          userData_ = value;
          onChanged();
        } else {
          userDataBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000004;
        return this;
      }
      /**
       * <pre>
       * User data
       * </pre>
       *
       * <code>optional .tutorial.UserData userData = 5;</code>
       */
      public Builder setUserData(
          net.studioblueplanet.tomtomwatch.TrackerProto.UserData.Builder builderForValue) {
        if (userDataBuilder_ == null) {
          userData_ = builderForValue.build();
          onChanged();
        } else {
          userDataBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000004;
        return this;
      }
      /**
       * <pre>
       * User data
       * </pre>
       *
       * <code>optional .tutorial.UserData userData = 5;</code>
       */
      public Builder mergeUserData(net.studioblueplanet.tomtomwatch.TrackerProto.UserData value) {
        if (userDataBuilder_ == null) {
          if (((bitField0_ & 0x00000004) != 0) &&
              userData_ != null &&
              userData_ != net.studioblueplanet.tomtomwatch.TrackerProto.UserData.getDefaultInstance()) {
            userData_ =
              net.studioblueplanet.tomtomwatch.TrackerProto.UserData.newBuilder(userData_).mergeFrom(value).buildPartial();
          } else {
            userData_ = value;
          }
          onChanged();
        } else {
          userDataBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000004;
        return this;
      }
      /**
       * <pre>
       * User data
       * </pre>
       *
       * <code>optional .tutorial.UserData userData = 5;</code>
       */
      public Builder clearUserData() {
        if (userDataBuilder_ == null) {
          userData_ = null;
          onChanged();
        } else {
          userDataBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000004);
        return this;
      }
      /**
       * <pre>
       * User data
       * </pre>
       *
       * <code>optional .tutorial.UserData userData = 5;</code>
       */
      public net.studioblueplanet.tomtomwatch.TrackerProto.UserData.Builder getUserDataBuilder() {
        bitField0_ |= 0x00000004;
        onChanged();
        return getUserDataFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       * User data
       * </pre>
       *
       * <code>optional .tutorial.UserData userData = 5;</code>
       */
      public net.studioblueplanet.tomtomwatch.TrackerProto.UserDataOrBuilder getUserDataOrBuilder() {
        if (userDataBuilder_ != null) {
          return userDataBuilder_.getMessageOrBuilder();
        } else {
          return userData_ == null ?
              net.studioblueplanet.tomtomwatch.TrackerProto.UserData.getDefaultInstance() : userData_;
        }
      }
      /**
       * <pre>
       * User data
       * </pre>
       *
       * <code>optional .tutorial.UserData userData = 5;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          net.studioblueplanet.tomtomwatch.TrackerProto.UserData, net.studioblueplanet.tomtomwatch.TrackerProto.UserData.Builder, net.studioblueplanet.tomtomwatch.TrackerProto.UserDataOrBuilder> 
          getUserDataFieldBuilder() {
        if (userDataBuilder_ == null) {
          userDataBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              net.studioblueplanet.tomtomwatch.TrackerProto.UserData, net.studioblueplanet.tomtomwatch.TrackerProto.UserData.Builder, net.studioblueplanet.tomtomwatch.TrackerProto.UserDataOrBuilder>(
                  getUserData(),
                  getParentForChildren(),
                  isClean());
          userData_ = null;
        }
        return userDataBuilder_;
      }

      private int unknown1_ ;
      /**
       * <code>optional int32 unknown1 = 7;</code>
       */
      public boolean hasUnknown1() {
        return ((bitField0_ & 0x00000008) != 0);
      }
      /**
       * <code>optional int32 unknown1 = 7;</code>
       */
      public int getUnknown1() {
        return unknown1_;
      }
      /**
       * <code>optional int32 unknown1 = 7;</code>
       */
      public Builder setUnknown1(int value) {
        bitField0_ |= 0x00000008;
        unknown1_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 unknown1 = 7;</code>
       */
      public Builder clearUnknown1() {
        bitField0_ = (bitField0_ & ~0x00000008);
        unknown1_ = 0;
        onChanged();
        return this;
      }

      private int unknown2_ ;
      /**
       * <code>optional int32 unknown2 = 8;</code>
       */
      public boolean hasUnknown2() {
        return ((bitField0_ & 0x00000010) != 0);
      }
      /**
       * <code>optional int32 unknown2 = 8;</code>
       */
      public int getUnknown2() {
        return unknown2_;
      }
      /**
       * <code>optional int32 unknown2 = 8;</code>
       */
      public Builder setUnknown2(int value) {
        bitField0_ |= 0x00000010;
        unknown2_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 unknown2 = 8;</code>
       */
      public Builder clearUnknown2() {
        bitField0_ = (bitField0_ & ~0x00000010);
        unknown2_ = 0;
        onChanged();
        return this;
      }

      private int unknown3_ ;
      /**
       * <code>optional int32 unknown3 = 10;</code>
       */
      public boolean hasUnknown3() {
        return ((bitField0_ & 0x00000020) != 0);
      }
      /**
       * <code>optional int32 unknown3 = 10;</code>
       */
      public int getUnknown3() {
        return unknown3_;
      }
      /**
       * <code>optional int32 unknown3 = 10;</code>
       */
      public Builder setUnknown3(int value) {
        bitField0_ |= 0x00000020;
        unknown3_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 unknown3 = 10;</code>
       */
      public Builder clearUnknown3() {
        bitField0_ = (bitField0_ & ~0x00000020);
        unknown3_ = 0;
        onChanged();
        return this;
      }

      private int unknown4_ ;
      /**
       * <code>optional int32 unknown4 = 11;</code>
       */
      public boolean hasUnknown4() {
        return ((bitField0_ & 0x00000040) != 0);
      }
      /**
       * <code>optional int32 unknown4 = 11;</code>
       */
      public int getUnknown4() {
        return unknown4_;
      }
      /**
       * <code>optional int32 unknown4 = 11;</code>
       */
      public Builder setUnknown4(int value) {
        bitField0_ |= 0x00000040;
        unknown4_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 unknown4 = 11;</code>
       */
      public Builder clearUnknown4() {
        bitField0_ = (bitField0_ & ~0x00000040);
        unknown4_ = 0;
        onChanged();
        return this;
      }

      private int unknown5_ ;
      /**
       * <code>optional int32 unknown5 = 12;</code>
       */
      public boolean hasUnknown5() {
        return ((bitField0_ & 0x00000080) != 0);
      }
      /**
       * <code>optional int32 unknown5 = 12;</code>
       */
      public int getUnknown5() {
        return unknown5_;
      }
      /**
       * <code>optional int32 unknown5 = 12;</code>
       */
      public Builder setUnknown5(int value) {
        bitField0_ |= 0x00000080;
        unknown5_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 unknown5 = 12;</code>
       */
      public Builder clearUnknown5() {
        bitField0_ = (bitField0_ & ~0x00000080);
        unknown5_ = 0;
        onChanged();
        return this;
      }

      private int fitnessPoints1_ ;
      /**
       * <pre>
       * Cummulative TomTom activity points counter
       * </pre>
       *
       * <code>required int32 fitnessPoints1 = 15;</code>
       */
      public boolean hasFitnessPoints1() {
        return ((bitField0_ & 0x00000100) != 0);
      }
      /**
       * <pre>
       * Cummulative TomTom activity points counter
       * </pre>
       *
       * <code>required int32 fitnessPoints1 = 15;</code>
       */
      public int getFitnessPoints1() {
        return fitnessPoints1_;
      }
      /**
       * <pre>
       * Cummulative TomTom activity points counter
       * </pre>
       *
       * <code>required int32 fitnessPoints1 = 15;</code>
       */
      public Builder setFitnessPoints1(int value) {
        bitField0_ |= 0x00000100;
        fitnessPoints1_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Cummulative TomTom activity points counter
       * </pre>
       *
       * <code>required int32 fitnessPoints1 = 15;</code>
       */
      public Builder clearFitnessPoints1() {
        bitField0_ = (bitField0_ & ~0x00000100);
        fitnessPoints1_ = 0;
        onChanged();
        return this;
      }

      private int fitnessPoints2_ ;
      /**
       * <pre>
       * Cummulative TomTom activity points counter
       * </pre>
       *
       * <code>required int32 fitnessPoints2 = 16;</code>
       */
      public boolean hasFitnessPoints2() {
        return ((bitField0_ & 0x00000200) != 0);
      }
      /**
       * <pre>
       * Cummulative TomTom activity points counter
       * </pre>
       *
       * <code>required int32 fitnessPoints2 = 16;</code>
       */
      public int getFitnessPoints2() {
        return fitnessPoints2_;
      }
      /**
       * <pre>
       * Cummulative TomTom activity points counter
       * </pre>
       *
       * <code>required int32 fitnessPoints2 = 16;</code>
       */
      public Builder setFitnessPoints2(int value) {
        bitField0_ |= 0x00000200;
        fitnessPoints2_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Cummulative TomTom activity points counter
       * </pre>
       *
       * <code>required int32 fitnessPoints2 = 16;</code>
       */
      public Builder clearFitnessPoints2() {
        bitField0_ = (bitField0_ & ~0x00000200);
        fitnessPoints2_ = 0;
        onChanged();
        return this;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:tutorial.FitnessRecord)
    }

    // @@protoc_insertion_point(class_scope:tutorial.FitnessRecord)
    private static final net.studioblueplanet.tomtomwatch.TrackerProto.FitnessRecord DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new net.studioblueplanet.tomtomwatch.TrackerProto.FitnessRecord();
    }

    public static net.studioblueplanet.tomtomwatch.TrackerProto.FitnessRecord getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    @java.lang.Deprecated public static final com.google.protobuf.Parser<FitnessRecord>
        PARSER = new com.google.protobuf.AbstractParser<FitnessRecord>() {
      @java.lang.Override
      public FitnessRecord parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new FitnessRecord(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<FitnessRecord> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<FitnessRecord> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public net.studioblueplanet.tomtomwatch.TrackerProto.FitnessRecord getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface Record6SubOrBuilder extends
      // @@protoc_insertion_point(interface_extends:tutorial.Record6Sub)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>required int32 unknown1 = 1;</code>
     */
    boolean hasUnknown1();
    /**
     * <code>required int32 unknown1 = 1;</code>
     */
    int getUnknown1();

    /**
     * <code>required int32 unknown2 = 2;</code>
     */
    boolean hasUnknown2();
    /**
     * <code>required int32 unknown2 = 2;</code>
     */
    int getUnknown2();

    /**
     * <code>required int32 unknown3 = 3;</code>
     */
    boolean hasUnknown3();
    /**
     * <code>required int32 unknown3 = 3;</code>
     */
    int getUnknown3();
  }
  /**
   * Protobuf type {@code tutorial.Record6Sub}
   */
  public  static final class Record6Sub extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:tutorial.Record6Sub)
      Record6SubOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use Record6Sub.newBuilder() to construct.
    private Record6Sub(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private Record6Sub() {
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new Record6Sub();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private Record6Sub(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 8: {
              bitField0_ |= 0x00000001;
              unknown1_ = input.readInt32();
              break;
            }
            case 16: {
              bitField0_ |= 0x00000002;
              unknown2_ = input.readInt32();
              break;
            }
            case 24: {
              bitField0_ |= 0x00000004;
              unknown3_ = input.readInt32();
              break;
            }
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return net.studioblueplanet.tomtomwatch.TrackerProto.internal_static_tutorial_Record6Sub_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return net.studioblueplanet.tomtomwatch.TrackerProto.internal_static_tutorial_Record6Sub_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              net.studioblueplanet.tomtomwatch.TrackerProto.Record6Sub.class, net.studioblueplanet.tomtomwatch.TrackerProto.Record6Sub.Builder.class);
    }

    private int bitField0_;
    public static final int UNKNOWN1_FIELD_NUMBER = 1;
    private int unknown1_;
    /**
     * <code>required int32 unknown1 = 1;</code>
     */
    public boolean hasUnknown1() {
      return ((bitField0_ & 0x00000001) != 0);
    }
    /**
     * <code>required int32 unknown1 = 1;</code>
     */
    public int getUnknown1() {
      return unknown1_;
    }

    public static final int UNKNOWN2_FIELD_NUMBER = 2;
    private int unknown2_;
    /**
     * <code>required int32 unknown2 = 2;</code>
     */
    public boolean hasUnknown2() {
      return ((bitField0_ & 0x00000002) != 0);
    }
    /**
     * <code>required int32 unknown2 = 2;</code>
     */
    public int getUnknown2() {
      return unknown2_;
    }

    public static final int UNKNOWN3_FIELD_NUMBER = 3;
    private int unknown3_;
    /**
     * <code>required int32 unknown3 = 3;</code>
     */
    public boolean hasUnknown3() {
      return ((bitField0_ & 0x00000004) != 0);
    }
    /**
     * <code>required int32 unknown3 = 3;</code>
     */
    public int getUnknown3() {
      return unknown3_;
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      if (!hasUnknown1()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasUnknown2()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasUnknown3()) {
        memoizedIsInitialized = 0;
        return false;
      }
      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (((bitField0_ & 0x00000001) != 0)) {
        output.writeInt32(1, unknown1_);
      }
      if (((bitField0_ & 0x00000002) != 0)) {
        output.writeInt32(2, unknown2_);
      }
      if (((bitField0_ & 0x00000004) != 0)) {
        output.writeInt32(3, unknown3_);
      }
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(1, unknown1_);
      }
      if (((bitField0_ & 0x00000002) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(2, unknown2_);
      }
      if (((bitField0_ & 0x00000004) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(3, unknown3_);
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof net.studioblueplanet.tomtomwatch.TrackerProto.Record6Sub)) {
        return super.equals(obj);
      }
      net.studioblueplanet.tomtomwatch.TrackerProto.Record6Sub other = (net.studioblueplanet.tomtomwatch.TrackerProto.Record6Sub) obj;

      if (hasUnknown1() != other.hasUnknown1()) return false;
      if (hasUnknown1()) {
        if (getUnknown1()
            != other.getUnknown1()) return false;
      }
      if (hasUnknown2() != other.hasUnknown2()) return false;
      if (hasUnknown2()) {
        if (getUnknown2()
            != other.getUnknown2()) return false;
      }
      if (hasUnknown3() != other.hasUnknown3()) return false;
      if (hasUnknown3()) {
        if (getUnknown3()
            != other.getUnknown3()) return false;
      }
      if (!unknownFields.equals(other.unknownFields)) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (hasUnknown1()) {
        hash = (37 * hash) + UNKNOWN1_FIELD_NUMBER;
        hash = (53 * hash) + getUnknown1();
      }
      if (hasUnknown2()) {
        hash = (37 * hash) + UNKNOWN2_FIELD_NUMBER;
        hash = (53 * hash) + getUnknown2();
      }
      if (hasUnknown3()) {
        hash = (37 * hash) + UNKNOWN3_FIELD_NUMBER;
        hash = (53 * hash) + getUnknown3();
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static net.studioblueplanet.tomtomwatch.TrackerProto.Record6Sub parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static net.studioblueplanet.tomtomwatch.TrackerProto.Record6Sub parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static net.studioblueplanet.tomtomwatch.TrackerProto.Record6Sub parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static net.studioblueplanet.tomtomwatch.TrackerProto.Record6Sub parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static net.studioblueplanet.tomtomwatch.TrackerProto.Record6Sub parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static net.studioblueplanet.tomtomwatch.TrackerProto.Record6Sub parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static net.studioblueplanet.tomtomwatch.TrackerProto.Record6Sub parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static net.studioblueplanet.tomtomwatch.TrackerProto.Record6Sub parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static net.studioblueplanet.tomtomwatch.TrackerProto.Record6Sub parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static net.studioblueplanet.tomtomwatch.TrackerProto.Record6Sub parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static net.studioblueplanet.tomtomwatch.TrackerProto.Record6Sub parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static net.studioblueplanet.tomtomwatch.TrackerProto.Record6Sub parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(net.studioblueplanet.tomtomwatch.TrackerProto.Record6Sub prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code tutorial.Record6Sub}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:tutorial.Record6Sub)
        net.studioblueplanet.tomtomwatch.TrackerProto.Record6SubOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return net.studioblueplanet.tomtomwatch.TrackerProto.internal_static_tutorial_Record6Sub_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return net.studioblueplanet.tomtomwatch.TrackerProto.internal_static_tutorial_Record6Sub_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                net.studioblueplanet.tomtomwatch.TrackerProto.Record6Sub.class, net.studioblueplanet.tomtomwatch.TrackerProto.Record6Sub.Builder.class);
      }

      // Construct using net.studioblueplanet.tomtomwatch.TrackerProto.Record6Sub.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        unknown1_ = 0;
        bitField0_ = (bitField0_ & ~0x00000001);
        unknown2_ = 0;
        bitField0_ = (bitField0_ & ~0x00000002);
        unknown3_ = 0;
        bitField0_ = (bitField0_ & ~0x00000004);
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return net.studioblueplanet.tomtomwatch.TrackerProto.internal_static_tutorial_Record6Sub_descriptor;
      }

      @java.lang.Override
      public net.studioblueplanet.tomtomwatch.TrackerProto.Record6Sub getDefaultInstanceForType() {
        return net.studioblueplanet.tomtomwatch.TrackerProto.Record6Sub.getDefaultInstance();
      }

      @java.lang.Override
      public net.studioblueplanet.tomtomwatch.TrackerProto.Record6Sub build() {
        net.studioblueplanet.tomtomwatch.TrackerProto.Record6Sub result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public net.studioblueplanet.tomtomwatch.TrackerProto.Record6Sub buildPartial() {
        net.studioblueplanet.tomtomwatch.TrackerProto.Record6Sub result = new net.studioblueplanet.tomtomwatch.TrackerProto.Record6Sub(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) != 0)) {
          result.unknown1_ = unknown1_;
          to_bitField0_ |= 0x00000001;
        }
        if (((from_bitField0_ & 0x00000002) != 0)) {
          result.unknown2_ = unknown2_;
          to_bitField0_ |= 0x00000002;
        }
        if (((from_bitField0_ & 0x00000004) != 0)) {
          result.unknown3_ = unknown3_;
          to_bitField0_ |= 0x00000004;
        }
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof net.studioblueplanet.tomtomwatch.TrackerProto.Record6Sub) {
          return mergeFrom((net.studioblueplanet.tomtomwatch.TrackerProto.Record6Sub)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(net.studioblueplanet.tomtomwatch.TrackerProto.Record6Sub other) {
        if (other == net.studioblueplanet.tomtomwatch.TrackerProto.Record6Sub.getDefaultInstance()) return this;
        if (other.hasUnknown1()) {
          setUnknown1(other.getUnknown1());
        }
        if (other.hasUnknown2()) {
          setUnknown2(other.getUnknown2());
        }
        if (other.hasUnknown3()) {
          setUnknown3(other.getUnknown3());
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        if (!hasUnknown1()) {
          return false;
        }
        if (!hasUnknown2()) {
          return false;
        }
        if (!hasUnknown3()) {
          return false;
        }
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        net.studioblueplanet.tomtomwatch.TrackerProto.Record6Sub parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (net.studioblueplanet.tomtomwatch.TrackerProto.Record6Sub) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private int unknown1_ ;
      /**
       * <code>required int32 unknown1 = 1;</code>
       */
      public boolean hasUnknown1() {
        return ((bitField0_ & 0x00000001) != 0);
      }
      /**
       * <code>required int32 unknown1 = 1;</code>
       */
      public int getUnknown1() {
        return unknown1_;
      }
      /**
       * <code>required int32 unknown1 = 1;</code>
       */
      public Builder setUnknown1(int value) {
        bitField0_ |= 0x00000001;
        unknown1_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required int32 unknown1 = 1;</code>
       */
      public Builder clearUnknown1() {
        bitField0_ = (bitField0_ & ~0x00000001);
        unknown1_ = 0;
        onChanged();
        return this;
      }

      private int unknown2_ ;
      /**
       * <code>required int32 unknown2 = 2;</code>
       */
      public boolean hasUnknown2() {
        return ((bitField0_ & 0x00000002) != 0);
      }
      /**
       * <code>required int32 unknown2 = 2;</code>
       */
      public int getUnknown2() {
        return unknown2_;
      }
      /**
       * <code>required int32 unknown2 = 2;</code>
       */
      public Builder setUnknown2(int value) {
        bitField0_ |= 0x00000002;
        unknown2_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required int32 unknown2 = 2;</code>
       */
      public Builder clearUnknown2() {
        bitField0_ = (bitField0_ & ~0x00000002);
        unknown2_ = 0;
        onChanged();
        return this;
      }

      private int unknown3_ ;
      /**
       * <code>required int32 unknown3 = 3;</code>
       */
      public boolean hasUnknown3() {
        return ((bitField0_ & 0x00000004) != 0);
      }
      /**
       * <code>required int32 unknown3 = 3;</code>
       */
      public int getUnknown3() {
        return unknown3_;
      }
      /**
       * <code>required int32 unknown3 = 3;</code>
       */
      public Builder setUnknown3(int value) {
        bitField0_ |= 0x00000004;
        unknown3_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required int32 unknown3 = 3;</code>
       */
      public Builder clearUnknown3() {
        bitField0_ = (bitField0_ & ~0x00000004);
        unknown3_ = 0;
        onChanged();
        return this;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:tutorial.Record6Sub)
    }

    // @@protoc_insertion_point(class_scope:tutorial.Record6Sub)
    private static final net.studioblueplanet.tomtomwatch.TrackerProto.Record6Sub DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new net.studioblueplanet.tomtomwatch.TrackerProto.Record6Sub();
    }

    public static net.studioblueplanet.tomtomwatch.TrackerProto.Record6Sub getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    @java.lang.Deprecated public static final com.google.protobuf.Parser<Record6Sub>
        PARSER = new com.google.protobuf.AbstractParser<Record6Sub>() {
      @java.lang.Override
      public Record6Sub parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new Record6Sub(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<Record6Sub> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<Record6Sub> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public net.studioblueplanet.tomtomwatch.TrackerProto.Record6Sub getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface Record6OrBuilder extends
      // @@protoc_insertion_point(interface_extends:tutorial.Record6)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     * Epoch time in seconds, 900 s interval = 15 min
     * </pre>
     *
     * <code>required int32 time = 1;</code>
     */
    boolean hasTime();
    /**
     * <pre>
     * Epoch time in seconds, 900 s interval = 15 min
     * </pre>
     *
     * <code>required int32 time = 1;</code>
     */
    int getTime();

    /**
     * <pre>
     * Interval in seconds?? 14280=238 min = 3h58'??
     * </pre>
     *
     * <code>required int32 interval = 2;</code>
     */
    boolean hasInterval();
    /**
     * <pre>
     * Interval in seconds?? 14280=238 min = 3h58'??
     * </pre>
     *
     * <code>required int32 interval = 2;</code>
     */
    int getInterval();

    /**
     * <code>required int32 unknown1 = 3;</code>
     */
    boolean hasUnknown1();
    /**
     * <code>required int32 unknown1 = 3;</code>
     */
    int getUnknown1();

    /**
     * <pre>
     * Some data
     * </pre>
     *
     * <code>repeated .tutorial.Record6Sub sub = 4;</code>
     */
    java.util.List<net.studioblueplanet.tomtomwatch.TrackerProto.Record6Sub> 
        getSubList();
    /**
     * <pre>
     * Some data
     * </pre>
     *
     * <code>repeated .tutorial.Record6Sub sub = 4;</code>
     */
    net.studioblueplanet.tomtomwatch.TrackerProto.Record6Sub getSub(int index);
    /**
     * <pre>
     * Some data
     * </pre>
     *
     * <code>repeated .tutorial.Record6Sub sub = 4;</code>
     */
    int getSubCount();
    /**
     * <pre>
     * Some data
     * </pre>
     *
     * <code>repeated .tutorial.Record6Sub sub = 4;</code>
     */
    java.util.List<? extends net.studioblueplanet.tomtomwatch.TrackerProto.Record6SubOrBuilder> 
        getSubOrBuilderList();
    /**
     * <pre>
     * Some data
     * </pre>
     *
     * <code>repeated .tutorial.Record6Sub sub = 4;</code>
     */
    net.studioblueplanet.tomtomwatch.TrackerProto.Record6SubOrBuilder getSubOrBuilder(
        int index);
  }
  /**
   * Protobuf type {@code tutorial.Record6}
   */
  public  static final class Record6 extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:tutorial.Record6)
      Record6OrBuilder {
  private static final long serialVersionUID = 0L;
    // Use Record6.newBuilder() to construct.
    private Record6(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private Record6() {
      sub_ = java.util.Collections.emptyList();
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new Record6();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private Record6(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 8: {
              bitField0_ |= 0x00000001;
              time_ = input.readInt32();
              break;
            }
            case 16: {
              bitField0_ |= 0x00000002;
              interval_ = input.readInt32();
              break;
            }
            case 24: {
              bitField0_ |= 0x00000004;
              unknown1_ = input.readInt32();
              break;
            }
            case 34: {
              if (!((mutable_bitField0_ & 0x00000008) != 0)) {
                sub_ = new java.util.ArrayList<net.studioblueplanet.tomtomwatch.TrackerProto.Record6Sub>();
                mutable_bitField0_ |= 0x00000008;
              }
              sub_.add(
                  input.readMessage(net.studioblueplanet.tomtomwatch.TrackerProto.Record6Sub.PARSER, extensionRegistry));
              break;
            }
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000008) != 0)) {
          sub_ = java.util.Collections.unmodifiableList(sub_);
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return net.studioblueplanet.tomtomwatch.TrackerProto.internal_static_tutorial_Record6_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return net.studioblueplanet.tomtomwatch.TrackerProto.internal_static_tutorial_Record6_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              net.studioblueplanet.tomtomwatch.TrackerProto.Record6.class, net.studioblueplanet.tomtomwatch.TrackerProto.Record6.Builder.class);
    }

    private int bitField0_;
    public static final int TIME_FIELD_NUMBER = 1;
    private int time_;
    /**
     * <pre>
     * Epoch time in seconds, 900 s interval = 15 min
     * </pre>
     *
     * <code>required int32 time = 1;</code>
     */
    public boolean hasTime() {
      return ((bitField0_ & 0x00000001) != 0);
    }
    /**
     * <pre>
     * Epoch time in seconds, 900 s interval = 15 min
     * </pre>
     *
     * <code>required int32 time = 1;</code>
     */
    public int getTime() {
      return time_;
    }

    public static final int INTERVAL_FIELD_NUMBER = 2;
    private int interval_;
    /**
     * <pre>
     * Interval in seconds?? 14280=238 min = 3h58'??
     * </pre>
     *
     * <code>required int32 interval = 2;</code>
     */
    public boolean hasInterval() {
      return ((bitField0_ & 0x00000002) != 0);
    }
    /**
     * <pre>
     * Interval in seconds?? 14280=238 min = 3h58'??
     * </pre>
     *
     * <code>required int32 interval = 2;</code>
     */
    public int getInterval() {
      return interval_;
    }

    public static final int UNKNOWN1_FIELD_NUMBER = 3;
    private int unknown1_;
    /**
     * <code>required int32 unknown1 = 3;</code>
     */
    public boolean hasUnknown1() {
      return ((bitField0_ & 0x00000004) != 0);
    }
    /**
     * <code>required int32 unknown1 = 3;</code>
     */
    public int getUnknown1() {
      return unknown1_;
    }

    public static final int SUB_FIELD_NUMBER = 4;
    private java.util.List<net.studioblueplanet.tomtomwatch.TrackerProto.Record6Sub> sub_;
    /**
     * <pre>
     * Some data
     * </pre>
     *
     * <code>repeated .tutorial.Record6Sub sub = 4;</code>
     */
    public java.util.List<net.studioblueplanet.tomtomwatch.TrackerProto.Record6Sub> getSubList() {
      return sub_;
    }
    /**
     * <pre>
     * Some data
     * </pre>
     *
     * <code>repeated .tutorial.Record6Sub sub = 4;</code>
     */
    public java.util.List<? extends net.studioblueplanet.tomtomwatch.TrackerProto.Record6SubOrBuilder> 
        getSubOrBuilderList() {
      return sub_;
    }
    /**
     * <pre>
     * Some data
     * </pre>
     *
     * <code>repeated .tutorial.Record6Sub sub = 4;</code>
     */
    public int getSubCount() {
      return sub_.size();
    }
    /**
     * <pre>
     * Some data
     * </pre>
     *
     * <code>repeated .tutorial.Record6Sub sub = 4;</code>
     */
    public net.studioblueplanet.tomtomwatch.TrackerProto.Record6Sub getSub(int index) {
      return sub_.get(index);
    }
    /**
     * <pre>
     * Some data
     * </pre>
     *
     * <code>repeated .tutorial.Record6Sub sub = 4;</code>
     */
    public net.studioblueplanet.tomtomwatch.TrackerProto.Record6SubOrBuilder getSubOrBuilder(
        int index) {
      return sub_.get(index);
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      if (!hasTime()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasInterval()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasUnknown1()) {
        memoizedIsInitialized = 0;
        return false;
      }
      for (int i = 0; i < getSubCount(); i++) {
        if (!getSub(i).isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (((bitField0_ & 0x00000001) != 0)) {
        output.writeInt32(1, time_);
      }
      if (((bitField0_ & 0x00000002) != 0)) {
        output.writeInt32(2, interval_);
      }
      if (((bitField0_ & 0x00000004) != 0)) {
        output.writeInt32(3, unknown1_);
      }
      for (int i = 0; i < sub_.size(); i++) {
        output.writeMessage(4, sub_.get(i));
      }
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(1, time_);
      }
      if (((bitField0_ & 0x00000002) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(2, interval_);
      }
      if (((bitField0_ & 0x00000004) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(3, unknown1_);
      }
      for (int i = 0; i < sub_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(4, sub_.get(i));
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof net.studioblueplanet.tomtomwatch.TrackerProto.Record6)) {
        return super.equals(obj);
      }
      net.studioblueplanet.tomtomwatch.TrackerProto.Record6 other = (net.studioblueplanet.tomtomwatch.TrackerProto.Record6) obj;

      if (hasTime() != other.hasTime()) return false;
      if (hasTime()) {
        if (getTime()
            != other.getTime()) return false;
      }
      if (hasInterval() != other.hasInterval()) return false;
      if (hasInterval()) {
        if (getInterval()
            != other.getInterval()) return false;
      }
      if (hasUnknown1() != other.hasUnknown1()) return false;
      if (hasUnknown1()) {
        if (getUnknown1()
            != other.getUnknown1()) return false;
      }
      if (!getSubList()
          .equals(other.getSubList())) return false;
      if (!unknownFields.equals(other.unknownFields)) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (hasTime()) {
        hash = (37 * hash) + TIME_FIELD_NUMBER;
        hash = (53 * hash) + getTime();
      }
      if (hasInterval()) {
        hash = (37 * hash) + INTERVAL_FIELD_NUMBER;
        hash = (53 * hash) + getInterval();
      }
      if (hasUnknown1()) {
        hash = (37 * hash) + UNKNOWN1_FIELD_NUMBER;
        hash = (53 * hash) + getUnknown1();
      }
      if (getSubCount() > 0) {
        hash = (37 * hash) + SUB_FIELD_NUMBER;
        hash = (53 * hash) + getSubList().hashCode();
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static net.studioblueplanet.tomtomwatch.TrackerProto.Record6 parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static net.studioblueplanet.tomtomwatch.TrackerProto.Record6 parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static net.studioblueplanet.tomtomwatch.TrackerProto.Record6 parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static net.studioblueplanet.tomtomwatch.TrackerProto.Record6 parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static net.studioblueplanet.tomtomwatch.TrackerProto.Record6 parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static net.studioblueplanet.tomtomwatch.TrackerProto.Record6 parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static net.studioblueplanet.tomtomwatch.TrackerProto.Record6 parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static net.studioblueplanet.tomtomwatch.TrackerProto.Record6 parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static net.studioblueplanet.tomtomwatch.TrackerProto.Record6 parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static net.studioblueplanet.tomtomwatch.TrackerProto.Record6 parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static net.studioblueplanet.tomtomwatch.TrackerProto.Record6 parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static net.studioblueplanet.tomtomwatch.TrackerProto.Record6 parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(net.studioblueplanet.tomtomwatch.TrackerProto.Record6 prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code tutorial.Record6}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:tutorial.Record6)
        net.studioblueplanet.tomtomwatch.TrackerProto.Record6OrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return net.studioblueplanet.tomtomwatch.TrackerProto.internal_static_tutorial_Record6_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return net.studioblueplanet.tomtomwatch.TrackerProto.internal_static_tutorial_Record6_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                net.studioblueplanet.tomtomwatch.TrackerProto.Record6.class, net.studioblueplanet.tomtomwatch.TrackerProto.Record6.Builder.class);
      }

      // Construct using net.studioblueplanet.tomtomwatch.TrackerProto.Record6.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
          getSubFieldBuilder();
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        time_ = 0;
        bitField0_ = (bitField0_ & ~0x00000001);
        interval_ = 0;
        bitField0_ = (bitField0_ & ~0x00000002);
        unknown1_ = 0;
        bitField0_ = (bitField0_ & ~0x00000004);
        if (subBuilder_ == null) {
          sub_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000008);
        } else {
          subBuilder_.clear();
        }
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return net.studioblueplanet.tomtomwatch.TrackerProto.internal_static_tutorial_Record6_descriptor;
      }

      @java.lang.Override
      public net.studioblueplanet.tomtomwatch.TrackerProto.Record6 getDefaultInstanceForType() {
        return net.studioblueplanet.tomtomwatch.TrackerProto.Record6.getDefaultInstance();
      }

      @java.lang.Override
      public net.studioblueplanet.tomtomwatch.TrackerProto.Record6 build() {
        net.studioblueplanet.tomtomwatch.TrackerProto.Record6 result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public net.studioblueplanet.tomtomwatch.TrackerProto.Record6 buildPartial() {
        net.studioblueplanet.tomtomwatch.TrackerProto.Record6 result = new net.studioblueplanet.tomtomwatch.TrackerProto.Record6(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) != 0)) {
          result.time_ = time_;
          to_bitField0_ |= 0x00000001;
        }
        if (((from_bitField0_ & 0x00000002) != 0)) {
          result.interval_ = interval_;
          to_bitField0_ |= 0x00000002;
        }
        if (((from_bitField0_ & 0x00000004) != 0)) {
          result.unknown1_ = unknown1_;
          to_bitField0_ |= 0x00000004;
        }
        if (subBuilder_ == null) {
          if (((bitField0_ & 0x00000008) != 0)) {
            sub_ = java.util.Collections.unmodifiableList(sub_);
            bitField0_ = (bitField0_ & ~0x00000008);
          }
          result.sub_ = sub_;
        } else {
          result.sub_ = subBuilder_.build();
        }
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof net.studioblueplanet.tomtomwatch.TrackerProto.Record6) {
          return mergeFrom((net.studioblueplanet.tomtomwatch.TrackerProto.Record6)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(net.studioblueplanet.tomtomwatch.TrackerProto.Record6 other) {
        if (other == net.studioblueplanet.tomtomwatch.TrackerProto.Record6.getDefaultInstance()) return this;
        if (other.hasTime()) {
          setTime(other.getTime());
        }
        if (other.hasInterval()) {
          setInterval(other.getInterval());
        }
        if (other.hasUnknown1()) {
          setUnknown1(other.getUnknown1());
        }
        if (subBuilder_ == null) {
          if (!other.sub_.isEmpty()) {
            if (sub_.isEmpty()) {
              sub_ = other.sub_;
              bitField0_ = (bitField0_ & ~0x00000008);
            } else {
              ensureSubIsMutable();
              sub_.addAll(other.sub_);
            }
            onChanged();
          }
        } else {
          if (!other.sub_.isEmpty()) {
            if (subBuilder_.isEmpty()) {
              subBuilder_.dispose();
              subBuilder_ = null;
              sub_ = other.sub_;
              bitField0_ = (bitField0_ & ~0x00000008);
              subBuilder_ = 
                com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                   getSubFieldBuilder() : null;
            } else {
              subBuilder_.addAllMessages(other.sub_);
            }
          }
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        if (!hasTime()) {
          return false;
        }
        if (!hasInterval()) {
          return false;
        }
        if (!hasUnknown1()) {
          return false;
        }
        for (int i = 0; i < getSubCount(); i++) {
          if (!getSub(i).isInitialized()) {
            return false;
          }
        }
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        net.studioblueplanet.tomtomwatch.TrackerProto.Record6 parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (net.studioblueplanet.tomtomwatch.TrackerProto.Record6) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private int time_ ;
      /**
       * <pre>
       * Epoch time in seconds, 900 s interval = 15 min
       * </pre>
       *
       * <code>required int32 time = 1;</code>
       */
      public boolean hasTime() {
        return ((bitField0_ & 0x00000001) != 0);
      }
      /**
       * <pre>
       * Epoch time in seconds, 900 s interval = 15 min
       * </pre>
       *
       * <code>required int32 time = 1;</code>
       */
      public int getTime() {
        return time_;
      }
      /**
       * <pre>
       * Epoch time in seconds, 900 s interval = 15 min
       * </pre>
       *
       * <code>required int32 time = 1;</code>
       */
      public Builder setTime(int value) {
        bitField0_ |= 0x00000001;
        time_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Epoch time in seconds, 900 s interval = 15 min
       * </pre>
       *
       * <code>required int32 time = 1;</code>
       */
      public Builder clearTime() {
        bitField0_ = (bitField0_ & ~0x00000001);
        time_ = 0;
        onChanged();
        return this;
      }

      private int interval_ ;
      /**
       * <pre>
       * Interval in seconds?? 14280=238 min = 3h58'??
       * </pre>
       *
       * <code>required int32 interval = 2;</code>
       */
      public boolean hasInterval() {
        return ((bitField0_ & 0x00000002) != 0);
      }
      /**
       * <pre>
       * Interval in seconds?? 14280=238 min = 3h58'??
       * </pre>
       *
       * <code>required int32 interval = 2;</code>
       */
      public int getInterval() {
        return interval_;
      }
      /**
       * <pre>
       * Interval in seconds?? 14280=238 min = 3h58'??
       * </pre>
       *
       * <code>required int32 interval = 2;</code>
       */
      public Builder setInterval(int value) {
        bitField0_ |= 0x00000002;
        interval_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Interval in seconds?? 14280=238 min = 3h58'??
       * </pre>
       *
       * <code>required int32 interval = 2;</code>
       */
      public Builder clearInterval() {
        bitField0_ = (bitField0_ & ~0x00000002);
        interval_ = 0;
        onChanged();
        return this;
      }

      private int unknown1_ ;
      /**
       * <code>required int32 unknown1 = 3;</code>
       */
      public boolean hasUnknown1() {
        return ((bitField0_ & 0x00000004) != 0);
      }
      /**
       * <code>required int32 unknown1 = 3;</code>
       */
      public int getUnknown1() {
        return unknown1_;
      }
      /**
       * <code>required int32 unknown1 = 3;</code>
       */
      public Builder setUnknown1(int value) {
        bitField0_ |= 0x00000004;
        unknown1_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required int32 unknown1 = 3;</code>
       */
      public Builder clearUnknown1() {
        bitField0_ = (bitField0_ & ~0x00000004);
        unknown1_ = 0;
        onChanged();
        return this;
      }

      private java.util.List<net.studioblueplanet.tomtomwatch.TrackerProto.Record6Sub> sub_ =
        java.util.Collections.emptyList();
      private void ensureSubIsMutable() {
        if (!((bitField0_ & 0x00000008) != 0)) {
          sub_ = new java.util.ArrayList<net.studioblueplanet.tomtomwatch.TrackerProto.Record6Sub>(sub_);
          bitField0_ |= 0x00000008;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilderV3<
          net.studioblueplanet.tomtomwatch.TrackerProto.Record6Sub, net.studioblueplanet.tomtomwatch.TrackerProto.Record6Sub.Builder, net.studioblueplanet.tomtomwatch.TrackerProto.Record6SubOrBuilder> subBuilder_;

      /**
       * <pre>
       * Some data
       * </pre>
       *
       * <code>repeated .tutorial.Record6Sub sub = 4;</code>
       */
      public java.util.List<net.studioblueplanet.tomtomwatch.TrackerProto.Record6Sub> getSubList() {
        if (subBuilder_ == null) {
          return java.util.Collections.unmodifiableList(sub_);
        } else {
          return subBuilder_.getMessageList();
        }
      }
      /**
       * <pre>
       * Some data
       * </pre>
       *
       * <code>repeated .tutorial.Record6Sub sub = 4;</code>
       */
      public int getSubCount() {
        if (subBuilder_ == null) {
          return sub_.size();
        } else {
          return subBuilder_.getCount();
        }
      }
      /**
       * <pre>
       * Some data
       * </pre>
       *
       * <code>repeated .tutorial.Record6Sub sub = 4;</code>
       */
      public net.studioblueplanet.tomtomwatch.TrackerProto.Record6Sub getSub(int index) {
        if (subBuilder_ == null) {
          return sub_.get(index);
        } else {
          return subBuilder_.getMessage(index);
        }
      }
      /**
       * <pre>
       * Some data
       * </pre>
       *
       * <code>repeated .tutorial.Record6Sub sub = 4;</code>
       */
      public Builder setSub(
          int index, net.studioblueplanet.tomtomwatch.TrackerProto.Record6Sub value) {
        if (subBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureSubIsMutable();
          sub_.set(index, value);
          onChanged();
        } else {
          subBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <pre>
       * Some data
       * </pre>
       *
       * <code>repeated .tutorial.Record6Sub sub = 4;</code>
       */
      public Builder setSub(
          int index, net.studioblueplanet.tomtomwatch.TrackerProto.Record6Sub.Builder builderForValue) {
        if (subBuilder_ == null) {
          ensureSubIsMutable();
          sub_.set(index, builderForValue.build());
          onChanged();
        } else {
          subBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * Some data
       * </pre>
       *
       * <code>repeated .tutorial.Record6Sub sub = 4;</code>
       */
      public Builder addSub(net.studioblueplanet.tomtomwatch.TrackerProto.Record6Sub value) {
        if (subBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureSubIsMutable();
          sub_.add(value);
          onChanged();
        } else {
          subBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <pre>
       * Some data
       * </pre>
       *
       * <code>repeated .tutorial.Record6Sub sub = 4;</code>
       */
      public Builder addSub(
          int index, net.studioblueplanet.tomtomwatch.TrackerProto.Record6Sub value) {
        if (subBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureSubIsMutable();
          sub_.add(index, value);
          onChanged();
        } else {
          subBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <pre>
       * Some data
       * </pre>
       *
       * <code>repeated .tutorial.Record6Sub sub = 4;</code>
       */
      public Builder addSub(
          net.studioblueplanet.tomtomwatch.TrackerProto.Record6Sub.Builder builderForValue) {
        if (subBuilder_ == null) {
          ensureSubIsMutable();
          sub_.add(builderForValue.build());
          onChanged();
        } else {
          subBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * Some data
       * </pre>
       *
       * <code>repeated .tutorial.Record6Sub sub = 4;</code>
       */
      public Builder addSub(
          int index, net.studioblueplanet.tomtomwatch.TrackerProto.Record6Sub.Builder builderForValue) {
        if (subBuilder_ == null) {
          ensureSubIsMutable();
          sub_.add(index, builderForValue.build());
          onChanged();
        } else {
          subBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * Some data
       * </pre>
       *
       * <code>repeated .tutorial.Record6Sub sub = 4;</code>
       */
      public Builder addAllSub(
          java.lang.Iterable<? extends net.studioblueplanet.tomtomwatch.TrackerProto.Record6Sub> values) {
        if (subBuilder_ == null) {
          ensureSubIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, sub_);
          onChanged();
        } else {
          subBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <pre>
       * Some data
       * </pre>
       *
       * <code>repeated .tutorial.Record6Sub sub = 4;</code>
       */
      public Builder clearSub() {
        if (subBuilder_ == null) {
          sub_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000008);
          onChanged();
        } else {
          subBuilder_.clear();
        }
        return this;
      }
      /**
       * <pre>
       * Some data
       * </pre>
       *
       * <code>repeated .tutorial.Record6Sub sub = 4;</code>
       */
      public Builder removeSub(int index) {
        if (subBuilder_ == null) {
          ensureSubIsMutable();
          sub_.remove(index);
          onChanged();
        } else {
          subBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <pre>
       * Some data
       * </pre>
       *
       * <code>repeated .tutorial.Record6Sub sub = 4;</code>
       */
      public net.studioblueplanet.tomtomwatch.TrackerProto.Record6Sub.Builder getSubBuilder(
          int index) {
        return getSubFieldBuilder().getBuilder(index);
      }
      /**
       * <pre>
       * Some data
       * </pre>
       *
       * <code>repeated .tutorial.Record6Sub sub = 4;</code>
       */
      public net.studioblueplanet.tomtomwatch.TrackerProto.Record6SubOrBuilder getSubOrBuilder(
          int index) {
        if (subBuilder_ == null) {
          return sub_.get(index);  } else {
          return subBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <pre>
       * Some data
       * </pre>
       *
       * <code>repeated .tutorial.Record6Sub sub = 4;</code>
       */
      public java.util.List<? extends net.studioblueplanet.tomtomwatch.TrackerProto.Record6SubOrBuilder> 
           getSubOrBuilderList() {
        if (subBuilder_ != null) {
          return subBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(sub_);
        }
      }
      /**
       * <pre>
       * Some data
       * </pre>
       *
       * <code>repeated .tutorial.Record6Sub sub = 4;</code>
       */
      public net.studioblueplanet.tomtomwatch.TrackerProto.Record6Sub.Builder addSubBuilder() {
        return getSubFieldBuilder().addBuilder(
            net.studioblueplanet.tomtomwatch.TrackerProto.Record6Sub.getDefaultInstance());
      }
      /**
       * <pre>
       * Some data
       * </pre>
       *
       * <code>repeated .tutorial.Record6Sub sub = 4;</code>
       */
      public net.studioblueplanet.tomtomwatch.TrackerProto.Record6Sub.Builder addSubBuilder(
          int index) {
        return getSubFieldBuilder().addBuilder(
            index, net.studioblueplanet.tomtomwatch.TrackerProto.Record6Sub.getDefaultInstance());
      }
      /**
       * <pre>
       * Some data
       * </pre>
       *
       * <code>repeated .tutorial.Record6Sub sub = 4;</code>
       */
      public java.util.List<net.studioblueplanet.tomtomwatch.TrackerProto.Record6Sub.Builder> 
           getSubBuilderList() {
        return getSubFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilderV3<
          net.studioblueplanet.tomtomwatch.TrackerProto.Record6Sub, net.studioblueplanet.tomtomwatch.TrackerProto.Record6Sub.Builder, net.studioblueplanet.tomtomwatch.TrackerProto.Record6SubOrBuilder> 
          getSubFieldBuilder() {
        if (subBuilder_ == null) {
          subBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
              net.studioblueplanet.tomtomwatch.TrackerProto.Record6Sub, net.studioblueplanet.tomtomwatch.TrackerProto.Record6Sub.Builder, net.studioblueplanet.tomtomwatch.TrackerProto.Record6SubOrBuilder>(
                  sub_,
                  ((bitField0_ & 0x00000008) != 0),
                  getParentForChildren(),
                  isClean());
          sub_ = null;
        }
        return subBuilder_;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:tutorial.Record6)
    }

    // @@protoc_insertion_point(class_scope:tutorial.Record6)
    private static final net.studioblueplanet.tomtomwatch.TrackerProto.Record6 DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new net.studioblueplanet.tomtomwatch.TrackerProto.Record6();
    }

    public static net.studioblueplanet.tomtomwatch.TrackerProto.Record6 getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    @java.lang.Deprecated public static final com.google.protobuf.Parser<Record6>
        PARSER = new com.google.protobuf.AbstractParser<Record6>() {
      @java.lang.Override
      public Record6 parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new Record6(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<Record6> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<Record6> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public net.studioblueplanet.tomtomwatch.TrackerProto.Record6 getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_tutorial_Root_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_tutorial_Root_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_tutorial_RootContainer_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_tutorial_RootContainer_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_tutorial_Metadata_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_tutorial_Metadata_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_tutorial_DataContainer_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_tutorial_DataContainer_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_tutorial_SubDataContainer_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_tutorial_SubDataContainer_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_tutorial_DeviceInfo_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_tutorial_DeviceInfo_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_tutorial_SoftwareVersion_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_tutorial_SoftwareVersion_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_tutorial_Unknown01_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_tutorial_Unknown01_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_tutorial_Unknown02_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_tutorial_Unknown02_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_tutorial_TrackRecord_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_tutorial_TrackRecord_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_tutorial_Record2_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_tutorial_Record2_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_tutorial_TagValueContainer_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_tutorial_TagValueContainer_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_tutorial_ValueContainer_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_tutorial_ValueContainer_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_tutorial_HeartRecord_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_tutorial_HeartRecord_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_tutorial_Record4_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_tutorial_Record4_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_tutorial_UserData_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_tutorial_UserData_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_tutorial_FitnessRecord_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_tutorial_FitnessRecord_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_tutorial_Record6Sub_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_tutorial_Record6Sub_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_tutorial_Record6_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_tutorial_Record6_fieldAccessorTable;

  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static  com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    java.lang.String[] descriptorData = {
      "\n\rtracker.proto\022\010tutorial\"6\n\004Root\022.\n\rroo" +
      "tContainer\030\001 \003(\0132\027.tutorial.RootContaine" +
      "r\"e\n\rRootContainer\022$\n\010metadata\030\007 \001(\0132\022.t" +
      "utorial.Metadata\022.\n\rdataContainer\030\010 \001(\0132" +
      "\027.tutorial.DataContainer\"2\n\010Metadata\022\024\n\014" +
      "manufacturer\030\001 \002(\007\022\020\n\010fileType\030\002 \002(\007\"E\n\r" +
      "DataContainer\0224\n\020subDataContainer\030\001 \002(\0132" +
      "\032.tutorial.SubDataContainer\"\260\002\n\020SubDataC" +
      "ontainer\022(\n\ndeviceInfo\030\001 \001(\0132\024.tutorial." +
      "DeviceInfo\022*\n\013trackRecord\030\002 \001(\0132\025.tutori" +
      "al.TrackRecord\022\"\n\007record2\030\003 \001(\0132\021.tutori" +
      "al.Record2\022\"\n\007record6\030\005 \001(\0132\021.tutorial.R" +
      "ecord6\022*\n\013heartRecord\030\006 \001(\0132\025.tutorial.H" +
      "eartRecord\022\"\n\007record4\030\007 \001(\0132\021.tutorial.R" +
      "ecord4\022.\n\rfitnessRecord\030\t \001(\0132\027.tutorial" +
      ".FitnessRecord\"b\n\nDeviceInfo\022\022\n\ndeviceNa" +
      "me\030\001 \002(\t\022\014\n\004year\030\002 \002(\007\0222\n\017softwareVersio" +
      "n\030\003 \002(\0132\031.tutorial.SoftwareVersion\"\244\001\n\017S" +
      "oftwareVersion\022\024\n\014majorVersion\030\001 \002(\005\022\025\n\r" +
      "mediumVersion\030\002 \002(\005\022\024\n\014minorVersion\030\003 \002(" +
      "\005\022&\n\tunknown01\030\004 \002(\0132\023.tutorial.Unknown0" +
      "1\022&\n\tunknown02\030\005 \001(\0132\023.tutorial.Unknown0" +
      "2\"\032\n\tUnknown01\022\r\n\005dummy\030\001 \001(\005\"\032\n\tUnknown" +
      "02\022\r\n\005dummy\030\001 \001(\005\"\332\001\n\013TrackRecord\022\020\n\010rec" +
      "ordId\030\001 \002(\005\022\014\n\004time\030\002 \002(\005\022\020\n\010timeZone\030\003 " +
      "\002(\005\022\020\n\010interval\030\004 \002(\005\022\r\n\005steps\030\005 \002(\005\022\016\n\006" +
      "active\030\006 \002(\005\022\020\n\010distance\030\007 \002(\005\022\014\n\004kcal\030\010" +
      " \002(\005\022\020\n\010kcalRest\030\t \002(\005\022\020\n\010unknown1\030\013 \002(\005" +
      "\022\021\n\tsleepTime\030\014 \001(\005\022\021\n\tsleepMode\030\r \001(\005\"\240" +
      "\001\n\007Record2\022\014\n\004time\030\001 \002(\007\022\020\n\010interval\030\002 \002" +
      "(\005\022-\n\010tagValue\030\003 \003(\0132\033.tutorial.TagValue" +
      "Container\022\020\n\010unknown1\030\004 \002(\005\022\020\n\010unknown2\030" +
      "\005 \002(\005\022\020\n\010unknown3\030\006 \001(\005\022\020\n\010unknown4\030h \001(" +
      "\007\"R\n\021TagValueContainer\022\013\n\003tag\030\001 \002(\005\0220\n\016v" +
      "alueContainer\030\002 \002(\0132\030.tutorial.ValueCont" +
      "ainer\"\037\n\016ValueContainer\022\r\n\005value\030\003 \002(\005\"b" +
      "\n\013HeartRecord\022\014\n\004time\030\001 \002(\007\022\020\n\010interval\030" +
      "\002 \002(\005\022\021\n\theartRate\030\003 \002(\005\022\017\n\007value01\030\004 \002(" +
      "\005\022\017\n\007value02\030\005 \002(\005\"8\n\007Record4\022\014\n\004time\030\001 " +
      "\002(\007\022\020\n\010interval\030\002 \002(\005\022\r\n\005value\030\003 \003(\005\"\274\002\n" +
      "\010UserData\022\017\n\007version\030\001 \002(\t\022\020\n\010unknown1\030\002" +
      " \002(\005\022\020\n\010unknown2\030\003 \002(\005\022\020\n\010unknown3\030\004 \002(\005" +
      "\022\016\n\006length\030\005 \002(\005\022\016\n\006weight\030\006 \002(\005\022\020\n\010unkn" +
      "own4\030\007 \002(\005\022\020\n\010unknown5\030\010 \002(\005\022\020\n\010unknown6" +
      "\030\t \002(\005\022\020\n\010unknown7\030\n \002(\005\022\020\n\010unknown8\030\013 \002" +
      "(\005\022\020\n\010unknown9\030\014 \002(\005\022\021\n\tunknown10\030\r \002(\005\022" +
      "\021\n\tunknown13\030\020 \002(\005\022\021\n\tunknown14\030\021 \002(\005\022\021\n" +
      "\tunknown15\030\022 \002(\005\022\021\n\tunknown16\030\023 \002(\005\"\337\001\n\r" +
      "FitnessRecord\022\014\n\004time\030\002 \002(\005\022\020\n\010interval\030" +
      "\003 \002(\005\022$\n\010userData\030\005 \001(\0132\022.tutorial.UserD" +
      "ata\022\020\n\010unknown1\030\007 \001(\005\022\020\n\010unknown2\030\010 \001(\005\022" +
      "\020\n\010unknown3\030\n \001(\005\022\020\n\010unknown4\030\013 \001(\005\022\020\n\010u" +
      "nknown5\030\014 \001(\005\022\026\n\016fitnessPoints1\030\017 \002(\005\022\026\n" +
      "\016fitnessPoints2\030\020 \002(\005\"B\n\nRecord6Sub\022\020\n\010u" +
      "nknown1\030\001 \002(\005\022\020\n\010unknown2\030\002 \002(\005\022\020\n\010unkno" +
      "wn3\030\003 \002(\005\"^\n\007Record6\022\014\n\004time\030\001 \002(\005\022\020\n\010in" +
      "terval\030\002 \002(\005\022\020\n\010unknown1\030\003 \002(\005\022!\n\003sub\030\004 " +
      "\003(\0132\024.tutorial.Record6SubB0\n net.studiob" +
      "lueplanet.tomtomwatchB\014TrackerProto"
    };
    descriptor = com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
        });
    internal_static_tutorial_Root_descriptor =
      getDescriptor().getMessageTypes().get(0);
    internal_static_tutorial_Root_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_tutorial_Root_descriptor,
        new java.lang.String[] { "RootContainer", });
    internal_static_tutorial_RootContainer_descriptor =
      getDescriptor().getMessageTypes().get(1);
    internal_static_tutorial_RootContainer_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_tutorial_RootContainer_descriptor,
        new java.lang.String[] { "Metadata", "DataContainer", });
    internal_static_tutorial_Metadata_descriptor =
      getDescriptor().getMessageTypes().get(2);
    internal_static_tutorial_Metadata_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_tutorial_Metadata_descriptor,
        new java.lang.String[] { "Manufacturer", "FileType", });
    internal_static_tutorial_DataContainer_descriptor =
      getDescriptor().getMessageTypes().get(3);
    internal_static_tutorial_DataContainer_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_tutorial_DataContainer_descriptor,
        new java.lang.String[] { "SubDataContainer", });
    internal_static_tutorial_SubDataContainer_descriptor =
      getDescriptor().getMessageTypes().get(4);
    internal_static_tutorial_SubDataContainer_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_tutorial_SubDataContainer_descriptor,
        new java.lang.String[] { "DeviceInfo", "TrackRecord", "Record2", "Record6", "HeartRecord", "Record4", "FitnessRecord", });
    internal_static_tutorial_DeviceInfo_descriptor =
      getDescriptor().getMessageTypes().get(5);
    internal_static_tutorial_DeviceInfo_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_tutorial_DeviceInfo_descriptor,
        new java.lang.String[] { "DeviceName", "Year", "SoftwareVersion", });
    internal_static_tutorial_SoftwareVersion_descriptor =
      getDescriptor().getMessageTypes().get(6);
    internal_static_tutorial_SoftwareVersion_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_tutorial_SoftwareVersion_descriptor,
        new java.lang.String[] { "MajorVersion", "MediumVersion", "MinorVersion", "Unknown01", "Unknown02", });
    internal_static_tutorial_Unknown01_descriptor =
      getDescriptor().getMessageTypes().get(7);
    internal_static_tutorial_Unknown01_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_tutorial_Unknown01_descriptor,
        new java.lang.String[] { "Dummy", });
    internal_static_tutorial_Unknown02_descriptor =
      getDescriptor().getMessageTypes().get(8);
    internal_static_tutorial_Unknown02_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_tutorial_Unknown02_descriptor,
        new java.lang.String[] { "Dummy", });
    internal_static_tutorial_TrackRecord_descriptor =
      getDescriptor().getMessageTypes().get(9);
    internal_static_tutorial_TrackRecord_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_tutorial_TrackRecord_descriptor,
        new java.lang.String[] { "RecordId", "Time", "TimeZone", "Interval", "Steps", "Active", "Distance", "Kcal", "KcalRest", "Unknown1", "SleepTime", "SleepMode", });
    internal_static_tutorial_Record2_descriptor =
      getDescriptor().getMessageTypes().get(10);
    internal_static_tutorial_Record2_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_tutorial_Record2_descriptor,
        new java.lang.String[] { "Time", "Interval", "TagValue", "Unknown1", "Unknown2", "Unknown3", "Unknown4", });
    internal_static_tutorial_TagValueContainer_descriptor =
      getDescriptor().getMessageTypes().get(11);
    internal_static_tutorial_TagValueContainer_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_tutorial_TagValueContainer_descriptor,
        new java.lang.String[] { "Tag", "ValueContainer", });
    internal_static_tutorial_ValueContainer_descriptor =
      getDescriptor().getMessageTypes().get(12);
    internal_static_tutorial_ValueContainer_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_tutorial_ValueContainer_descriptor,
        new java.lang.String[] { "Value", });
    internal_static_tutorial_HeartRecord_descriptor =
      getDescriptor().getMessageTypes().get(13);
    internal_static_tutorial_HeartRecord_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_tutorial_HeartRecord_descriptor,
        new java.lang.String[] { "Time", "Interval", "HeartRate", "Value01", "Value02", });
    internal_static_tutorial_Record4_descriptor =
      getDescriptor().getMessageTypes().get(14);
    internal_static_tutorial_Record4_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_tutorial_Record4_descriptor,
        new java.lang.String[] { "Time", "Interval", "Value", });
    internal_static_tutorial_UserData_descriptor =
      getDescriptor().getMessageTypes().get(15);
    internal_static_tutorial_UserData_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_tutorial_UserData_descriptor,
        new java.lang.String[] { "Version", "Unknown1", "Unknown2", "Unknown3", "Length", "Weight", "Unknown4", "Unknown5", "Unknown6", "Unknown7", "Unknown8", "Unknown9", "Unknown10", "Unknown13", "Unknown14", "Unknown15", "Unknown16", });
    internal_static_tutorial_FitnessRecord_descriptor =
      getDescriptor().getMessageTypes().get(16);
    internal_static_tutorial_FitnessRecord_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_tutorial_FitnessRecord_descriptor,
        new java.lang.String[] { "Time", "Interval", "UserData", "Unknown1", "Unknown2", "Unknown3", "Unknown4", "Unknown5", "FitnessPoints1", "FitnessPoints2", });
    internal_static_tutorial_Record6Sub_descriptor =
      getDescriptor().getMessageTypes().get(17);
    internal_static_tutorial_Record6Sub_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_tutorial_Record6Sub_descriptor,
        new java.lang.String[] { "Unknown1", "Unknown2", "Unknown3", });
    internal_static_tutorial_Record6_descriptor =
      getDescriptor().getMessageTypes().get(18);
    internal_static_tutorial_Record6_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_tutorial_Record6_descriptor,
        new java.lang.String[] { "Time", "Interval", "Unknown1", "Sub", });
  }

  // @@protoc_insertion_point(outer_class_scope)
}
