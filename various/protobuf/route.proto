//#################################################################################################
//
// Definition file for the TomTom routes (files with ID 0x00b8nnnn). A route is the result of 
// trackplanning by converting and uploading GPX track files.
//
//#################################################################################################

syntax = "proto2";

package tutorial;

option java_package         = "net.studioblueplanet.tomtomwatch";
option java_outer_classname = "RouteProto";

//#################################################################################################
// ROOT level
//#################################################################################################
message Root
{
  repeated RootContainer        SubDataContainer             =1;
}

//#################################################################################################
// 1st level: root container
//#################################################################################################
message RootContainer
{
  optional Metadata             metadata            =7;
  optional DataContainer        dataContainer       =8;
}

//#################################################################################################
// 2nd level: metadata. Containing just two ints having the same value. Occurs often in one file
//#################################################################################################
message Metadata
{
  required fixed32              manufacturer      =1;  // always 0x1234DAEB
  required fixed32              fileType          =2;  // 0x00070100 for route files
}

//#################################################################################################
// 2nd level: data container. Contains various types of data
//#################################################################################################
message DataContainer
{
  required SubDataContainer     subDataContainer  =1; 
}

//#################################################################################################
// 3rd level: sub data container
//#################################################################################################
message SubDataContainer
{
  required TrackMetaData        trackMetadata       =1;
  repeated StartCoordinate      coordinate          =2;
  required SegmentData          data                =3;
}

//#################################################################################################
// 4th level: Some information on the route
//#################################################################################################
message TrackMetaData
{
  required string               name                =1;
  required BoundingBox          box                 =2;
  required bytes                time                =3;
}

//#################################################################################################
// 4th level: Start coordinate
//#################################################################################################
message StartCoordinate
{
  required Coordinate           coordinate          =1;
  required int32                index               =2;
}

//#################################################################################################
// 4th level: Segment section
//#################################################################################################
message SegmentData
{
  required int32                numberOfSegments    =1;
  repeated Segment              data                =2;
}

// Bounding box enclosing the route
message BoundingBox
{
  required LatLon               latDown             =1;
  required LatLon               lonLeft             =2;
  required LatLon               latUp               =3;
  required LatLon               lonRight            =4;
}

// Route segment
message Segment
{
  required int32                numberOfCoordinates =1;
  repeated CoordinateData       data                =2;
}

// Coordinate container
message CoordinateData
{
  required Coordinate           coordinate          =1;
}

// Container
message Coordinate
{
  required LatLon               lat                 =1;
  required LatLon               lon                 =2;  
}

// Lat lon
message LatLon
{
  required fixed32              value               =1;
}






